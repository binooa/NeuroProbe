Iteration with GEMM: 1
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10283 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  98392 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 252576 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0048 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0029 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     53 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  19386 |
|                DRAM_WRITES               | MBOX0C2 |   1562 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0014 |
|        Runtime unhalted [s]       | 4.271476e-05 |
|            Clock [MHz]            |     897.3244 |
|                CPI                |       9.5684 |
|             Energy [J]            |       0.0048 |
|             Power [W]             |       3.4801 |
|          Energy DRAM [J]          |       0.0029 |
|           Power DRAM [W]          |       2.0970 |
|            DP [MFLOP/s]           |       0.0387 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0387 |
|  Memory load bandwidth [MBytes/s] |     906.9599 |
|  Memory load data volume [GBytes] |       0.0012 |
| Memory evict bandwidth [MBytes/s] |      73.0770 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     980.0369 |
|    Memory data volume [GBytes]    |       0.0013 |
|       Operational intensity       | 3.953241e-05 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration with GEMM: 2
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10217 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  91407 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 234432 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0089 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0029 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     52 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  10911 |
|                DRAM_WRITES               | MBOX0C2 |   1252 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0013 |
|        Runtime unhalted [s]       | 3.967488e-05 |
|            Clock [MHz]            |     898.3102 |
|                CPI                |       8.9466 |
|             Energy [J]            |       0.0089 |
|             Power [W]             |       6.9620 |
|          Energy DRAM [J]          |       0.0029 |
|           Power DRAM [W]          |       2.2412 |
|            DP [MFLOP/s]           |       0.0406 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0406 |
|  Memory load bandwidth [MBytes/s] |     545.5632 |
|  Memory load data volume [GBytes] |       0.0007 |
| Memory evict bandwidth [MBytes/s] |      62.6015 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     608.1647 |
|    Memory data volume [GBytes]    |       0.0008 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration with GEMM: 3
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10256 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  95683 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 245376 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0085 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0043 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     53 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  17724 |
|                DRAM_WRITES               | MBOX0C2 |   1874 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0014 |
|        Runtime unhalted [s]       | 4.154519e-05 |
|            Clock [MHz]            |     898.0835 |
|                CPI                |       9.3295 |
|             Energy [J]            |       0.0085 |
|             Power [W]             |       6.1815 |
|          Energy DRAM [J]          |       0.0043 |
|           Power DRAM [W]          |       3.1349 |
|            DP [MFLOP/s]           |       0.0383 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0383 |
|  Memory load bandwidth [MBytes/s] |     820.5912 |
|  Memory load data volume [GBytes] |       0.0011 |
| Memory evict bandwidth [MBytes/s] |      86.7630 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     907.3543 |
|    Memory data volume [GBytes]    |       0.0013 |
|       Operational intensity       | 4.225559e-05 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration with GEMM: 4
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10275 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  92758 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 238176 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0059 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0044 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     55 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  19501 |
|                DRAM_WRITES               | MBOX0C2 |   1342 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0013 |
|        Runtime unhalted [s]       | 4.026049e-05 |
|            Clock [MHz]            |     897.2753 |
|                CPI                |       9.0275 |
|             Energy [J]            |       0.0059 |
|             Power [W]             |       4.5816 |
|          Energy DRAM [J]          |       0.0044 |
|           Power DRAM [W]          |       3.4008 |
|            DP [MFLOP/s]           |       0.0426 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0426 |
|  Memory load bandwidth [MBytes/s] |     965.8298 |
|  Memory load data volume [GBytes] |       0.0012 |
| Memory evict bandwidth [MBytes/s] |      66.4655 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |    1032.2953 |
|    Memory data volume [GBytes]    |       0.0013 |
|       Operational intensity       | 4.123087e-05 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration with GEMM: 5
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10281 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  86539 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 221856 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0063 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0029 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     54 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  11509 |
|                DRAM_WRITES               | MBOX0C2 |   1454 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0012 |
|        Runtime unhalted [s]       | 3.756112e-05 |
|            Clock [MHz]            |     898.6985 |
|                CPI                |       8.4174 |
|             Energy [J]            |       0.0063 |
|             Power [W]             |       5.2117 |
|          Energy DRAM [J]          |       0.0029 |
|           Power DRAM [W]          |       2.4054 |
|            DP [MFLOP/s]           |       0.0443 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0443 |
|  Memory load bandwidth [MBytes/s] |     604.7622 |
|  Memory load data volume [GBytes] |       0.0007 |
| Memory evict bandwidth [MBytes/s] |      76.4032 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     681.1654 |
|    Memory data volume [GBytes]    |       0.0008 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration with GEMM: 1
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10275 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  87446 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 224256 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0051 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0028 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     57 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  15533 |
|                DRAM_WRITES               | MBOX0C2 |   1303 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0012 |
|        Runtime unhalted [s]       | 3.795481e-05 |
|            Clock [MHz]            |     898.3984 |
|                CPI                |       8.5106 |
|             Energy [J]            |       0.0051 |
|             Power [W]             |       4.0840 |
|          Energy DRAM [J]          |       0.0028 |
|           Power DRAM [W]          |       2.2634 |
|            DP [MFLOP/s]           |       0.0460 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0460 |
|  Memory load bandwidth [MBytes/s] |     801.4268 |
|  Memory load data volume [GBytes] |       0.0010 |
| Memory evict bandwidth [MBytes/s] |      67.2284 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     868.6552 |
|    Memory data volume [GBytes]    |       0.0011 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration with GEMM: 2
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10248 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  92730 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 238560 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0056 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0029 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     54 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  19406 |
|                DRAM_WRITES               | MBOX0C2 |   1398 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0013 |
|        Runtime unhalted [s]       | 4.024845e-05 |
|            Clock [MHz]            |     895.5580 |
|                CPI                |       9.0486 |
|             Energy [J]            |       0.0056 |
|             Power [W]             |       4.3145 |
|          Energy DRAM [J]          |       0.0029 |
|           Power DRAM [W]          |       2.2510 |
|            DP [MFLOP/s]           |       0.0415 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0415 |
|  Memory load bandwidth [MBytes/s] |     954.2787 |
|  Memory load data volume [GBytes] |       0.0012 |
| Memory evict bandwidth [MBytes/s] |      68.7458 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |    1023.0245 |
|    Memory data volume [GBytes]    |       0.0013 |
|       Operational intensity       | 4.055710e-05 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration with GEMM: 3
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10256 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  89749 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 188352 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0067 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0030 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     55 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  11944 |
|                DRAM_WRITES               | MBOX0C2 |   1575 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0011 |
|        Runtime unhalted [s]       | 3.895476e-05 |
|            Clock [MHz]            |    1097.8132 |
|                CPI                |       8.7509 |
|             Energy [J]            |       0.0067 |
|             Power [W]             |       6.2624 |
|          Energy DRAM [J]          |       0.0030 |
|           Power DRAM [W]          |       2.8152 |
|            DP [MFLOP/s]           |       0.0518 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0518 |
|  Memory load bandwidth [MBytes/s] |     719.5563 |
|  Memory load data volume [GBytes] |       0.0008 |
| Memory evict bandwidth [MBytes/s] |      94.8846 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     814.4409 |
|    Memory data volume [GBytes]    |       0.0009 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration with GEMM: 4
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10261 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  89548 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 229344 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0058 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0029 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     52 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  20448 |
|                DRAM_WRITES               | MBOX0C2 |   1978 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0013 |
|        Runtime unhalted [s]       | 3.886717e-05 |
|            Clock [MHz]            |     899.5836 |
|                CPI                |       8.7270 |
|             Energy [J]            |       0.0058 |
|             Power [W]             |       4.5708 |
|          Energy DRAM [J]          |       0.0029 |
|           Power DRAM [W]          |       2.2613 |
|            DP [MFLOP/s]           |       0.0410 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0410 |
|  Memory load bandwidth [MBytes/s] |    1031.6189 |
|  Memory load data volume [GBytes] |       0.0013 |
| Memory evict bandwidth [MBytes/s] |      99.7918 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |    1131.4107 |
|    Memory data volume [GBytes]    |       0.0014 |
|       Operational intensity       | 3.623027e-05 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration with GEMM: 5
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10268 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 101216 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 259968 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0079 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0043 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     54 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  21578 |
|                DRAM_WRITES               | MBOX0C2 |   1354 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0015 |
|        Runtime unhalted [s]       | 4.393145e-05 |
|            Clock [MHz]            |     897.0216 |
|                CPI                |       9.8574 |
|             Energy [J]            |       0.0079 |
|             Power [W]             |       5.3647 |
|          Energy DRAM [J]          |       0.0043 |
|           Power DRAM [W]          |       2.9300 |
|            DP [MFLOP/s]           |       0.0365 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0365 |
|  Memory load bandwidth [MBytes/s] |     933.7200 |
|  Memory load data volume [GBytes] |       0.0014 |
| Memory evict bandwidth [MBytes/s] |      58.5901 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     992.3101 |
|    Memory data volume [GBytes]    |       0.0015 |
|       Operational intensity       | 3.679356e-05 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration with GEMM: 1
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10271 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  94840 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 199200 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0063 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0029 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     53 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  12343 |
|                DRAM_WRITES               | MBOX0C2 |   1549 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0011 |
|        Runtime unhalted [s]       | 4.117839e-05 |
|            Clock [MHz]            |    1096.5399 |
|                CPI                |       9.2338 |
|             Energy [J]            |       0.0063 |
|             Power [W]             |       5.6293 |
|          Energy DRAM [J]          |       0.0029 |
|           Power DRAM [W]          |       2.5981 |
|            DP [MFLOP/s]           |       0.0470 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0470 |
|  Memory load bandwidth [MBytes/s] |     700.5529 |
|  Memory load data volume [GBytes] |       0.0008 |
| Memory evict bandwidth [MBytes/s] |      87.9168 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     788.4697 |
|    Memory data volume [GBytes]    |       0.0009 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration with GEMM: 2
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10241 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  98079 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 251424 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0051 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0029 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     53 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  11918 |
|                DRAM_WRITES               | MBOX0C2 |   1571 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0014 |
|        Runtime unhalted [s]       | 4.256993e-05 |
|            Clock [MHz]            |     898.7571 |
|                CPI                |       9.5771 |
|             Energy [J]            |       0.0051 |
|             Power [W]             |       3.6024 |
|          Energy DRAM [J]          |       0.0029 |
|           Power DRAM [W]          |       2.0833 |
|            DP [MFLOP/s]           |       0.0377 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0377 |
|  Memory load bandwidth [MBytes/s] |     542.3900 |
|  Memory load data volume [GBytes] |       0.0008 |
| Memory evict bandwidth [MBytes/s] |      71.4964 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     613.8864 |
|    Memory data volume [GBytes]    |       0.0009 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration with GEMM: 3
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10231 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  93657 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 240192 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0093 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0044 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     52 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  22700 |
|                DRAM_WRITES               | MBOX0C2 |   1957 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0013 |
|        Runtime unhalted [s]       | 4.065058e-05 |
|            Clock [MHz]            |     898.3700 |
|                CPI                |       9.1542 |
|             Energy [J]            |       0.0093 |
|             Power [W]             |       7.2675 |
|          Energy DRAM [J]          |       0.0044 |
|           Power DRAM [W]          |       3.4425 |
|            DP [MFLOP/s]           |       0.0407 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0407 |
|  Memory load bandwidth [MBytes/s] |    1138.0693 |
|  Memory load data volume [GBytes] |       0.0015 |
| Memory evict bandwidth [MBytes/s] |      98.1146 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |    1236.1839 |
|    Memory data volume [GBytes]    |       0.0016 |
|       Operational intensity       | 3.295210e-05 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration with GEMM: 4
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10231 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 104124 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 267264 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0093 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0035 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     55 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  65727 |
|                DRAM_WRITES               | MBOX0C2 |   8543 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0014 |
|        Runtime unhalted [s]       | 4.520070e-05 |
|            Clock [MHz]            |     897.4620 |
|                CPI                |      10.1773 |
|             Energy [J]            |       0.0093 |
|             Power [W]             |       6.4891 |
|          Energy DRAM [J]          |       0.0035 |
|           Power DRAM [W]          |       2.4175 |
|            DP [MFLOP/s]           |       0.0382 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0382 |
|  Memory load bandwidth [MBytes/s] |    2923.0429 |
|  Memory load data volume [GBytes] |       0.0042 |
| Memory evict bandwidth [MBytes/s] |     379.9284 |
| Memory evict data volume [GBytes] |       0.0005 |
|    Memory bandwidth [MBytes/s]    |    3302.9714 |
|    Memory data volume [GBytes]    |       0.0048 |
|       Operational intensity       | 1.157096e-05 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration with GEMM: 5
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10268 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  95589 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 245088 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0053 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0031 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     54 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  26581 |
|                DRAM_WRITES               | MBOX0C2 |   3417 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0012 |
|        Runtime unhalted [s]       | 4.148916e-05 |
|            Clock [MHz]            |     898.5850 |
|                CPI                |       9.3094 |
|             Energy [J]            |       0.0053 |
|             Power [W]             |       4.3125 |
|          Energy DRAM [J]          |       0.0031 |
|           Power DRAM [W]          |       2.4784 |
|            DP [MFLOP/s]           |       0.0439 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0439 |
|  Memory load bandwidth [MBytes/s] |    1381.5905 |
|  Memory load data volume [GBytes] |       0.0017 |
| Memory evict bandwidth [MBytes/s] |     177.6041 |
| Memory evict data volume [GBytes] |       0.0002 |
|    Memory bandwidth [MBytes/s]    |    1559.1946 |
|    Memory data volume [GBytes]    |       0.0019 |
|       Operational intensity       | 2.812688e-05 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration with GEMM: 1
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10227 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 101338 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 259872 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0078 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0044 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     52 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  22340 |
|                DRAM_WRITES               | MBOX0C2 |   2119 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0014 |
|        Runtime unhalted [s]       | 4.398528e-05 |
|            Clock [MHz]            |     898.4167 |
|                CPI                |       9.9089 |
|             Energy [J]            |       0.0078 |
|             Power [W]             |       5.6744 |
|          Energy DRAM [J]          |       0.0044 |
|           Power DRAM [W]          |       3.1918 |
|            DP [MFLOP/s]           |       0.0378 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0378 |
|  Memory load bandwidth [MBytes/s] |    1038.4625 |
|  Memory load data volume [GBytes] |       0.0014 |
| Memory evict bandwidth [MBytes/s] |      98.5005 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |    1136.9630 |
|    Memory data volume [GBytes]    |       0.0016 |
|       Operational intensity       | 3.321886e-05 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration with GEMM: 2
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10250 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  85704 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 220992 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0082 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0043 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     52 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  11138 |
|                DRAM_WRITES               | MBOX0C2 |   1216 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0012 |
|        Runtime unhalted [s]       | 3.720616e-05 |
|            Clock [MHz]            |     893.3277 |
|                CPI                |       8.3614 |
|             Energy [J]            |       0.0082 |
|             Power [W]             |       6.5752 |
|          Energy DRAM [J]          |       0.0043 |
|           Power DRAM [W]          |       3.4348 |
|            DP [MFLOP/s]           |       0.0418 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0418 |
|  Memory load bandwidth [MBytes/s] |     573.0755 |
|  Memory load data volume [GBytes] |       0.0007 |
| Memory evict bandwidth [MBytes/s] |      62.5660 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     635.6414 |
|    Memory data volume [GBytes]    |       0.0008 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration with GEMM: 3
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10274 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  89539 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 229344 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0052 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0029 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     53 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  18157 |
|                DRAM_WRITES               | MBOX0C2 |   1396 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0012 |
|        Runtime unhalted [s]       | 3.886326e-05 |
|            Clock [MHz]            |     899.4932 |
|                CPI                |       8.7151 |
|             Energy [J]            |       0.0052 |
|             Power [W]             |       4.3232 |
|          Energy DRAM [J]          |       0.0029 |
|           Power DRAM [W]          |       2.3905 |
|            DP [MFLOP/s]           |       0.0442 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0442 |
|  Memory load bandwidth [MBytes/s] |     968.3530 |
|  Memory load data volume [GBytes] |       0.0012 |
| Memory evict bandwidth [MBytes/s] |      74.4518 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |    1042.8048 |
|    Memory data volume [GBytes]    |       0.0013 |
|       Operational intensity       | 4.235284e-05 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration with GEMM: 4
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10235 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  88587 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 227040 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0056 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0029 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     53 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  11868 |
|                DRAM_WRITES               | MBOX0C2 |   1316 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0012 |
|        Runtime unhalted [s]       | 3.845037e-05 |
|            Clock [MHz]            |     898.9531 |
|                CPI                |       8.6553 |
|             Energy [J]            |       0.0056 |
|             Power [W]             |       4.6116 |
|          Energy DRAM [J]          |       0.0029 |
|           Power DRAM [W]          |       2.3818 |
|            DP [MFLOP/s]           |       0.0440 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0440 |
|  Memory load bandwidth [MBytes/s] |     630.6554 |
|  Memory load data volume [GBytes] |       0.0008 |
| Memory evict bandwidth [MBytes/s] |      69.9311 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     700.5865 |
|    Memory data volume [GBytes]    |       0.0008 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration with GEMM: 5
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10259 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  99847 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 208800 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0063 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0030 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     54 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  20276 |
|                DRAM_WRITES               | MBOX0C2 |   1683 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0011 |
|        Runtime unhalted [s]       | 4.333732e-05 |
|            Clock [MHz]            |    1101.7358 |
|                CPI                |       9.7326 |
|             Energy [J]            |       0.0063 |
|             Power [W]             |       5.5512 |
|          Energy DRAM [J]          |       0.0030 |
|           Power DRAM [W]          |       2.6155 |
|            DP [MFLOP/s]           |       0.0472 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0472 |
|  Memory load bandwidth [MBytes/s] |    1134.8513 |
|  Memory load data volume [GBytes] |       0.0013 |
| Memory evict bandwidth [MBytes/s] |      94.1978 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |    1229.0491 |
|    Memory data volume [GBytes]    |       0.0014 |
|       Operational intensity       | 3.842388e-05 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration with GEMM: 1
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10254 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  96325 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 246720 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0081 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0043 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     53 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  12856 |
|                DRAM_WRITES               | MBOX0C2 |   1135 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0015 |
|        Runtime unhalted [s]       | 4.181849e-05 |
|            Clock [MHz]            |     899.3016 |
|                CPI                |       9.3939 |
|             Energy [J]            |       0.0081 |
|             Power [W]             |       5.4337 |
|          Energy DRAM [J]          |       0.0043 |
|           Power DRAM [W]          |       2.8599 |
|            DP [MFLOP/s]           |       0.0355 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0355 |
|  Memory load bandwidth [MBytes/s] |     550.7470 |
|  Memory load data volume [GBytes] |       0.0008 |
| Memory evict bandwidth [MBytes/s] |      48.6230 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     599.3701 |
|    Memory data volume [GBytes]    |       0.0009 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration with GEMM: 2
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10300 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 103176 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 216192 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0055 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0029 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     55 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  22416 |
|                DRAM_WRITES               | MBOX0C2 |   1985 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0013 |
|        Runtime unhalted [s]       | 4.478226e-05 |
|            Clock [MHz]            |    1099.5419 |
|                CPI                |      10.0171 |
|             Energy [J]            |       0.0055 |
|             Power [W]             |       4.3941 |
|          Energy DRAM [J]          |       0.0029 |
|           Power DRAM [W]          |       2.3435 |
|            DP [MFLOP/s]           |       0.0440 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0440 |
|  Memory load bandwidth [MBytes/s] |    1147.5786 |
|  Memory load data volume [GBytes] |       0.0014 |
| Memory evict bandwidth [MBytes/s] |     101.6213 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |    1249.1999 |
|    Memory data volume [GBytes]    |       0.0016 |
|       Operational intensity       | 3.521884e-05 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration with GEMM: 3
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10276 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 101091 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 260160 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0078 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0043 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     54 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  12012 |
|                DRAM_WRITES               | MBOX0C2 |   1469 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0014 |
|        Runtime unhalted [s]       | 4.389045e-05 |
|            Clock [MHz]            |     894.9823 |
|                CPI                |       9.8376 |
|             Energy [J]            |       0.0078 |
|             Power [W]             |       5.5133 |
|          Energy DRAM [J]          |       0.0043 |
|           Power DRAM [W]          |       3.0581 |
|            DP [MFLOP/s]           |       0.0381 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0381 |
|  Memory load bandwidth [MBytes/s] |     542.5171 |
|  Memory load data volume [GBytes] |       0.0008 |
| Memory evict bandwidth [MBytes/s] |      66.3468 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     608.8639 |
|    Memory data volume [GBytes]    |       0.0009 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration with GEMM: 4
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10237 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  90757 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 232128 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0062 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0029 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     55 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  12421 |
|                DRAM_WRITES               | MBOX0C2 |   1329 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0013 |
|        Runtime unhalted [s]       | 3.940262e-05 |
|            Clock [MHz]            |     900.5496 |
|                CPI                |       8.8656 |
|             Energy [J]            |       0.0062 |
|             Power [W]             |       4.8731 |
|          Energy DRAM [J]          |       0.0029 |
|           Power DRAM [W]          |       2.2932 |
|            DP [MFLOP/s]           |       0.0431 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0431 |
|  Memory load bandwidth [MBytes/s] |     622.2510 |
|  Memory load data volume [GBytes] |       0.0008 |
| Memory evict bandwidth [MBytes/s] |      66.5785 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     688.8295 |
|    Memory data volume [GBytes]    |       0.0009 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration with GEMM: 5
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10229 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  96859 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 203328 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0057 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0029 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     52 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  13261 |
|                DRAM_WRITES               | MBOX0C2 |   1267 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0012 |
|        Runtime unhalted [s]       | 4.204155e-05 |
|            Clock [MHz]            |    1097.4989 |
|                CPI                |       9.4691 |
|             Energy [J]            |       0.0057 |
|             Power [W]             |       4.6944 |
|          Energy DRAM [J]          |       0.0029 |
|           Power DRAM [W]          |       2.3472 |
|            DP [MFLOP/s]           |       0.0425 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0425 |
|  Memory load bandwidth [MBytes/s] |     694.4269 |
|  Memory load data volume [GBytes] |       0.0008 |
| Memory evict bandwidth [MBytes/s] |      66.3479 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     760.7747 |
|    Memory data volume [GBytes]    |       0.0009 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration with GEMM: 1
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10213 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  97596 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 250752 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0054 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0029 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     53 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  24093 |
|                DRAM_WRITES               | MBOX0C2 |   2780 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0014 |
|        Runtime unhalted [s]       | 4.236020e-05 |
|            Clock [MHz]            |     896.7298 |
|                CPI                |       9.5561 |
|             Energy [J]            |       0.0054 |
|             Power [W]             |       3.7987 |
|          Energy DRAM [J]          |       0.0029 |
|           Power DRAM [W]          |       2.0289 |
|            DP [MFLOP/s]           |       0.0375 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0375 |
|  Memory load bandwidth [MBytes/s] |    1090.5471 |
|  Memory load data volume [GBytes] |       0.0015 |
| Memory evict bandwidth [MBytes/s] |     125.8341 |
| Memory evict data volume [GBytes] |       0.0002 |
|    Memory bandwidth [MBytes/s]    |    1216.3812 |
|    Memory data volume [GBytes]    |       0.0017 |
|       Operational intensity       | 3.081625e-05 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration with GEMM: 2
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10211 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  96454 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 247776 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0074 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0031 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     52 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  24275 |
|                DRAM_WRITES               | MBOX0C2 |   1910 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0015 |
|        Runtime unhalted [s]       | 4.186581e-05 |
|            Clock [MHz]            |     896.8540 |
|                CPI                |       9.4461 |
|             Energy [J]            |       0.0074 |
|             Power [W]             |       4.9882 |
|          Energy DRAM [J]          |       0.0031 |
|           Power DRAM [W]          |       2.0613 |
|            DP [MFLOP/s]           |       0.0351 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0351 |
|  Memory load bandwidth [MBytes/s] |    1049.3504 |
|  Memory load data volume [GBytes] |       0.0016 |
| Memory evict bandwidth [MBytes/s] |      82.5647 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |    1131.9151 |
|    Memory data volume [GBytes]    |       0.0017 |
|       Operational intensity       | 3.102922e-05 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration with GEMM: 3
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10267 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  98662 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 252960 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0066 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0030 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     57 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  22070 |
|                DRAM_WRITES               | MBOX0C2 |   1317 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0013 |
|        Runtime unhalted [s]       | 4.282298e-05 |
|            Clock [MHz]            |     898.6096 |
|                CPI                |       9.6096 |
|             Energy [J]            |       0.0066 |
|             Power [W]             |       4.9735 |
|          Energy DRAM [J]          |       0.0030 |
|           Power DRAM [W]          |       2.2565 |
|            DP [MFLOP/s]           |       0.0430 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0430 |
|  Memory load bandwidth [MBytes/s] |    1065.7243 |
|  Memory load data volume [GBytes] |       0.0014 |
| Memory evict bandwidth [MBytes/s] |      63.5958 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |    1129.3201 |
|    Memory data volume [GBytes]    |       0.0015 |
|       Operational intensity       | 3.808205e-05 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration with GEMM: 4
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10259 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  89816 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 189024 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0055 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0029 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     55 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  13994 |
|                DRAM_WRITES               | MBOX0C2 |   1416 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0011 |
|        Runtime unhalted [s]       | 3.898607e-05 |
|            Clock [MHz]            |    1094.6644 |
|                CPI                |       8.7548 |
|             Energy [J]            |       0.0055 |
|             Power [W]             |       5.0844 |
|          Energy DRAM [J]          |       0.0029 |
|           Power DRAM [W]          |       2.6552 |
|            DP [MFLOP/s]           |       0.0509 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0509 |
|  Memory load bandwidth [MBytes/s] |     828.9646 |
|  Memory load data volume [GBytes] |       0.0009 |
| Memory evict bandwidth [MBytes/s] |      83.8798 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     912.8444 |
|    Memory data volume [GBytes]    |       0.0010 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration with GEMM: 5
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10239 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  92674 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 194400 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0057 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0029 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     52 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  16758 |
|                DRAM_WRITES               | MBOX0C2 |   1625 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0012 |
|        Runtime unhalted [s]       | 4.022411e-05 |
|            Clock [MHz]            |    1098.3308 |
|                CPI                |       9.0511 |
|             Energy [J]            |       0.0057 |
|             Power [W]             |       4.8798 |
|          Energy DRAM [J]          |       0.0029 |
|           Power DRAM [W]          |       2.4918 |
|            DP [MFLOP/s]           |       0.0442 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0442 |
|  Memory load bandwidth [MBytes/s] |     912.2126 |
|  Memory load data volume [GBytes] |       0.0011 |
| Memory evict bandwidth [MBytes/s] |      88.4560 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |    1000.6686 |
|    Memory data volume [GBytes]    |       0.0012 |
|       Operational intensity       | 4.419844e-05 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration without GEMM: 1
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10254 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  89867 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 230304 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0054 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0032 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     54 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  13363 |
|                DRAM_WRITES               | MBOX0C2 |   1304 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0012 |
|        Runtime unhalted [s]       | 3.900561e-05 |
|            Clock [MHz]            |     899.0254 |
|                CPI                |       8.7641 |
|             Energy [J]            |       0.0054 |
|             Power [W]             |       4.4314 |
|          Energy DRAM [J]          |       0.0032 |
|           Power DRAM [W]          |       2.6185 |
|            DP [MFLOP/s]           |       0.0446 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0446 |
|  Memory load bandwidth [MBytes/s] |     705.6017 |
|  Memory load data volume [GBytes] |       0.0009 |
| Memory evict bandwidth [MBytes/s] |      68.8546 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     774.4564 |
|    Memory data volume [GBytes]    |       0.0009 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration without GEMM: 2
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10240 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 100485 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 100416 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0168 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0032 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     54 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  15669 |
|                DRAM_WRITES               | MBOX0C2 |   2283 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0007 |
|        Runtime unhalted [s]       | 4.361564e-05 |
|            Clock [MHz]            |    2305.4585 |
|                CPI                |       9.8130 |
|             Energy [J]            |       0.0168 |
|             Power [W]             |      22.5426 |
|          Energy DRAM [J]          |       0.0032 |
|           Power DRAM [W]          |       4.2626 |
|            DP [MFLOP/s]           |       0.0725 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0725 |
|  Memory load bandwidth [MBytes/s] |    1346.8285 |
|  Memory load data volume [GBytes] |       0.0010 |
| Memory evict bandwidth [MBytes/s] |     196.2352 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |    1543.0637 |
|    Memory data volume [GBytes]    |       0.0011 |
|       Operational intensity       | 4.700033e-05 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration without GEMM: 3
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10231 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  90741 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 232512 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0054 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0029 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     55 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  15549 |
|                DRAM_WRITES               | MBOX0C2 |    913 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0012 |
|        Runtime unhalted [s]       | 3.938498e-05 |
|            Clock [MHz]            |     899.1478 |
|                CPI                |       8.8692 |
|             Energy [J]            |       0.0054 |
|             Power [W]             |       4.4042 |
|          Energy DRAM [J]          |       0.0029 |
|           Power DRAM [W]          |       2.3523 |
|            DP [MFLOP/s]           |       0.0451 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0451 |
|  Memory load bandwidth [MBytes/s] |     815.9965 |
|  Memory load data volume [GBytes] |       0.0010 |
| Memory evict bandwidth [MBytes/s] |      47.9134 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     863.9098 |
|    Memory data volume [GBytes]    |       0.0011 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration without GEMM: 4
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10274 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  97234 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 249024 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0059 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0032 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     52 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  24181 |
|                DRAM_WRITES               | MBOX0C2 |   4299 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0014 |
|        Runtime unhalted [s]       | 4.220320e-05 |
|            Clock [MHz]            |     899.6006 |
|                CPI                |       9.4641 |
|             Energy [J]            |       0.0059 |
|             Power [W]             |       4.3756 |
|          Energy DRAM [J]          |       0.0032 |
|           Power DRAM [W]          |       2.3908 |
|            DP [MFLOP/s]           |       0.0384 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0384 |
|  Memory load bandwidth [MBytes/s] |    1143.7626 |
|  Memory load data volume [GBytes] |       0.0015 |
| Memory evict bandwidth [MBytes/s] |     203.3429 |
| Memory evict data volume [GBytes] |       0.0003 |
|    Memory bandwidth [MBytes/s]    |    1347.1055 |
|    Memory data volume [GBytes]    |       0.0018 |
|       Operational intensity       | 2.852879e-05 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration without GEMM: 5
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10263 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  97748 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 251136 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0056 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0043 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     53 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  17747 |
|                DRAM_WRITES               | MBOX0C2 |   1088 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0014 |
|        Runtime unhalted [s]       | 4.242619e-05 |
|            Clock [MHz]            |     896.7528 |
|                CPI                |       9.5243 |
|             Energy [J]            |       0.0056 |
|             Power [W]             |       4.0367 |
|          Energy DRAM [J]          |       0.0043 |
|           Power DRAM [W]          |       3.1153 |
|            DP [MFLOP/s]           |       0.0381 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0381 |
|  Memory load bandwidth [MBytes/s] |     816.5101 |
|  Memory load data volume [GBytes] |       0.0011 |
| Memory evict bandwidth [MBytes/s] |      50.0571 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     866.5672 |
|    Memory data volume [GBytes]    |       0.0012 |
|       Operational intensity       | 4.396735e-05 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration without GEMM: 1
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10244 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  89910 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 231552 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0057 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0029 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     53 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  14687 |
|                DRAM_WRITES               | MBOX0C2 |   1675 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0013 |
|        Runtime unhalted [s]       | 3.902451e-05 |
|            Clock [MHz]            |     894.6023 |
|                CPI                |       8.7768 |
|             Energy [J]            |       0.0057 |
|             Power [W]             |       4.4647 |
|          Energy DRAM [J]          |       0.0029 |
|           Power DRAM [W]          |       2.2564 |
|            DP [MFLOP/s]           |       0.0417 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0417 |
|  Memory load bandwidth [MBytes/s] |     739.3378 |
|  Memory load data volume [GBytes] |       0.0009 |
| Memory evict bandwidth [MBytes/s] |      84.3188 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     823.6566 |
|    Memory data volume [GBytes]    |       0.0010 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration without GEMM: 2
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10276 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  98788 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 253248 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0052 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0029 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     53 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  18925 |
|                DRAM_WRITES               | MBOX0C2 |   1475 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0014 |
|        Runtime unhalted [s]       | 4.287767e-05 |
|            Clock [MHz]            |     898.7340 |
|                CPI                |       9.6135 |
|             Energy [J]            |       0.0052 |
|             Power [W]             |       3.7689 |
|          Energy DRAM [J]          |       0.0029 |
|           Power DRAM [W]          |       2.1036 |
|            DP [MFLOP/s]           |       0.0381 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0381 |
|  Memory load bandwidth [MBytes/s] |     869.6632 |
|  Memory load data volume [GBytes] |       0.0012 |
| Memory evict bandwidth [MBytes/s] |      67.7809 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     937.4441 |
|    Memory data volume [GBytes]    |       0.0013 |
|       Operational intensity       | 4.059436e-05 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration without GEMM: 3
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10253 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  90889 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 233952 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0052 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0043 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     54 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  11219 |
|                DRAM_WRITES               | MBOX0C2 |   1151 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0013 |
|        Runtime unhalted [s]       | 3.944919e-05 |
|            Clock [MHz]            |     895.0717 |
|                CPI                |       8.8646 |
|             Energy [J]            |       0.0052 |
|             Power [W]             |       4.0339 |
|          Energy DRAM [J]          |       0.0043 |
|           Power DRAM [W]          |       3.3695 |
|            DP [MFLOP/s]           |       0.0420 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0420 |
|  Memory load bandwidth [MBytes/s] |     558.2905 |
|  Memory load data volume [GBytes] |       0.0007 |
| Memory evict bandwidth [MBytes/s] |      57.2771 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     615.5676 |
|    Memory data volume [GBytes]    |       0.0008 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration without GEMM: 4
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10279 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  90358 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 190080 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0056 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0029 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     55 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  12063 |
|                DRAM_WRITES               | MBOX0C2 |   1485 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0011 |
|        Runtime unhalted [s]       | 3.921881e-05 |
|            Clock [MHz]            |    1095.2227 |
|                CPI                |       8.7905 |
|             Energy [J]            |       0.0056 |
|             Power [W]             |       5.1846 |
|          Energy DRAM [J]          |       0.0029 |
|           Power DRAM [W]          |       2.6777 |
|            DP [MFLOP/s]           |       0.0513 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0513 |
|  Memory load bandwidth [MBytes/s] |     720.6535 |
|  Memory load data volume [GBytes] |       0.0008 |
| Memory evict bandwidth [MBytes/s] |      88.7151 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     809.3686 |
|    Memory data volume [GBytes]    |       0.0009 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration without GEMM: 5
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10270 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  91875 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 235968 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0092 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0043 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     56 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  15015 |
|                DRAM_WRITES               | MBOX0C2 |   1595 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0012 |
|        Runtime unhalted [s]       | 3.987714e-05 |
|            Clock [MHz]            |     897.0520 |
|                CPI                |       8.9460 |
|             Energy [J]            |       0.0092 |
|             Power [W]             |       7.4014 |
|          Energy DRAM [J]          |       0.0043 |
|           Power DRAM [W]          |       3.4801 |
|            DP [MFLOP/s]           |       0.0450 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0450 |
|  Memory load bandwidth [MBytes/s] |     771.7284 |
|  Memory load data volume [GBytes] |       0.0010 |
| Memory evict bandwidth [MBytes/s] |      81.9785 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     853.7069 |
|    Memory data volume [GBytes]    |       0.0011 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration without GEMM: 1
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10253 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  87253 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 184032 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0067 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0029 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     54 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  12512 |
|                DRAM_WRITES               | MBOX0C2 |   1500 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0011 |
|        Runtime unhalted [s]       | 3.787099e-05 |
|            Clock [MHz]            |    1092.3473 |
|                CPI                |       8.5100 |
|             Energy [J]            |       0.0067 |
|             Power [W]             |       6.2659 |
|          Energy DRAM [J]          |       0.0029 |
|           Power DRAM [W]          |       2.7593 |
|            DP [MFLOP/s]           |       0.0509 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0509 |
|  Memory load bandwidth [MBytes/s] |     754.1898 |
|  Memory load data volume [GBytes] |       0.0008 |
| Memory evict bandwidth [MBytes/s] |      90.4160 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     844.6058 |
|    Memory data volume [GBytes]    |       0.0009 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration without GEMM: 2
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10996 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 103868 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 267456 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0056 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0029 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     55 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  15467 |
|                DRAM_WRITES               | MBOX0C2 |   2300 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0014 |
|        Runtime unhalted [s]       | 4.508262e-05 |
|            Clock [MHz]            |     894.7507 |
|                CPI                |       9.4460 |
|             Energy [J]            |       0.0056 |
|             Power [W]             |       4.0294 |
|          Energy DRAM [J]          |       0.0029 |
|           Power DRAM [W]          |       2.0585 |
|            DP [MFLOP/s]           |       0.0395 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0395 |
|  Memory load bandwidth [MBytes/s] |     710.3254 |
|  Memory load data volume [GBytes] |       0.0010 |
| Memory evict bandwidth [MBytes/s] |     105.6280 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     815.9534 |
|    Memory data volume [GBytes]    |       0.0011 |
|       Operational intensity       | 4.836917e-05 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration without GEMM: 3
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10268 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  93446 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 195936 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0067 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0029 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     54 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  13490 |
|                DRAM_WRITES               | MBOX0C2 |   1600 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0011 |
|        Runtime unhalted [s]       | 4.055938e-05 |
|            Clock [MHz]            |    1098.7930 |
|                CPI                |       9.1007 |
|             Energy [J]            |       0.0067 |
|             Power [W]             |       5.9664 |
|          Energy DRAM [J]          |       0.0029 |
|           Power DRAM [W]          |       2.6274 |
|            DP [MFLOP/s]           |       0.0484 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0484 |
|  Memory load bandwidth [MBytes/s] |     774.2809 |
|  Memory load data volume [GBytes] |       0.0009 |
| Memory evict bandwidth [MBytes/s] |      91.8347 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     866.1156 |
|    Memory data volume [GBytes]    |       0.0010 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration without GEMM: 4
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10262 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  88392 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 227040 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0051 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0043 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     54 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  11451 |
|                DRAM_WRITES               | MBOX0C2 |   1540 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0012 |
|        Runtime unhalted [s]       | 3.836623e-05 |
|            Clock [MHz]            |     896.9628 |
|                CPI                |       8.6135 |
|             Energy [J]            |       0.0051 |
|             Power [W]             |       4.1356 |
|          Energy DRAM [J]          |       0.0043 |
|           Power DRAM [W]          |       3.5377 |
|            DP [MFLOP/s]           |       0.0441 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0441 |
|  Memory load bandwidth [MBytes/s] |     598.2815 |
|  Memory load data volume [GBytes] |       0.0007 |
| Memory evict bandwidth [MBytes/s] |      80.4605 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     678.7420 |
|    Memory data volume [GBytes]    |       0.0008 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration without GEMM: 5
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10283 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  87664 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 224832 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0056 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0029 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     54 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  22030 |
|                DRAM_WRITES               | MBOX0C2 |   1927 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0012 |
|        Runtime unhalted [s]       | 3.804943e-05 |
|            Clock [MHz]            |     898.3308 |
|                CPI                |       8.5251 |
|             Energy [J]            |       0.0056 |
|             Power [W]             |       4.5677 |
|          Energy DRAM [J]          |       0.0029 |
|           Power DRAM [W]          |       2.3591 |
|            DP [MFLOP/s]           |       0.0444 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0444 |
|  Memory load bandwidth [MBytes/s] |    1159.4984 |
|  Memory load data volume [GBytes] |       0.0014 |
| Memory evict bandwidth [MBytes/s] |     101.4232 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |    1260.9216 |
|    Memory data volume [GBytes]    |       0.0015 |
|       Operational intensity       | 3.521935e-05 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration without GEMM: 1
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10288 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  95462 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 200160 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0059 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0031 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     54 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  12730 |
|                DRAM_WRITES               | MBOX0C2 |   1532 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0011 |
|        Runtime unhalted [s]       | 4.143850e-05 |
|            Clock [MHz]            |    1098.7015 |
|                CPI                |       9.2790 |
|             Energy [J]            |       0.0059 |
|             Power [W]             |       5.1385 |
|          Energy DRAM [J]          |       0.0031 |
|           Power DRAM [W]          |       2.6763 |
|            DP [MFLOP/s]           |       0.0474 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0474 |
|  Memory load bandwidth [MBytes/s] |     714.4880 |
|  Memory load data volume [GBytes] |       0.0008 |
| Memory evict bandwidth [MBytes/s] |      85.9855 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     800.4735 |
|    Memory data volume [GBytes]    |       0.0009 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration without GEMM: 2
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10245 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  86324 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 181152 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0070 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0030 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     54 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  15518 |
|                DRAM_WRITES               | MBOX0C2 |   1691 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0011 |
|        Runtime unhalted [s]       | 3.746896e-05 |
|            Clock [MHz]            |    1097.8636 |
|                CPI                |       8.4260 |
|             Energy [J]            |       0.0070 |
|             Power [W]             |       6.5921 |
|          Energy DRAM [J]          |       0.0030 |
|           Power DRAM [W]          |       2.8088 |
|            DP [MFLOP/s]           |       0.0507 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0507 |
|  Memory load bandwidth [MBytes/s] |     932.7396 |
|  Memory load data volume [GBytes] |       0.0010 |
| Memory evict bandwidth [MBytes/s] |     101.6408 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |    1034.3805 |
|    Memory data volume [GBytes]    |       0.0011 |
|       Operational intensity       | 4.902958e-05 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration without GEMM: 3
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10214 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  95770 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 246336 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0053 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0030 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     52 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  12059 |
|                DRAM_WRITES               | MBOX0C2 |   1301 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0014 |
|        Runtime unhalted [s]       | 4.156867e-05 |
|            Clock [MHz]            |     895.7048 |
|                CPI                |       9.3763 |
|             Energy [J]            |       0.0053 |
|             Power [W]             |       3.8166 |
|          Energy DRAM [J]          |       0.0030 |
|           Power DRAM [W]          |       2.1496 |
|            DP [MFLOP/s]           |       0.0374 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0374 |
|  Memory load bandwidth [MBytes/s] |     554.7174 |
|  Memory load data volume [GBytes] |       0.0008 |
| Memory evict bandwidth [MBytes/s] |      59.8464 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     614.5638 |
|    Memory data volume [GBytes]    |       0.0009 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration without GEMM: 4
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10242 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  98195 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 251712 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0087 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0043 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     52 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  12530 |
|                DRAM_WRITES               | MBOX0C2 |   1211 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0014 |
|        Runtime unhalted [s]       | 4.262024e-05 |
|            Clock [MHz]            |     898.7916 |
|                CPI                |       9.5875 |
|             Energy [J]            |       0.0087 |
|             Power [W]             |       6.2340 |
|          Energy DRAM [J]          |       0.0043 |
|           Power DRAM [W]          |       3.0516 |
|            DP [MFLOP/s]           |       0.0371 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0371 |
|  Memory load bandwidth [MBytes/s] |     572.7761 |
|  Memory load data volume [GBytes] |       0.0008 |
| Memory evict bandwidth [MBytes/s] |      55.3577 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     628.1338 |
|    Memory data volume [GBytes]    |       0.0009 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration without GEMM: 5
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10278 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  95722 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 245280 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0078 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0029 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     55 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  19885 |
|                DRAM_WRITES               | MBOX0C2 |   1572 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0013 |
|        Runtime unhalted [s]       | 4.154741e-05 |
|            Clock [MHz]            |     899.1196 |
|                CPI                |       9.3133 |
|             Energy [J]            |       0.0078 |
|             Power [W]             |       5.8338 |
|          Energy DRAM [J]          |       0.0029 |
|           Power DRAM [W]          |       2.2049 |
|            DP [MFLOP/s]           |       0.0414 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0414 |
|  Memory load bandwidth [MBytes/s] |     957.7939 |
|  Memory load data volume [GBytes] |       0.0013 |
| Memory evict bandwidth [MBytes/s] |      75.7180 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |    1033.5118 |
|    Memory data volume [GBytes]    |       0.0014 |
|       Operational intensity       | 4.005103e-05 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration without GEMM: 1
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10232 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  88035 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 225792 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0053 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0029 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     52 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  11682 |
|                DRAM_WRITES               | MBOX0C2 |    969 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0013 |
|        Runtime unhalted [s]       | 3.821123e-05 |
|            Clock [MHz]            |     898.2789 |
|                CPI                |       8.6039 |
|             Energy [J]            |       0.0053 |
|             Power [W]             |       4.2444 |
|          Energy DRAM [J]          |       0.0029 |
|           Power DRAM [W]          |       2.2929 |
|            DP [MFLOP/s]           |       0.0416 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0416 |
|  Memory load bandwidth [MBytes/s] |     597.5980 |
|  Memory load data volume [GBytes] |       0.0007 |
| Memory evict bandwidth [MBytes/s] |      49.5696 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     647.1676 |
|    Memory data volume [GBytes]    |       0.0008 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration without GEMM: 2
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10239 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  84977 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 218016 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0057 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0029 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     53 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  12819 |
|                DRAM_WRITES               | MBOX0C2 |   1319 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0012 |
|        Runtime unhalted [s]       | 3.688352e-05 |
|            Clock [MHz]            |     898.0118 |
|                CPI                |       8.2993 |
|             Energy [J]            |       0.0057 |
|             Power [W]             |       4.6993 |
|          Energy DRAM [J]          |       0.0029 |
|           Power DRAM [W]          |       2.3749 |
|            DP [MFLOP/s]           |       0.0439 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0439 |
|  Memory load bandwidth [MBytes/s] |     679.2143 |
|  Memory load data volume [GBytes] |       0.0008 |
| Memory evict bandwidth [MBytes/s] |      69.8872 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     749.1014 |
|    Memory data volume [GBytes]    |       0.0009 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration without GEMM: 3
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10259 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  85699 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 179520 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0067 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0029 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     54 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  11656 |
|                DRAM_WRITES               | MBOX0C2 |   1393 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0011 |
|        Runtime unhalted [s]       | 3.719796e-05 |
|            Clock [MHz]            |    1099.8149 |
|                CPI                |       8.3535 |
|             Energy [J]            |       0.0067 |
|             Power [W]             |       6.2908 |
|          Energy DRAM [J]          |       0.0029 |
|           Power DRAM [W]          |       2.7702 |
|            DP [MFLOP/s]           |       0.0511 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0511 |
|  Memory load bandwidth [MBytes/s] |     705.3849 |
|  Memory load data volume [GBytes] |       0.0007 |
| Memory evict bandwidth [MBytes/s] |      84.3000 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     789.6850 |
|    Memory data volume [GBytes]    |       0.0008 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration without GEMM: 4
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10264 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  89022 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 228384 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0058 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0029 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     55 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  11390 |
|                DRAM_WRITES               | MBOX0C2 |   1163 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0012 |
|        Runtime unhalted [s]       | 3.865221e-05 |
|            Clock [MHz]            |     897.7485 |
|                CPI                |       8.6732 |
|             Energy [J]            |       0.0058 |
|             Power [W]             |       4.7528 |
|          Energy DRAM [J]          |       0.0029 |
|           Power DRAM [W]          |       2.3514 |
|            DP [MFLOP/s]           |       0.0451 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0451 |
|  Memory load bandwidth [MBytes/s] |     597.5201 |
|  Memory load data volume [GBytes] |       0.0007 |
| Memory evict bandwidth [MBytes/s] |      61.0111 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     658.5312 |
|    Memory data volume [GBytes]    |       0.0008 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration without GEMM: 5
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10266 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  97425 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 250560 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0087 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0050 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     52 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  33487 |
|                DRAM_WRITES               | MBOX0C2 |   2441 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0013 |
|        Runtime unhalted [s]       | 4.228606e-05 |
|            Clock [MHz]            |     895.8428 |
|                CPI                |       9.4901 |
|             Energy [J]            |       0.0087 |
|             Power [W]             |       6.6949 |
|          Energy DRAM [J]          |       0.0050 |
|           Power DRAM [W]          |       3.8390 |
|            DP [MFLOP/s]           |       0.0399 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0399 |
|  Memory load bandwidth [MBytes/s] |    1643.9395 |
|  Memory load data volume [GBytes] |       0.0021 |
| Memory evict bandwidth [MBytes/s] |     119.8333 |
| Memory evict data volume [GBytes] |       0.0002 |
|    Memory bandwidth [MBytes/s]    |    1763.7727 |
|    Memory data volume [GBytes]    |       0.0023 |
|       Operational intensity       | 2.261467e-05 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration without GEMM: 1
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10244 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  84642 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 217824 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0078 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0043 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     54 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  12036 |
|                DRAM_WRITES               | MBOX0C2 |   1078 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0012 |
|        Runtime unhalted [s]       | 3.674985e-05 |
|            Clock [MHz]            |     894.9741 |
|                CPI                |       8.2626 |
|             Energy [J]            |       0.0078 |
|             Power [W]             |       6.4795 |
|          Energy DRAM [J]          |       0.0043 |
|           Power DRAM [W]          |       3.5714 |
|            DP [MFLOP/s]           |       0.0451 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0451 |
|  Memory load bandwidth [MBytes/s] |     643.9057 |
|  Memory load data volume [GBytes] |       0.0008 |
| Memory evict bandwidth [MBytes/s] |      57.6712 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     701.5769 |
|    Memory data volume [GBytes]    |       0.0008 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration without GEMM: 2
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10241 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  97054 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 248448 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0083 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0043 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     53 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  12303 |
|                DRAM_WRITES               | MBOX0C2 |   1239 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0014 |
|        Runtime unhalted [s]       | 4.212496e-05 |
|            Clock [MHz]            |     900.0194 |
|                CPI                |       9.4770 |
|             Energy [J]            |       0.0083 |
|             Power [W]             |       5.8520 |
|          Energy DRAM [J]          |       0.0043 |
|           Power DRAM [W]          |       3.0121 |
|            DP [MFLOP/s]           |       0.0374 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0374 |
|  Memory load bandwidth [MBytes/s] |     555.1054 |
|  Memory load data volume [GBytes] |       0.0008 |
| Memory evict bandwidth [MBytes/s] |      55.9031 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     611.0085 |
|    Memory data volume [GBytes]    |       0.0009 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration without GEMM: 3
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10254 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 101405 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 213024 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0060 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0029 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     54 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  18889 |
|                DRAM_WRITES               | MBOX0C2 |   2553 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0013 |
|        Runtime unhalted [s]       | 4.401354e-05 |
|            Clock [MHz]            |    1096.7406 |
|                CPI                |       9.8893 |
|             Energy [J]            |       0.0060 |
|             Power [W]             |       4.7876 |
|          Energy DRAM [J]          |       0.0029 |
|           Power DRAM [W]          |       2.3213 |
|            DP [MFLOP/s]           |       0.0428 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0428 |
|  Memory load bandwidth [MBytes/s] |     957.8440 |
|  Memory load data volume [GBytes] |       0.0012 |
| Memory evict bandwidth [MBytes/s] |     129.4603 |
| Memory evict data volume [GBytes] |       0.0002 |
|    Memory bandwidth [MBytes/s]    |    1087.3043 |
|    Memory data volume [GBytes]    |       0.0014 |
|       Operational intensity       | 3.935034e-05 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration without GEMM: 4
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10270 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  90311 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 232224 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0052 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0029 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     54 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  18612 |
|                DRAM_WRITES               | MBOX0C2 |   1071 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0013 |
|        Runtime unhalted [s]       | 3.921275e-05 |
|            Clock [MHz]            |     895.6677 |
|                CPI                |       8.7937 |
|             Energy [J]            |       0.0052 |
|             Power [W]             |       3.9951 |
|          Energy DRAM [J]          |       0.0029 |
|           Power DRAM [W]          |       2.2298 |
|            DP [MFLOP/s]           |       0.0411 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0411 |
|  Memory load bandwidth [MBytes/s] |     906.6156 |
|  Memory load data volume [GBytes] |       0.0012 |
| Memory evict bandwidth [MBytes/s] |      52.1699 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     958.7855 |
|    Memory data volume [GBytes]    |       0.0013 |
|       Operational intensity       | 4.286694e-05 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration without GEMM: 5
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+--------+
|                   Event                  | Counter | Core 0 |
+------------------------------------------+---------+--------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  10241 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  86802 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 223008 |
|              PWR_PKG_ENERGY              |   PWR0  | 0.0055 |
|              PWR_DRAM_ENERGY             |   PWR3  | 0.0029 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |      0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |     54 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      0 |
|                DRAM_READS                | MBOX0C1 |  11897 |
|                DRAM_WRITES               | MBOX0C2 |    862 |
+------------------------------------------+---------+--------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       0.0012 |
|        Runtime unhalted [s]       | 3.767531e-05 |
|            Clock [MHz]            |     896.7724 |
|                CPI                |       8.4759 |
|             Energy [J]            |       0.0055 |
|             Power [W]             |       4.4564 |
|          Energy DRAM [J]          |       0.0029 |
|           Power DRAM [W]          |       2.3272 |
|            DP [MFLOP/s]           |       0.0438 |
|          AVX DP [MFLOP/s]         |            0 |
|          Packed [MUOPS/s]         |            0 |
|          Scalar [MUOPS/s]         |       0.0438 |
|  Memory load bandwidth [MBytes/s] |     617.7060 |
|  Memory load data volume [GBytes] |       0.0008 |
| Memory evict bandwidth [MBytes/s] |      44.7560 |
| Memory evict data volume [GBytes] |       0.0001 |
|    Memory bandwidth [MBytes/s]    |     662.4620 |
|    Memory data volume [GBytes]    |       0.0008 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Failed to execute command: ./a.out
Iteration with GEMM: 1
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 10 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 2535301200456458802993406410752.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+-----------+
|                   Event                  | Counter |   Core 0  |
+------------------------------------------+---------+-----------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 274893568 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 237480822 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 265391712 |
|              PWR_PKG_ENERGY              |   PWR0  |    0.9287 |
|              PWR_DRAM_ENERGY             |   PWR3  |    0.4396 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |         0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |  18880565 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      2560 |
|                DRAM_READS                | MBOX0C1 |  10822603 |
|                DRAM_WRITES               | MBOX0C2 |   1264583 |
+------------------------------------------+---------+-----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.1727 |
|        Runtime unhalted [s]       |    0.1031 |
|            Clock [MHz]            | 2061.6525 |
|                CPI                |    0.8639 |
|             Energy [J]            |    0.9287 |
|             Power [W]             |    5.3770 |
|          Energy DRAM [J]          |    0.4396 |
|           Power DRAM [W]          |    2.5450 |
|            DP [MFLOP/s]           |  109.3730 |
|          AVX DP [MFLOP/s]         |    0.0593 |
|          Packed [MUOPS/s]         |    0.0148 |
|          Scalar [MUOPS/s]         |  109.3137 |
|  Memory load bandwidth [MBytes/s] | 4010.2505 |
|  Memory load data volume [GBytes] |    0.6926 |
| Memory evict bandwidth [MBytes/s] |  468.5836 |
| Memory evict data volume [GBytes] |    0.0809 |
|    Memory bandwidth [MBytes/s]    | 4478.8341 |
|    Memory data volume [GBytes]    |    0.7736 |
|       Operational intensity       |    0.0244 |
+-----------------------------------+-----------+

Iteration with GEMM: 2
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 10 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 2535301200456458802993406410752.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+-----------+
|                   Event                  | Counter |   Core 0  |
+------------------------------------------+---------+-----------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 274893660 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 240140600 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 270398400 |
|              PWR_PKG_ENERGY              |   PWR0  |    0.9470 |
|              PWR_DRAM_ENERGY             |   PWR3  |    0.4548 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |         0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |  18880567 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      2560 |
|                DRAM_READS                | MBOX0C1 |  10878485 |
|                DRAM_WRITES               | MBOX0C2 |   1267367 |
+------------------------------------------+---------+-----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.1833 |
|        Runtime unhalted [s]       |    0.1042 |
|            Clock [MHz]            | 2046.1372 |
|                CPI                |    0.8736 |
|             Energy [J]            |    0.9470 |
|             Power [W]             |    5.1674 |
|          Energy DRAM [J]          |    0.4548 |
|           Power DRAM [W]          |    2.4819 |
|            DP [MFLOP/s]           |  103.0830 |
|          AVX DP [MFLOP/s]         |    0.0559 |
|          Packed [MUOPS/s]         |    0.0140 |
|          Scalar [MUOPS/s]         |  103.0271 |
|  Memory load bandwidth [MBytes/s] | 3799.1354 |
|  Memory load data volume [GBytes] |    0.6962 |
| Memory evict bandwidth [MBytes/s] |  442.6075 |
| Memory evict data volume [GBytes] |    0.0811 |
|    Memory bandwidth [MBytes/s]    | 4241.7429 |
|    Memory data volume [GBytes]    |    0.7773 |
|       Operational intensity       |    0.0243 |
+-----------------------------------+-----------+

Iteration with GEMM: 3
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 10 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 2535301200456458802993406410752.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+-----------+
|                   Event                  | Counter |   Core 0  |
+------------------------------------------+---------+-----------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 274893610 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 230091433 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 278168448 |
|              PWR_PKG_ENERGY              |   PWR0  |    0.8939 |
|              PWR_DRAM_ENERGY             |   PWR3  |    0.4548 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |         0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |  18880567 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      2560 |
|                DRAM_READS                | MBOX0C1 |  10751891 |
|                DRAM_WRITES               | MBOX0C2 |   1257335 |
+------------------------------------------+---------+-----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.1831 |
|        Runtime unhalted [s]       |    0.0999 |
|            Clock [MHz]            | 1905.7483 |
|                CPI                |    0.8370 |
|             Energy [J]            |    0.8939 |
|             Power [W]             |    4.8834 |
|          Energy DRAM [J]          |    0.4548 |
|           Power DRAM [W]          |    2.4847 |
|            DP [MFLOP/s]           |  103.1996 |
|          AVX DP [MFLOP/s]         |    0.0559 |
|          Packed [MUOPS/s]         |    0.0140 |
|          Scalar [MUOPS/s]         |  103.1436 |
|  Memory load bandwidth [MBytes/s] | 3759.1725 |
|  Memory load data volume [GBytes] |    0.6881 |
| Memory evict bandwidth [MBytes/s] |  439.6007 |
| Memory evict data volume [GBytes] |    0.0805 |
|    Memory bandwidth [MBytes/s]    | 4198.7732 |
|    Memory data volume [GBytes]    |    0.7686 |
|       Operational intensity       |    0.0246 |
+-----------------------------------+-----------+

Iteration with GEMM: 4
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 10 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 2535301200456458802993406410752.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+-----------+
|                   Event                  | Counter |   Core 0  |
+------------------------------------------+---------+-----------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 274893596 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 232940048 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 274941984 |
|              PWR_PKG_ENERGY              |   PWR0  |    0.9041 |
|              PWR_DRAM_ENERGY             |   PWR3  |    0.4553 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |         0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |  18880566 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      2560 |
|                DRAM_READS                | MBOX0C1 |  10909500 |
|                DRAM_WRITES               | MBOX0C2 |   1263444 |
+------------------------------------------+---------+-----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.1829 |
|        Runtime unhalted [s]       |    0.1011 |
|            Clock [MHz]            | 1951.9613 |
|                CPI                |    0.8474 |
|             Energy [J]            |    0.9041 |
|             Power [W]             |    4.9424 |
|          Energy DRAM [J]          |    0.4553 |
|           Power DRAM [W]          |    2.4891 |
|            DP [MFLOP/s]           |  103.2686 |
|          AVX DP [MFLOP/s]         |    0.0560 |
|          Packed [MUOPS/s]         |    0.0140 |
|          Scalar [MUOPS/s]         |  103.2126 |
|  Memory load bandwidth [MBytes/s] | 3816.8278 |
|  Memory load data volume [GBytes] |    0.6982 |
| Memory evict bandwidth [MBytes/s] |  442.0320 |
| Memory evict data volume [GBytes] |    0.0809 |
|    Memory bandwidth [MBytes/s]    | 4258.8599 |
|    Memory data volume [GBytes]    |    0.7791 |
|       Operational intensity       |    0.0242 |
+-----------------------------------+-----------+

Iteration with GEMM: 5
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 10 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 2535301200456458802993406410752.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+-----------+
|                   Event                  | Counter |   Core 0  |
+------------------------------------------+---------+-----------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 274893581 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 230221883 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 278595936 |
|              PWR_PKG_ENERGY              |   PWR0  |    0.8957 |
|              PWR_DRAM_ENERGY             |   PWR3  |    0.4548 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |         0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |  18880568 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      2560 |
|                DRAM_READS                | MBOX0C1 |  10774666 |
|                DRAM_WRITES               | MBOX0C2 |   1261048 |
+------------------------------------------+---------+-----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.1836 |
|        Runtime unhalted [s]       |    0.0999 |
|            Clock [MHz]            | 1903.9065 |
|                CPI                |    0.8375 |
|             Energy [J]            |    0.8957 |
|             Power [W]             |    4.8792 |
|          Energy DRAM [J]          |    0.4548 |
|           Power DRAM [W]          |    2.4777 |
|            DP [MFLOP/s]           |  102.9057 |
|          AVX DP [MFLOP/s]         |    0.0558 |
|          Packed [MUOPS/s]         |    0.0139 |
|          Scalar [MUOPS/s]         |  102.8499 |
|  Memory load bandwidth [MBytes/s] | 3756.4057 |
|  Memory load data volume [GBytes] |    0.6896 |
| Memory evict bandwidth [MBytes/s] |  439.6431 |
| Memory evict data volume [GBytes] |    0.0807 |
|    Memory bandwidth [MBytes/s]    | 4196.0488 |
|    Memory data volume [GBytes]    |    0.7703 |
|       Operational intensity       |    0.0245 |
+-----------------------------------+-----------+

Iteration with GEMM: 1
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 20 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 3213876088517980551083924184682325205044405987565585670602752.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+-----------+
|                   Event                  | Counter |   Core 0  |
+------------------------------------------+---------+-----------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 579849923 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 469171105 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 584631072 |
|              PWR_PKG_ENERGY              |   PWR0  |    1.8275 |
|              PWR_DRAM_ENERGY             |   PWR3  |    0.9388 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |         0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |  39852086 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      5120 |
|                DRAM_READS                | MBOX0C1 |  22443382 |
|                DRAM_WRITES               | MBOX0C2 |   2635391 |
+------------------------------------------+---------+-----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.3734 |
|        Runtime unhalted [s]       |    0.2036 |
|            Clock [MHz]            | 1848.9445 |
|                CPI                |    0.8091 |
|             Energy [J]            |    1.8275 |
|             Power [W]             |    4.8942 |
|          Energy DRAM [J]          |    0.9388 |
|           Power DRAM [W]          |    2.5142 |
|            DP [MFLOP/s]           |  106.7852 |
|          AVX DP [MFLOP/s]         |    0.0548 |
|          Packed [MUOPS/s]         |    0.0137 |
|          Scalar [MUOPS/s]         |  106.7304 |
|  Memory load bandwidth [MBytes/s] | 3846.8501 |
|  Memory load data volume [GBytes] |    1.4364 |
| Memory evict bandwidth [MBytes/s] |  451.7124 |
| Memory evict data volume [GBytes] |    0.1687 |
|    Memory bandwidth [MBytes/s]    | 4298.5625 |
|    Memory data volume [GBytes]    |    1.6050 |
|       Operational intensity       |    0.0248 |
+-----------------------------------+-----------+

Iteration with GEMM: 2
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 20 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 3213876088517980551083924184682325205044405987565585670602752.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+-----------+
|                   Event                  | Counter |   Core 0  |
+------------------------------------------+---------+-----------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 579849914 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 469093154 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 590978784 |
|              PWR_PKG_ENERGY              |   PWR0  |    1.8282 |
|              PWR_DRAM_ENERGY             |   PWR3  |    0.9449 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |         0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |  39852087 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      5120 |
|                DRAM_READS                | MBOX0C1 |  22418416 |
|                DRAM_WRITES               | MBOX0C2 |   2642409 |
+------------------------------------------+---------+-----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.3778 |
|        Runtime unhalted [s]       |    0.2037 |
|            Clock [MHz]            | 1828.3380 |
|                CPI                |    0.8090 |
|             Energy [J]            |    1.8282 |
|             Power [W]             |    4.8390 |
|          Energy DRAM [J]          |    0.9449 |
|           Power DRAM [W]          |    2.5009 |
|            DP [MFLOP/s]           |  105.5345 |
|          AVX DP [MFLOP/s]         |    0.0542 |
|          Packed [MUOPS/s]         |    0.0136 |
|          Scalar [MUOPS/s]         |  105.4803 |
|  Memory load bandwidth [MBytes/s] | 3797.5658 |
|  Memory load data volume [GBytes] |    1.4348 |
| Memory evict bandwidth [MBytes/s] |  447.6107 |
| Memory evict data volume [GBytes] |    0.1691 |
|    Memory bandwidth [MBytes/s]    | 4245.1765 |
|    Memory data volume [GBytes]    |    1.6039 |
|       Operational intensity       |    0.0249 |
+-----------------------------------+-----------+

Iteration with GEMM: 3
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 20 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 3213876088517980551083924184682325205044405987565585670602752.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+-----------+
|                   Event                  | Counter |   Core 0  |
+------------------------------------------+---------+-----------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 579849916 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 469580566 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 589912032 |
|              PWR_PKG_ENERGY              |   PWR0  |    1.8279 |
|              PWR_DRAM_ENERGY             |   PWR3  |    0.9438 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |         0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |  39852088 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      5120 |
|                DRAM_READS                | MBOX0C1 |  22508833 |
|                DRAM_WRITES               | MBOX0C2 |   2633636 |
+------------------------------------------+---------+-----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.3770 |
|        Runtime unhalted [s]       |    0.2038 |
|            Clock [MHz]            | 1833.9860 |
|                CPI                |    0.8098 |
|             Energy [J]            |    1.8279 |
|             Power [W]             |    4.8482 |
|          Energy DRAM [J]          |    0.9438 |
|           Power DRAM [W]          |    2.5034 |
|            DP [MFLOP/s]           |  105.7574 |
|          AVX DP [MFLOP/s]         |    0.0543 |
|          Packed [MUOPS/s]         |    0.0136 |
|          Scalar [MUOPS/s]         |  105.7031 |
|  Memory load bandwidth [MBytes/s] | 3820.9334 |
|  Memory load data volume [GBytes] |    1.4406 |
| Memory evict bandwidth [MBytes/s] |  447.0666 |
| Memory evict data volume [GBytes] |    0.1686 |
|    Memory bandwidth [MBytes/s]    | 4268.0000 |
|    Memory data volume [GBytes]    |    1.6091 |
|       Operational intensity       |    0.0248 |
+-----------------------------------+-----------+

Iteration with GEMM: 4
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 20 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 3213876088517980551083924184682325205044405987565585670602752.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+-----------+
|                   Event                  | Counter |   Core 0  |
+------------------------------------------+---------+-----------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 579849940 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 479603549 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 578188800 |
|              PWR_PKG_ENERGY              |   PWR0  |    1.9035 |
|              PWR_DRAM_ENERGY             |   PWR3  |    0.9409 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |         0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |  39852087 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      5120 |
|                DRAM_READS                | MBOX0C1 |  22757002 |
|                DRAM_WRITES               | MBOX0C2 |   2660525 |
+------------------------------------------+---------+-----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.3728 |
|        Runtime unhalted [s]       |    0.2082 |
|            Clock [MHz]            | 1911.1129 |
|                CPI                |    0.8271 |
|             Energy [J]            |    1.9035 |
|             Power [W]             |    5.1062 |
|          Energy DRAM [J]          |    0.9409 |
|           Power DRAM [W]          |    2.5239 |
|            DP [MFLOP/s]           |  106.9595 |
|          AVX DP [MFLOP/s]         |    0.0549 |
|          Packed [MUOPS/s]         |    0.0137 |
|          Scalar [MUOPS/s]         |  106.9046 |
|  Memory load bandwidth [MBytes/s] | 3906.9725 |
|  Memory load data volume [GBytes] |    1.4564 |
| Memory evict bandwidth [MBytes/s] |  456.7648 |
| Memory evict data volume [GBytes] |    0.1703 |
|    Memory bandwidth [MBytes/s]    | 4363.7374 |
|    Memory data volume [GBytes]    |    1.6267 |
|       Operational intensity       |    0.0245 |
+-----------------------------------+-----------+

Iteration with GEMM: 5
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 20 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 3213876088517980551083924184682325205044405987565585670602752.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+-----------+
|                   Event                  | Counter |   Core 0  |
+------------------------------------------+---------+-----------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 579849898 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 470572297 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 591251424 |
|              PWR_PKG_ENERGY              |   PWR0  |    1.8489 |
|              PWR_DRAM_ENERGY             |   PWR3  |    0.9522 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |         0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |  39852087 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      5120 |
|                DRAM_READS                | MBOX0C1 |  22798272 |
|                DRAM_WRITES               | MBOX0C2 |   2645789 |
+------------------------------------------+---------+-----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.3790 |
|        Runtime unhalted [s]       |    0.2042 |
|            Clock [MHz]            | 1833.6971 |
|                CPI                |    0.8115 |
|             Energy [J]            |    1.8489 |
|             Power [W]             |    4.8782 |
|          Energy DRAM [J]          |    0.9522 |
|           Power DRAM [W]          |    2.5123 |
|            DP [MFLOP/s]           |  105.1985 |
|          AVX DP [MFLOP/s]         |    0.0540 |
|          Packed [MUOPS/s]         |    0.0135 |
|          Scalar [MUOPS/s]         |  105.1445 |
|  Memory load bandwidth [MBytes/s] | 3849.6146 |
|  Memory load data volume [GBytes] |    1.4591 |
| Memory evict bandwidth [MBytes/s] |  446.7561 |
| Memory evict data volume [GBytes] |    0.1693 |
|    Memory bandwidth [MBytes/s]    | 4296.3708 |
|    Memory data volume [GBytes]    |    1.6284 |
|       Operational intensity       |    0.0245 |
+-----------------------------------+-----------+

Iteration with GEMM: 1
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 40 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 5164499756173817179311838344006023748659411585658447025661318713081295244033682389259290706560275662871806343945494986752.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+------------+
|                   Event                  | Counter |   Core 0   |
+------------------------------------------+---------+------------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 1189762712 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  941945803 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 1220204736 |
|              PWR_PKG_ENERGY              |   PWR0  |     3.7173 |
|              PWR_DRAM_ENERGY             |   PWR3  |     1.9313 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |          0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |   81795126 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      10240 |
|                DRAM_READS                | MBOX0C1 |   45829338 |
|                DRAM_WRITES               | MBOX0C2 |    5405639 |
+------------------------------------------+---------+------------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.7680 |
|        Runtime unhalted [s]       |    0.4088 |
|            Clock [MHz]            | 1778.5488 |
|                CPI                |    0.7917 |
|             Energy [J]            |    3.7173 |
|             Power [W]             |    4.8403 |
|          Energy DRAM [J]          |    1.9313 |
|           Power DRAM [W]          |    2.5148 |
|            DP [MFLOP/s]           |  106.5583 |
|          AVX DP [MFLOP/s]         |    0.0533 |
|          Packed [MUOPS/s]         |    0.0133 |
|          Scalar [MUOPS/s]         |  106.5049 |
|  Memory load bandwidth [MBytes/s] | 3819.1428 |
|  Memory load data volume [GBytes] |    2.9331 |
| Memory evict bandwidth [MBytes/s] |  450.4736 |
| Memory evict data volume [GBytes] |    0.3460 |
|    Memory bandwidth [MBytes/s]    | 4269.6164 |
|    Memory data volume [GBytes]    |    3.2790 |
|       Operational intensity       |    0.0250 |
+-----------------------------------+-----------+

Iteration with GEMM: 2
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 40 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 5164499756173817179311838344006023748659411585658447025661318713081295244033682389259290706560275662871806343945494986752.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+------------+
|                   Event                  | Counter |   Core 0   |
+------------------------------------------+---------+------------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 1189762887 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  941778725 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 1224953184 |
|              PWR_PKG_ENERGY              |   PWR0  |     3.7413 |
|              PWR_DRAM_ENERGY             |   PWR3  |     1.9403 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |          0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |   81795127 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      10240 |
|                DRAM_READS                | MBOX0C1 |   46432826 |
|                DRAM_WRITES               | MBOX0C2 |    5420443 |
+------------------------------------------+---------+------------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.7693 |
|        Runtime unhalted [s]       |    0.4088 |
|            Clock [MHz]            | 1771.3403 |
|                CPI                |    0.7916 |
|             Energy [J]            |    3.7413 |
|             Power [W]             |    4.8633 |
|          Energy DRAM [J]          |    1.9403 |
|           Power DRAM [W]          |    2.5222 |
|            DP [MFLOP/s]           |  106.3797 |
|          AVX DP [MFLOP/s]         |    0.0532 |
|          Packed [MUOPS/s]         |    0.0133 |
|          Scalar [MUOPS/s]         |  106.3265 |
|  Memory load bandwidth [MBytes/s] | 3862.9497 |
|  Memory load data volume [GBytes] |    2.9717 |
| Memory evict bandwidth [MBytes/s] |  450.9503 |
| Memory evict data volume [GBytes] |    0.3469 |
|    Memory bandwidth [MBytes/s]    | 4313.9000 |
|    Memory data volume [GBytes]    |    3.3186 |
|       Operational intensity       |    0.0247 |
+-----------------------------------+-----------+

Iteration with GEMM: 3
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 40 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 5164499756173817179311838344006023748659411585658447025661318713081295244033682389259290706560275662871806343945494986752.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+------------+
|                   Event                  | Counter |   Core 0   |
+------------------------------------------+---------+------------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 1189762685 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  945303904 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 1222831872 |
|              PWR_PKG_ENERGY              |   PWR0  |     3.7252 |
|              PWR_DRAM_ENERGY             |   PWR3  |     1.9355 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |          0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |   81795129 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      10240 |
|                DRAM_READS                | MBOX0C1 |   46438193 |
|                DRAM_WRITES               | MBOX0C2 |    5416994 |
+------------------------------------------+---------+------------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.7651 |
|        Runtime unhalted [s]       |    0.4103 |
|            Clock [MHz]            | 1781.0598 |
|                CPI                |    0.7945 |
|             Energy [J]            |    3.7252 |
|             Power [W]             |    4.8690 |
|          Energy DRAM [J]          |    1.9355 |
|           Power DRAM [W]          |    2.5298 |
|            DP [MFLOP/s]           |  106.9648 |
|          AVX DP [MFLOP/s]         |    0.0535 |
|          Packed [MUOPS/s]         |    0.0134 |
|          Scalar [MUOPS/s]         |  106.9113 |
|  Memory load bandwidth [MBytes/s] | 3884.6462 |
|  Memory load data volume [GBytes] |    2.9720 |
| Memory evict bandwidth [MBytes/s] |  453.1422 |
| Memory evict data volume [GBytes] |    0.3467 |
|    Memory bandwidth [MBytes/s]    | 4337.7884 |
|    Memory data volume [GBytes]    |    3.3187 |
|       Operational intensity       |    0.0247 |
+-----------------------------------+-----------+

Iteration with GEMM: 4
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 40 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 5164499756173817179311838344006023748659411585658447025661318713081295244033682389259290706560275662871806343945494986752.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+------------+
|                   Event                  | Counter |   Core 0   |
+------------------------------------------+---------+------------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 1189762664 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  942241765 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 1223423328 |
|              PWR_PKG_ENERGY              |   PWR0  |     3.7197 |
|              PWR_DRAM_ENERGY             |   PWR3  |     1.9338 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |          0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |   81795128 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      10240 |
|                DRAM_READS                | MBOX0C1 |   46349683 |
|                DRAM_WRITES               | MBOX0C2 |    5418736 |
+------------------------------------------+---------+------------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.7651 |
|        Runtime unhalted [s]       |    0.4090 |
|            Clock [MHz]            | 1774.4321 |
|                CPI                |    0.7920 |
|             Energy [J]            |    3.7197 |
|             Power [W]             |    4.8615 |
|          Energy DRAM [J]          |    1.9338 |
|           Power DRAM [W]          |    2.5274 |
|            DP [MFLOP/s]           |  106.9569 |
|          AVX DP [MFLOP/s]         |    0.0535 |
|          Packed [MUOPS/s]         |    0.0134 |
|          Scalar [MUOPS/s]         |  106.9033 |
|  Memory load bandwidth [MBytes/s] | 3876.9535 |
|  Memory load data volume [GBytes] |    2.9664 |
| Memory evict bandwidth [MBytes/s] |  453.2542 |
| Memory evict data volume [GBytes] |    0.3468 |
|    Memory bandwidth [MBytes/s]    | 4330.2077 |
|    Memory data volume [GBytes]    |    3.3132 |
|       Operational intensity       |    0.0247 |
+-----------------------------------+-----------+

Iteration with GEMM: 5
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 40 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 5164499756173817179311838344006023748659411585658447025661318713081295244033682389259290706560275662871806343945494986752.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+------------+
|                   Event                  | Counter |   Core 0   |
+------------------------------------------+---------+------------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 1189762938 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  |  937720035 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 1217561088 |
|              PWR_PKG_ENERGY              |   PWR0  |     3.7267 |
|              PWR_DRAM_ENERGY             |   PWR3  |     1.9310 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |          0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |   81795129 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      10240 |
|                DRAM_READS                | MBOX0C1 |   46118420 |
|                DRAM_WRITES               | MBOX0C2 |    5414101 |
+------------------------------------------+---------+------------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.7646 |
|        Runtime unhalted [s]       |    0.4070 |
|            Clock [MHz]            | 1774.4182 |
|                CPI                |    0.7882 |
|             Energy [J]            |    3.7267 |
|             Power [W]             |    4.8743 |
|          Energy DRAM [J]          |    1.9310 |
|           Power DRAM [W]          |    2.5256 |
|            DP [MFLOP/s]           |  107.0368 |
|          AVX DP [MFLOP/s]         |    0.0536 |
|          Packed [MUOPS/s]         |    0.0134 |
|          Scalar [MUOPS/s]         |  106.9832 |
|  Memory load bandwidth [MBytes/s] | 3860.4926 |
|  Memory load data volume [GBytes] |    2.9516 |
| Memory evict bandwidth [MBytes/s] |  453.2050 |
| Memory evict data volume [GBytes] |    0.3465 |
|    Memory bandwidth [MBytes/s]    | 4313.6975 |
|    Memory data volume [GBytes]    |    3.2981 |
|       Operational intensity       |    0.0248 |
+-----------------------------------+-----------+

Iteration with GEMM: 1
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 80 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	 [40] = 1024	 [41] = 1024	 [42] = 1024	 [43] = 1024	 [44] = 1024	 [45] = 1024	 [46] = 1024	 [47] = 1024	 [48] = 1024	 [49] = 1024	 [50] = 1024	 [51] = 1024	 [52] = 1024	 [53] = 1024	 [54] = 1024	 [55] = 1024	 [56] = 1024	 [57] = 1024	 [58] = 1024	 [59] = 1024	 [60] = 1024	 [61] = 1024	 [62] = 1024	 [63] = 1024	 [64] = 1024	 [65] = 1024	 [66] = 1024	 [67] = 1024	 [68] = 1024	 [69] = 1024	 [70] = 1024	 [71] = 1024	 [72] = 1024	 [73] = 1024	 [74] = 1024	 [75] = 1024	 [76] = 1024	 [77] = 1024	 [78] = 1024	 [79] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 13336028865759708548159703581442515594289516644631816320792515623528074475635264143042864401743108581485859821186866480891777603308238730160726712104661660092190315159028029116926156571823628049457930032271773203963381496074952922582327754752.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+------------+
|                   Event                  | Counter |   Core 0   |
+------------------------------------------+---------+------------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 2409598022 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 1890617879 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 2480307648 |
|              PWR_PKG_ENERGY              |   PWR0  |     7.4813 |
|              PWR_DRAM_ENERGY             |   PWR3  |     3.8961 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |          0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |  165681206 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      20480 |
|                DRAM_READS                | MBOX0C1 |   93203292 |
|                DRAM_WRITES               | MBOX0C2 |   10960977 |
+------------------------------------------+---------+------------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    1.5411 |
|        Runtime unhalted [s]       |    0.8206 |
|            Clock [MHz]            | 1756.1909 |
|                CPI                |    0.7846 |
|             Energy [J]            |    7.4813 |
|             Power [W]             |    4.8546 |
|          Energy DRAM [J]          |    3.8961 |
|           Power DRAM [W]          |    2.5282 |
|            DP [MFLOP/s]           |  107.5629 |
|          AVX DP [MFLOP/s]         |    0.0532 |
|          Packed [MUOPS/s]         |    0.0133 |
|          Scalar [MUOPS/s]         |  107.5098 |
|  Memory load bandwidth [MBytes/s] | 3870.6674 |
|  Memory load data volume [GBytes] |    5.9650 |
| Memory evict bandwidth [MBytes/s] |  455.2017 |
| Memory evict data volume [GBytes] |    0.7015 |
|    Memory bandwidth [MBytes/s]    | 4325.8691 |
|    Memory data volume [GBytes]    |    6.6665 |
|       Operational intensity       |    0.0249 |
+-----------------------------------+-----------+

Iteration with GEMM: 2
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 80 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	 [40] = 1024	 [41] = 1024	 [42] = 1024	 [43] = 1024	 [44] = 1024	 [45] = 1024	 [46] = 1024	 [47] = 1024	 [48] = 1024	 [49] = 1024	 [50] = 1024	 [51] = 1024	 [52] = 1024	 [53] = 1024	 [54] = 1024	 [55] = 1024	 [56] = 1024	 [57] = 1024	 [58] = 1024	 [59] = 1024	 [60] = 1024	 [61] = 1024	 [62] = 1024	 [63] = 1024	 [64] = 1024	 [65] = 1024	 [66] = 1024	 [67] = 1024	 [68] = 1024	 [69] = 1024	 [70] = 1024	 [71] = 1024	 [72] = 1024	 [73] = 1024	 [74] = 1024	 [75] = 1024	 [76] = 1024	 [77] = 1024	 [78] = 1024	 [79] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 13336028865759708548159703581442515594289516644631816320792515623528074475635264143042864401743108581485859821186866480891777603308238730160726712104661660092190315159028029116926156571823628049457930032271773203963381496074952922582327754752.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+------------+
|                   Event                  | Counter |   Core 0   |
+------------------------------------------+---------+------------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 2409598062 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 1931465793 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 2420642112 |
|              PWR_PKG_ENERGY              |   PWR0  |     7.5782 |
|              PWR_DRAM_ENERGY             |   PWR3  |     3.8555 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |          0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |  165681208 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      20480 |
|                DRAM_READS                | MBOX0C1 |   93054185 |
|                DRAM_WRITES               | MBOX0C2 |   10955001 |
+------------------------------------------+---------+------------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    1.5167 |
|        Runtime unhalted [s]       |    0.8383 |
|            Clock [MHz]            | 1838.3228 |
|                CPI                |    0.8016 |
|             Energy [J]            |    7.5782 |
|             Power [W]             |    4.9964 |
|          Energy DRAM [J]          |    3.8555 |
|           Power DRAM [W]          |    2.5419 |
|            DP [MFLOP/s]           |  109.2884 |
|          AVX DP [MFLOP/s]         |    0.0540 |
|          Packed [MUOPS/s]         |    0.0135 |
|          Scalar [MUOPS/s]         |  109.2344 |
|  Memory load bandwidth [MBytes/s] | 3926.4694 |
|  Memory load data volume [GBytes] |    5.9555 |
| Memory evict bandwidth [MBytes/s] |  462.2519 |
| Memory evict data volume [GBytes] |    0.7011 |
|    Memory bandwidth [MBytes/s]    | 4388.7213 |
|    Memory data volume [GBytes]    |    6.6566 |
|       Operational intensity       |    0.0249 |
+-----------------------------------+-----------+

Iteration with GEMM: 3
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 80 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	 [40] = 1024	 [41] = 1024	 [42] = 1024	 [43] = 1024	 [44] = 1024	 [45] = 1024	 [46] = 1024	 [47] = 1024	 [48] = 1024	 [49] = 1024	 [50] = 1024	 [51] = 1024	 [52] = 1024	 [53] = 1024	 [54] = 1024	 [55] = 1024	 [56] = 1024	 [57] = 1024	 [58] = 1024	 [59] = 1024	 [60] = 1024	 [61] = 1024	 [62] = 1024	 [63] = 1024	 [64] = 1024	 [65] = 1024	 [66] = 1024	 [67] = 1024	 [68] = 1024	 [69] = 1024	 [70] = 1024	 [71] = 1024	 [72] = 1024	 [73] = 1024	 [74] = 1024	 [75] = 1024	 [76] = 1024	 [77] = 1024	 [78] = 1024	 [79] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 13336028865759708548159703581442515594289516644631816320792515623528074475635264143042864401743108581485859821186866480891777603308238730160726712104661660092190315159028029116926156571823628049457930032271773203963381496074952922582327754752.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+------------+
|                   Event                  | Counter |   Core 0   |
+------------------------------------------+---------+------------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 2409598020 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 1890457138 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 2484430560 |
|              PWR_PKG_ENERGY              |   PWR0  |     7.4850 |
|              PWR_DRAM_ENERGY             |   PWR3  |     3.9037 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |          0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |  165681205 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      20480 |
|                DRAM_READS                | MBOX0C1 |   93519334 |
|                DRAM_WRITES               | MBOX0C2 |   10958388 |
+------------------------------------------+---------+------------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    1.5435 |
|        Runtime unhalted [s]       |    0.8205 |
|            Clock [MHz]            | 1753.1243 |
|                CPI                |    0.7846 |
|             Energy [J]            |    7.4850 |
|             Power [W]             |    4.8494 |
|          Energy DRAM [J]          |    3.9037 |
|           Power DRAM [W]          |    2.5291 |
|            DP [MFLOP/s]           |  107.3950 |
|          AVX DP [MFLOP/s]         |    0.0531 |
|          Packed [MUOPS/s]         |    0.0133 |
|          Scalar [MUOPS/s]         |  107.3419 |
|  Memory load bandwidth [MBytes/s] | 3877.7297 |
|  Memory load data volume [GBytes] |    5.9852 |
| Memory evict bandwidth [MBytes/s] |  454.3838 |
| Memory evict data volume [GBytes] |    0.7013 |
|    Memory bandwidth [MBytes/s]    | 4332.1134 |
|    Memory data volume [GBytes]    |    6.6866 |
|       Operational intensity       |    0.0248 |
+-----------------------------------+-----------+

Iteration with GEMM: 4
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 80 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	 [40] = 1024	 [41] = 1024	 [42] = 1024	 [43] = 1024	 [44] = 1024	 [45] = 1024	 [46] = 1024	 [47] = 1024	 [48] = 1024	 [49] = 1024	 [50] = 1024	 [51] = 1024	 [52] = 1024	 [53] = 1024	 [54] = 1024	 [55] = 1024	 [56] = 1024	 [57] = 1024	 [58] = 1024	 [59] = 1024	 [60] = 1024	 [61] = 1024	 [62] = 1024	 [63] = 1024	 [64] = 1024	 [65] = 1024	 [66] = 1024	 [67] = 1024	 [68] = 1024	 [69] = 1024	 [70] = 1024	 [71] = 1024	 [72] = 1024	 [73] = 1024	 [74] = 1024	 [75] = 1024	 [76] = 1024	 [77] = 1024	 [78] = 1024	 [79] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 13336028865759708548159703581442515594289516644631816320792515623528074475635264143042864401743108581485859821186866480891777603308238730160726712104661660092190315159028029116926156571823628049457930032271773203963381496074952922582327754752.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+------------+
|                   Event                  | Counter |   Core 0   |
+------------------------------------------+---------+------------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 2409598308 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 1896921889 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 2492749440 |
|              PWR_PKG_ENERGY              |   PWR0  |     7.4974 |
|              PWR_DRAM_ENERGY             |   PWR3  |     3.9072 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |          0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |  165681207 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      20480 |
|                DRAM_READS                | MBOX0C1 |   93648691 |
|                DRAM_WRITES               | MBOX0C2 |   10970063 |
+------------------------------------------+---------+------------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    1.5462 |
|        Runtime unhalted [s]       |    0.8233 |
|            Clock [MHz]            | 1753.2485 |
|                CPI                |    0.7872 |
|             Energy [J]            |    7.4974 |
|             Power [W]             |    4.8489 |
|          Energy DRAM [J]          |    3.9072 |
|           Power DRAM [W]          |    2.5269 |
|            DP [MFLOP/s]           |  107.2054 |
|          AVX DP [MFLOP/s]         |    0.0530 |
|          Packed [MUOPS/s]         |    0.0132 |
|          Scalar [MUOPS/s]         |  107.1524 |
|  Memory load bandwidth [MBytes/s] | 3876.2364 |
|  Memory load data volume [GBytes] |    5.9935 |
| Memory evict bandwidth [MBytes/s] |  454.0646 |
| Memory evict data volume [GBytes] |    0.7021 |
|    Memory bandwidth [MBytes/s]    | 4330.3010 |
|    Memory data volume [GBytes]    |    6.6956 |
|       Operational intensity       |    0.0248 |
+-----------------------------------+-----------+

Iteration with GEMM: 5
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 80 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	 [40] = 1024	 [41] = 1024	 [42] = 1024	 [43] = 1024	 [44] = 1024	 [45] = 1024	 [46] = 1024	 [47] = 1024	 [48] = 1024	 [49] = 1024	 [50] = 1024	 [51] = 1024	 [52] = 1024	 [53] = 1024	 [54] = 1024	 [55] = 1024	 [56] = 1024	 [57] = 1024	 [58] = 1024	 [59] = 1024	 [60] = 1024	 [61] = 1024	 [62] = 1024	 [63] = 1024	 [64] = 1024	 [65] = 1024	 [66] = 1024	 [67] = 1024	 [68] = 1024	 [69] = 1024	 [70] = 1024	 [71] = 1024	 [72] = 1024	 [73] = 1024	 [74] = 1024	 [75] = 1024	 [76] = 1024	 [77] = 1024	 [78] = 1024	 [79] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 13336028865759708548159703581442515594289516644631816320792515623528074475635264143042864401743108581485859821186866480891777603308238730160726712104661660092190315159028029116926156571823628049457930032271773203963381496074952922582327754752.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+------------+
|                   Event                  | Counter |   Core 0   |
+------------------------------------------+---------+------------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 2409598037 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 1897813495 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 2462015520 |
|              PWR_PKG_ENERGY              |   PWR0  |     7.5046 |
|              PWR_DRAM_ENERGY             |   PWR3  |     3.8808 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |          0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |  165681207 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      20480 |
|                DRAM_READS                | MBOX0C1 |   92825301 |
|                DRAM_WRITES               | MBOX0C2 |   10955679 |
+------------------------------------------+---------+------------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    1.5341 |
|        Runtime unhalted [s]       |    0.8237 |
|            Clock [MHz]            | 1775.9676 |
|                CPI                |    0.7876 |
|             Energy [J]            |    7.5046 |
|             Power [W]             |    4.8919 |
|          Energy DRAM [J]          |    3.8808 |
|           Power DRAM [W]          |    2.5297 |
|            DP [MFLOP/s]           |  108.0530 |
|          AVX DP [MFLOP/s]         |    0.0534 |
|          Packed [MUOPS/s]         |    0.0133 |
|          Scalar [MUOPS/s]         |  107.9996 |
|  Memory load bandwidth [MBytes/s] | 3872.5348 |
|  Memory load data volume [GBytes] |    5.9408 |
| Memory evict bandwidth [MBytes/s] |  457.0548 |
| Memory evict data volume [GBytes] |    0.7012 |
|    Memory bandwidth [MBytes/s]    | 4329.5896 |
|    Memory data volume [GBytes]    |    6.6420 |
|       Operational intensity       |    0.0250 |
+-----------------------------------+-----------+

Iteration with GEMM: 1
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 160 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	 [40] = 1024	 [41] = 1024	 [42] = 1024	 [43] = 1024	 [44] = 1024	 [45] = 1024	 [46] = 1024	 [47] = 1024	 [48] = 1024	 [49] = 1024	 [50] = 1024	 [51] = 1024	 [52] = 1024	 [53] = 1024	 [54] = 1024	 [55] = 1024	 [56] = 1024	 [57] = 1024	 [58] = 1024	 [59] = 1024	 [60] = 1024	 [61] = 1024	 [62] = 1024	 [63] = 1024	 [64] = 1024	 [65] = 1024	 [66] = 1024	 [67] = 1024	 [68] = 1024	 [69] = 1024	 [70] = 1024	 [71] = 1024	 [72] = 1024	 [73] = 1024	 [74] = 1024	 [75] = 1024	 [76] = 1024	 [77] = 1024	 [78] = 1024	 [79] = 1024	 [80] = 1024	 [81] = 1024	 [82] = 1024	 [83] = 1024	 [84] = 1024	 [85] = 1024	 [86] = 1024	 [87] = 1024	 [88] = 1024	 [89] = 1024	 [90] = 1024	 [91] = 1024	 [92] = 1024	 [93] = 1024	 [94] = 1024	 [95] = 1024	 [96] = 1024	 [97] = 1024	 [98] = 1024	 [99] = 1024	 [100] = 1024	 [101] = 1024	 [102] = 1024	 [103] = 1024	 [104] = 1024	 [105] = 1024	 [106] = 1024	 [107] = 1024	 [108] = 1024	 [109] = 1024	 [110] = 1024	 [111] = 1024	 [112] = 1024	 [113] = 1024	 [114] = 1024	 [115] = 1024	 [116] = 1024	 [117] = 1024	 [118] = 1024	 [119] = 1024	 [120] = 1024	 [121] = 1024	 [122] = 1024	 [123] = 1024	 [124] = 1024	 [125] = 1024	 [126] = 1024	 [127] = 1024	 [128] = 1024	 [129] = 1024	 [130] = 1024	 [131] = 1024	 [132] = 1024	 [133] = 1024	 [134] = 1024	 [135] = 1024	 [136] = 1024	 [137] = 1024	 [138] = 1024	 [139] = 1024	 [140] = 1024	 [141] = 1024	 [142] = 1024	 [143] = 1024	 [144] = 1024	 [145] = 1024	 [146] = 1024	 [147] = 1024	 [148] = 1024	 [149] = 1024	 [150] = 1024	 [151] = 1024	 [152] = 1024	 [153] = 1024	 [154] = 1024	 [155] = 1024	 [156] = 1024	 [157] = 1024	 [158] = 1024	 [159] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: inf
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+------------+
|                   Event                  | Counter |   Core 0   |
+------------------------------------------+---------+------------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 4849084252 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 3915339859 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 4826398464 |
|              PWR_PKG_ENERGY              |   PWR0  |    15.3297 |
|              PWR_DRAM_ENERGY             |   PWR3  |     7.6998 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |          0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |  333453367 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      40960 |
|                DRAM_READS                | MBOX0C1 |  186617387 |
|                DRAM_WRITES               | MBOX0C2 |   22045894 |
+------------------------------------------+---------+------------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    3.0223 |
|        Runtime unhalted [s]       |    1.6994 |
|            Clock [MHz]            | 1869.0386 |
|                CPI                |    0.8074 |
|             Energy [J]            |   15.3297 |
|             Power [W]             |    5.0722 |
|          Energy DRAM [J]          |    7.6998 |
|           Power DRAM [W]          |    2.5476 |
|            DP [MFLOP/s]           |  110.3848 |
|          AVX DP [MFLOP/s]         |    0.0542 |
|          Packed [MUOPS/s]         |    0.0136 |
|          Scalar [MUOPS/s]         |  110.3306 |
|  Memory load bandwidth [MBytes/s] | 3951.7820 |
|  Memory load data volume [GBytes] |   11.9435 |
| Memory evict bandwidth [MBytes/s] |  466.8406 |
| Memory evict data volume [GBytes] |    1.4109 |
|    Memory bandwidth [MBytes/s]    | 4418.6225 |
|    Memory data volume [GBytes]    |   13.3544 |
|       Operational intensity       |    0.0250 |
+-----------------------------------+-----------+

Iteration with GEMM: 2
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 160 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	 [40] = 1024	 [41] = 1024	 [42] = 1024	 [43] = 1024	 [44] = 1024	 [45] = 1024	 [46] = 1024	 [47] = 1024	 [48] = 1024	 [49] = 1024	 [50] = 1024	 [51] = 1024	 [52] = 1024	 [53] = 1024	 [54] = 1024	 [55] = 1024	 [56] = 1024	 [57] = 1024	 [58] = 1024	 [59] = 1024	 [60] = 1024	 [61] = 1024	 [62] = 1024	 [63] = 1024	 [64] = 1024	 [65] = 1024	 [66] = 1024	 [67] = 1024	 [68] = 1024	 [69] = 1024	 [70] = 1024	 [71] = 1024	 [72] = 1024	 [73] = 1024	 [74] = 1024	 [75] = 1024	 [76] = 1024	 [77] = 1024	 [78] = 1024	 [79] = 1024	 [80] = 1024	 [81] = 1024	 [82] = 1024	 [83] = 1024	 [84] = 1024	 [85] = 1024	 [86] = 1024	 [87] = 1024	 [88] = 1024	 [89] = 1024	 [90] = 1024	 [91] = 1024	 [92] = 1024	 [93] = 1024	 [94] = 1024	 [95] = 1024	 [96] = 1024	 [97] = 1024	 [98] = 1024	 [99] = 1024	 [100] = 1024	 [101] = 1024	 [102] = 1024	 [103] = 1024	 [104] = 1024	 [105] = 1024	 [106] = 1024	 [107] = 1024	 [108] = 1024	 [109] = 1024	 [110] = 1024	 [111] = 1024	 [112] = 1024	 [113] = 1024	 [114] = 1024	 [115] = 1024	 [116] = 1024	 [117] = 1024	 [118] = 1024	 [119] = 1024	 [120] = 1024	 [121] = 1024	 [122] = 1024	 [123] = 1024	 [124] = 1024	 [125] = 1024	 [126] = 1024	 [127] = 1024	 [128] = 1024	 [129] = 1024	 [130] = 1024	 [131] = 1024	 [132] = 1024	 [133] = 1024	 [134] = 1024	 [135] = 1024	 [136] = 1024	 [137] = 1024	 [138] = 1024	 [139] = 1024	 [140] = 1024	 [141] = 1024	 [142] = 1024	 [143] = 1024	 [144] = 1024	 [145] = 1024	 [146] = 1024	 [147] = 1024	 [148] = 1024	 [149] = 1024	 [150] = 1024	 [151] = 1024	 [152] = 1024	 [153] = 1024	 [154] = 1024	 [155] = 1024	 [156] = 1024	 [157] = 1024	 [158] = 1024	 [159] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: inf
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+------------+
|                   Event                  | Counter |   Core 0   |
+------------------------------------------+---------+------------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 4849084267 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 3870964934 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 4879921728 |
|              PWR_PKG_ENERGY              |   PWR0  |    15.2625 |
|              PWR_DRAM_ENERGY             |   PWR3  |     7.7294 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |          0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |  333453367 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      40960 |
|                DRAM_READS                | MBOX0C1 |  186577727 |
|                DRAM_WRITES               | MBOX0C2 |   22025349 |
+------------------------------------------+---------+------------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    3.0417 |
|        Runtime unhalted [s]       |    1.6801 |
|            Clock [MHz]            | 1827.5891 |
|                CPI                |    0.7983 |
|             Energy [J]            |   15.2625 |
|             Power [W]             |    5.0178 |
|          Energy DRAM [J]          |    7.7294 |
|           Power DRAM [W]          |    2.5412 |
|            DP [MFLOP/s]           |  109.6818 |
|          AVX DP [MFLOP/s]         |    0.0539 |
|          Packed [MUOPS/s]         |    0.0135 |
|          Scalar [MUOPS/s]         |  109.6280 |
|  Memory load bandwidth [MBytes/s] | 3925.7802 |
|  Memory load data volume [GBytes] |   11.9410 |
| Memory evict bandwidth [MBytes/s] |  463.4352 |
| Memory evict data volume [GBytes] |    1.4096 |
|    Memory bandwidth [MBytes/s]    | 4389.2154 |
|    Memory data volume [GBytes]    |   13.3506 |
|       Operational intensity       |    0.0250 |
+-----------------------------------+-----------+

Iteration with GEMM: 3
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 160 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	 [40] = 1024	 [41] = 1024	 [42] = 1024	 [43] = 1024	 [44] = 1024	 [45] = 1024	 [46] = 1024	 [47] = 1024	 [48] = 1024	 [49] = 1024	 [50] = 1024	 [51] = 1024	 [52] = 1024	 [53] = 1024	 [54] = 1024	 [55] = 1024	 [56] = 1024	 [57] = 1024	 [58] = 1024	 [59] = 1024	 [60] = 1024	 [61] = 1024	 [62] = 1024	 [63] = 1024	 [64] = 1024	 [65] = 1024	 [66] = 1024	 [67] = 1024	 [68] = 1024	 [69] = 1024	 [70] = 1024	 [71] = 1024	 [72] = 1024	 [73] = 1024	 [74] = 1024	 [75] = 1024	 [76] = 1024	 [77] = 1024	 [78] = 1024	 [79] = 1024	 [80] = 1024	 [81] = 1024	 [82] = 1024	 [83] = 1024	 [84] = 1024	 [85] = 1024	 [86] = 1024	 [87] = 1024	 [88] = 1024	 [89] = 1024	 [90] = 1024	 [91] = 1024	 [92] = 1024	 [93] = 1024	 [94] = 1024	 [95] = 1024	 [96] = 1024	 [97] = 1024	 [98] = 1024	 [99] = 1024	 [100] = 1024	 [101] = 1024	 [102] = 1024	 [103] = 1024	 [104] = 1024	 [105] = 1024	 [106] = 1024	 [107] = 1024	 [108] = 1024	 [109] = 1024	 [110] = 1024	 [111] = 1024	 [112] = 1024	 [113] = 1024	 [114] = 1024	 [115] = 1024	 [116] = 1024	 [117] = 1024	 [118] = 1024	 [119] = 1024	 [120] = 1024	 [121] = 1024	 [122] = 1024	 [123] = 1024	 [124] = 1024	 [125] = 1024	 [126] = 1024	 [127] = 1024	 [128] = 1024	 [129] = 1024	 [130] = 1024	 [131] = 1024	 [132] = 1024	 [133] = 1024	 [134] = 1024	 [135] = 1024	 [136] = 1024	 [137] = 1024	 [138] = 1024	 [139] = 1024	 [140] = 1024	 [141] = 1024	 [142] = 1024	 [143] = 1024	 [144] = 1024	 [145] = 1024	 [146] = 1024	 [147] = 1024	 [148] = 1024	 [149] = 1024	 [150] = 1024	 [151] = 1024	 [152] = 1024	 [153] = 1024	 [154] = 1024	 [155] = 1024	 [156] = 1024	 [157] = 1024	 [158] = 1024	 [159] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: inf
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+------------+
|                   Event                  | Counter |   Core 0   |
+------------------------------------------+---------+------------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 4849084365 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 3876693398 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 4876279776 |
|              PWR_PKG_ENERGY              |   PWR0  |    15.2311 |
|              PWR_DRAM_ENERGY             |   PWR3  |     7.7299 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |          0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |  333453367 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      40960 |
|                DRAM_READS                | MBOX0C1 |  186720371 |
|                DRAM_WRITES               | MBOX0C2 |   22043277 |
+------------------------------------------+---------+------------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    3.0407 |
|        Runtime unhalted [s]       |    1.6826 |
|            Clock [MHz]            | 1831.6634 |
|                CPI                |    0.7995 |
|             Energy [J]            |   15.2311 |
|             Power [W]             |    5.0090 |
|          Energy DRAM [J]          |    7.7299 |
|           Power DRAM [W]          |    2.5421 |
|            DP [MFLOP/s]           |  109.7155 |
|          AVX DP [MFLOP/s]         |    0.0539 |
|          Packed [MUOPS/s]         |    0.0135 |
|          Scalar [MUOPS/s]         |  109.6616 |
|  Memory load bandwidth [MBytes/s] | 3929.9865 |
|  Memory load data volume [GBytes] |   11.9501 |
| Memory evict bandwidth [MBytes/s] |  463.9546 |
| Memory evict data volume [GBytes] |    1.4108 |
|    Memory bandwidth [MBytes/s]    | 4393.9412 |
|    Memory data volume [GBytes]    |   13.3609 |
|       Operational intensity       |    0.0250 |
+-----------------------------------+-----------+

Iteration with GEMM: 4
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 160 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	 [40] = 1024	 [41] = 1024	 [42] = 1024	 [43] = 1024	 [44] = 1024	 [45] = 1024	 [46] = 1024	 [47] = 1024	 [48] = 1024	 [49] = 1024	 [50] = 1024	 [51] = 1024	 [52] = 1024	 [53] = 1024	 [54] = 1024	 [55] = 1024	 [56] = 1024	 [57] = 1024	 [58] = 1024	 [59] = 1024	 [60] = 1024	 [61] = 1024	 [62] = 1024	 [63] = 1024	 [64] = 1024	 [65] = 1024	 [66] = 1024	 [67] = 1024	 [68] = 1024	 [69] = 1024	 [70] = 1024	 [71] = 1024	 [72] = 1024	 [73] = 1024	 [74] = 1024	 [75] = 1024	 [76] = 1024	 [77] = 1024	 [78] = 1024	 [79] = 1024	 [80] = 1024	 [81] = 1024	 [82] = 1024	 [83] = 1024	 [84] = 1024	 [85] = 1024	 [86] = 1024	 [87] = 1024	 [88] = 1024	 [89] = 1024	 [90] = 1024	 [91] = 1024	 [92] = 1024	 [93] = 1024	 [94] = 1024	 [95] = 1024	 [96] = 1024	 [97] = 1024	 [98] = 1024	 [99] = 1024	 [100] = 1024	 [101] = 1024	 [102] = 1024	 [103] = 1024	 [104] = 1024	 [105] = 1024	 [106] = 1024	 [107] = 1024	 [108] = 1024	 [109] = 1024	 [110] = 1024	 [111] = 1024	 [112] = 1024	 [113] = 1024	 [114] = 1024	 [115] = 1024	 [116] = 1024	 [117] = 1024	 [118] = 1024	 [119] = 1024	 [120] = 1024	 [121] = 1024	 [122] = 1024	 [123] = 1024	 [124] = 1024	 [125] = 1024	 [126] = 1024	 [127] = 1024	 [128] = 1024	 [129] = 1024	 [130] = 1024	 [131] = 1024	 [132] = 1024	 [133] = 1024	 [134] = 1024	 [135] = 1024	 [136] = 1024	 [137] = 1024	 [138] = 1024	 [139] = 1024	 [140] = 1024	 [141] = 1024	 [142] = 1024	 [143] = 1024	 [144] = 1024	 [145] = 1024	 [146] = 1024	 [147] = 1024	 [148] = 1024	 [149] = 1024	 [150] = 1024	 [151] = 1024	 [152] = 1024	 [153] = 1024	 [154] = 1024	 [155] = 1024	 [156] = 1024	 [157] = 1024	 [158] = 1024	 [159] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: inf
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+------------+
|                   Event                  | Counter |   Core 0   |
+------------------------------------------+---------+------------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 4849084268 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 3869559813 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 4880722752 |
|              PWR_PKG_ENERGY              |   PWR0  |    15.2281 |
|              PWR_DRAM_ENERGY             |   PWR3  |     7.7372 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |          0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |  333453367 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      40960 |
|                DRAM_READS                | MBOX0C1 |  187154105 |
|                DRAM_WRITES               | MBOX0C2 |   22058487 |
+------------------------------------------+---------+------------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    3.0427 |
|        Runtime unhalted [s]       |    1.6796 |
|            Clock [MHz]            | 1826.5982 |
|                CPI                |    0.7980 |
|             Energy [J]            |   15.2281 |
|             Power [W]             |    5.0048 |
|          Energy DRAM [J]          |    7.7372 |
|           Power DRAM [W]          |    2.5429 |
|            DP [MFLOP/s]           |  109.6459 |
|          AVX DP [MFLOP/s]         |    0.0538 |
|          Packed [MUOPS/s]         |    0.0135 |
|          Scalar [MUOPS/s]         |  109.5920 |
|  Memory load bandwidth [MBytes/s] | 3936.6177 |
|  Memory load data volume [GBytes] |   11.9779 |
| Memory evict bandwidth [MBytes/s] |  463.9804 |
| Memory evict data volume [GBytes] |    1.4117 |
|    Memory bandwidth [MBytes/s]    | 4400.5981 |
|    Memory data volume [GBytes]    |   13.3896 |
|       Operational intensity       |    0.0249 |
+-----------------------------------+-----------+

Iteration with GEMM: 5
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 160 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	 [40] = 1024	 [41] = 1024	 [42] = 1024	 [43] = 1024	 [44] = 1024	 [45] = 1024	 [46] = 1024	 [47] = 1024	 [48] = 1024	 [49] = 1024	 [50] = 1024	 [51] = 1024	 [52] = 1024	 [53] = 1024	 [54] = 1024	 [55] = 1024	 [56] = 1024	 [57] = 1024	 [58] = 1024	 [59] = 1024	 [60] = 1024	 [61] = 1024	 [62] = 1024	 [63] = 1024	 [64] = 1024	 [65] = 1024	 [66] = 1024	 [67] = 1024	 [68] = 1024	 [69] = 1024	 [70] = 1024	 [71] = 1024	 [72] = 1024	 [73] = 1024	 [74] = 1024	 [75] = 1024	 [76] = 1024	 [77] = 1024	 [78] = 1024	 [79] = 1024	 [80] = 1024	 [81] = 1024	 [82] = 1024	 [83] = 1024	 [84] = 1024	 [85] = 1024	 [86] = 1024	 [87] = 1024	 [88] = 1024	 [89] = 1024	 [90] = 1024	 [91] = 1024	 [92] = 1024	 [93] = 1024	 [94] = 1024	 [95] = 1024	 [96] = 1024	 [97] = 1024	 [98] = 1024	 [99] = 1024	 [100] = 1024	 [101] = 1024	 [102] = 1024	 [103] = 1024	 [104] = 1024	 [105] = 1024	 [106] = 1024	 [107] = 1024	 [108] = 1024	 [109] = 1024	 [110] = 1024	 [111] = 1024	 [112] = 1024	 [113] = 1024	 [114] = 1024	 [115] = 1024	 [116] = 1024	 [117] = 1024	 [118] = 1024	 [119] = 1024	 [120] = 1024	 [121] = 1024	 [122] = 1024	 [123] = 1024	 [124] = 1024	 [125] = 1024	 [126] = 1024	 [127] = 1024	 [128] = 1024	 [129] = 1024	 [130] = 1024	 [131] = 1024	 [132] = 1024	 [133] = 1024	 [134] = 1024	 [135] = 1024	 [136] = 1024	 [137] = 1024	 [138] = 1024	 [139] = 1024	 [140] = 1024	 [141] = 1024	 [142] = 1024	 [143] = 1024	 [144] = 1024	 [145] = 1024	 [146] = 1024	 [147] = 1024	 [148] = 1024	 [149] = 1024	 [150] = 1024	 [151] = 1024	 [152] = 1024	 [153] = 1024	 [154] = 1024	 [155] = 1024	 [156] = 1024	 [157] = 1024	 [158] = 1024	 [159] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: inf
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+------------+
|                   Event                  | Counter |   Core 0   |
+------------------------------------------+---------+------------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 4849084261 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 3885832540 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 4856669376 |
|              PWR_PKG_ENERGY              |   PWR0  |    15.2544 |
|              PWR_DRAM_ENERGY             |   PWR3  |     7.7133 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |          0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |  333453366 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      40960 |
|                DRAM_READS                | MBOX0C1 |  186461911 |
|                DRAM_WRITES               | MBOX0C2 |   22052779 |
+------------------------------------------+---------+------------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    3.0321 |
|        Runtime unhalted [s]       |    1.6866 |
|            Clock [MHz]            | 1843.3990 |
|                CPI                |    0.8014 |
|             Energy [J]            |   15.2544 |
|             Power [W]             |    5.0310 |
|          Energy DRAM [J]          |    7.7133 |
|           Power DRAM [W]          |    2.5439 |
|            DP [MFLOP/s]           |  110.0296 |
|          AVX DP [MFLOP/s]         |    0.0540 |
|          Packed [MUOPS/s]         |    0.0135 |
|          Scalar [MUOPS/s]         |  109.9755 |
|  Memory load bandwidth [MBytes/s] | 3935.7821 |
|  Memory load data volume [GBytes] |   11.9336 |
| Memory evict bandwidth [MBytes/s] |  465.4834 |
| Memory evict data volume [GBytes] |    1.4114 |
|    Memory bandwidth [MBytes/s]    | 4401.2655 |
|    Memory data volume [GBytes]    |   13.3449 |
|       Operational intensity       |    0.0250 |
+-----------------------------------+-----------+

Iteration with GEMM: 1
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 320 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	 [40] = 1024	 [41] = 1024	 [42] = 1024	 [43] = 1024	 [44] = 1024	 [45] = 1024	 [46] = 1024	 [47] = 1024	 [48] = 1024	 [49] = 1024	 [50] = 1024	 [51] = 1024	 [52] = 1024	 [53] = 1024	 [54] = 1024	 [55] = 1024	 [56] = 1024	 [57] = 1024	 [58] = 1024	 [59] = 1024	 [60] = 1024	 [61] = 1024	 [62] = 1024	 [63] = 1024	 [64] = 1024	 [65] = 1024	 [66] = 1024	 [67] = 1024	 [68] = 1024	 [69] = 1024	 [70] = 1024	 [71] = 1024	 [72] = 1024	 [73] = 1024	 [74] = 1024	 [75] = 1024	 [76] = 1024	 [77] = 1024	 [78] = 1024	 [79] = 1024	 [80] = 1024	 [81] = 1024	 [82] = 1024	 [83] = 1024	 [84] = 1024	 [85] = 1024	 [86] = 1024	 [87] = 1024	 [88] = 1024	 [89] = 1024	 [90] = 1024	 [91] = 1024	 [92] = 1024	 [93] = 1024	 [94] = 1024	 [95] = 1024	 [96] = 1024	 [97] = 1024	 [98] = 1024	 [99] = 1024	 [100] = 1024	 [101] = 1024	 [102] = 1024	 [103] = 1024	 [104] = 1024	 [105] = 1024	 [106] = 1024	 [107] = 1024	 [108] = 1024	 [109] = 1024	 [110] = 1024	 [111] = 1024	 [112] = 1024	 [113] = 1024	 [114] = 1024	 [115] = 1024	 [116] = 1024	 [117] = 1024	 [118] = 1024	 [119] = 1024	 [120] = 1024	 [121] = 1024	 [122] = 1024	 [123] = 1024	 [124] = 1024	 [125] = 1024	 [126] = 1024	 [127] = 1024	 [128] = 1024	 [129] = 1024	 [130] = 1024	 [131] = 1024	 [132] = 1024	 [133] = 1024	 [134] = 1024	 [135] = 1024	 [136] = 1024	 [137] = 1024	 [138] = 1024	 [139] = 1024	 [140] = 1024	 [141] = 1024	 [142] = 1024	 [143] = 1024	 [144] = 1024	 [145] = 1024	 [146] = 1024	 [147] = 1024	 [148] = 1024	 [149] = 1024	 [150] = 1024	 [151] = 1024	 [152] = 1024	 [153] = 1024	 [154] = 1024	 [155] = 1024	 [156] = 1024	 [157] = 1024	 [158] = 1024	 [159] = 1024	 [160] = 1024	 [161] = 1024	 [162] = 1024	 [163] = 1024	 [164] = 1024	 [165] = 1024	 [166] = 1024	 [167] = 1024	 [168] = 1024	 [169] = 1024	 [170] = 1024	 [171] = 1024	 [172] = 1024	 [173] = 1024	 [174] = 1024	 [175] = 1024	 [176] = 1024	 [177] = 1024	 [178] = 1024	 [179] = 1024	 [180] = 1024	 [181] = 1024	 [182] = 1024	 [183] = 1024	 [184] = 1024	 [185] = 1024	 [186] = 1024	 [187] = 1024	 [188] = 1024	 [189] = 1024	 [190] = 1024	 [191] = 1024	 [192] = 1024	 [193] = 1024	 [194] = 1024	 [195] = 1024	 [196] = 1024	 [197] = 1024	 [198] = 1024	 [199] = 1024	 [200] = 1024	 [201] = 1024	 [202] = 1024	 [203] = 1024	 [204] = 1024	 [205] = 1024	 [206] = 1024	 [207] = 1024	 [208] = 1024	 [209] = 1024	 [210] = 1024	 [211] = 1024	 [212] = 1024	 [213] = 1024	 [214] = 1024	 [215] = 1024	 [216] = 1024	 [217] = 1024	 [218] = 1024	 [219] = 1024	 [220] = 1024	 [221] = 1024	 [222] = 1024	 [223] = 1024	 [224] = 1024	 [225] = 1024	 [226] = 1024	 [227] = 1024	 [228] = 1024	 [229] = 1024	 [230] = 1024	 [231] = 1024	 [232] = 1024	 [233] = 1024	 [234] = 1024	 [235] = 1024	 [236] = 1024	 [237] = 1024	 [238] = 1024	 [239] = 1024	 [240] = 1024	 [241] = 1024	 [242] = 1024	 [243] = 1024	 [244] = 1024	 [245] = 1024	 [246] = 1024	 [247] = 1024	 [248] = 1024	 [249] = 1024	 [250] = 1024	 [251] = 1024	 [252] = 1024	 [253] = 1024	 [254] = 1024	 [255] = 1024	 [256] = 1024	 [257] = 1024	 [258] = 1024	 [259] = 1024	 [260] = 1024	 [261] = 1024	 [262] = 1024	 [263] = 1024	 [264] = 1024	 [265] = 1024	 [266] = 1024	 [267] = 1024	 [268] = 1024	 [269] = 1024	 [270] = 1024	 [271] = 1024	 [272] = 1024	 [273] = 1024	 [274] = 1024	 [275] = 1024	 [276] = 1024	 [277] = 1024	 [278] = 1024	 [279] = 1024	 [280] = 1024	 [281] = 1024	 [282] = 1024	 [283] = 1024	 [284] = 1024	 [285] = 1024	 [286] = 1024	 [287] = 1024	 [288] = 1024	 [289] = 1024	 [290] = 1024	 [291] = 1024	 [292] = 1024	 [293] = 1024	 [294] = 1024	 [295] = 1024	 [296] = 1024	 [297] = 1024	 [298] = 1024	 [299] = 1024	 [300] = 1024	 [301] = 1024	 [302] = 1024	 [303] = 1024	 [304] = 1024	 [305] = 1024	 [306] = 1024	 [307] = 1024	 [308] = 1024	 [309] = 1024	 [310] = 1024	 [311] = 1024	 [312] = 1024	 [313] = 1024	 [314] = 1024	 [315] = 1024	 [316] = 1024	 [317] = 1024	 [318] = 1024	 [319] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: inf
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+------------+
|                   Event                  | Counter |   Core 0   |
+------------------------------------------+---------+------------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 9728229874 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 7975401776 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 9565307808 |
|              PWR_PKG_ENERGY              |   PWR0  |    31.7968 |
|              PWR_DRAM_ENERGY             |   PWR3  |    15.3564 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |          0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |  668997687 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      81920 |
|                DRAM_READS                | MBOX0C1 |  375898172 |
|                DRAM_WRITES               | MBOX0C2 |   44428796 |
+------------------------------------------+---------+------------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    5.9855 |
|        Runtime unhalted [s]       |    3.4616 |
|            Clock [MHz]            | 1921.0017 |
|                CPI                |    0.8198 |
|             Energy [J]            |   31.7968 |
|             Power [W]             |    5.3123 |
|          Energy DRAM [J]          |   15.3564 |
|           Power DRAM [W]          |    2.5656 |
|            DP [MFLOP/s]           |  111.8252 |
|          AVX DP [MFLOP/s]         |    0.0547 |
|          Packed [MUOPS/s]         |    0.0137 |
|          Scalar [MUOPS/s]         |  111.7704 |
|  Memory load bandwidth [MBytes/s] | 4019.3183 |
|  Memory load data volume [GBytes] |   24.0575 |
| Memory evict bandwidth [MBytes/s] |  475.0581 |
| Memory evict data volume [GBytes] |    2.8434 |
|    Memory bandwidth [MBytes/s]    | 4494.3764 |
|    Memory data volume [GBytes]    |   26.9009 |
|       Operational intensity       |    0.0249 |
+-----------------------------------+-----------+

Iteration with GEMM: 2
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 320 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	 [40] = 1024	 [41] = 1024	 [42] = 1024	 [43] = 1024	 [44] = 1024	 [45] = 1024	 [46] = 1024	 [47] = 1024	 [48] = 1024	 [49] = 1024	 [50] = 1024	 [51] = 1024	 [52] = 1024	 [53] = 1024	 [54] = 1024	 [55] = 1024	 [56] = 1024	 [57] = 1024	 [58] = 1024	 [59] = 1024	 [60] = 1024	 [61] = 1024	 [62] = 1024	 [63] = 1024	 [64] = 1024	 [65] = 1024	 [66] = 1024	 [67] = 1024	 [68] = 1024	 [69] = 1024	 [70] = 1024	 [71] = 1024	 [72] = 1024	 [73] = 1024	 [74] = 1024	 [75] = 1024	 [76] = 1024	 [77] = 1024	 [78] = 1024	 [79] = 1024	 [80] = 1024	 [81] = 1024	 [82] = 1024	 [83] = 1024	 [84] = 1024	 [85] = 1024	 [86] = 1024	 [87] = 1024	 [88] = 1024	 [89] = 1024	 [90] = 1024	 [91] = 1024	 [92] = 1024	 [93] = 1024	 [94] = 1024	 [95] = 1024	 [96] = 1024	 [97] = 1024	 [98] = 1024	 [99] = 1024	 [100] = 1024	 [101] = 1024	 [102] = 1024	 [103] = 1024	 [104] = 1024	 [105] = 1024	 [106] = 1024	 [107] = 1024	 [108] = 1024	 [109] = 1024	 [110] = 1024	 [111] = 1024	 [112] = 1024	 [113] = 1024	 [114] = 1024	 [115] = 1024	 [116] = 1024	 [117] = 1024	 [118] = 1024	 [119] = 1024	 [120] = 1024	 [121] = 1024	 [122] = 1024	 [123] = 1024	 [124] = 1024	 [125] = 1024	 [126] = 1024	 [127] = 1024	 [128] = 1024	 [129] = 1024	 [130] = 1024	 [131] = 1024	 [132] = 1024	 [133] = 1024	 [134] = 1024	 [135] = 1024	 [136] = 1024	 [137] = 1024	 [138] = 1024	 [139] = 1024	 [140] = 1024	 [141] = 1024	 [142] = 1024	 [143] = 1024	 [144] = 1024	 [145] = 1024	 [146] = 1024	 [147] = 1024	 [148] = 1024	 [149] = 1024	 [150] = 1024	 [151] = 1024	 [152] = 1024	 [153] = 1024	 [154] = 1024	 [155] = 1024	 [156] = 1024	 [157] = 1024	 [158] = 1024	 [159] = 1024	 [160] = 1024	 [161] = 1024	 [162] = 1024	 [163] = 1024	 [164] = 1024	 [165] = 1024	 [166] = 1024	 [167] = 1024	 [168] = 1024	 [169] = 1024	 [170] = 1024	 [171] = 1024	 [172] = 1024	 [173] = 1024	 [174] = 1024	 [175] = 1024	 [176] = 1024	 [177] = 1024	 [178] = 1024	 [179] = 1024	 [180] = 1024	 [181] = 1024	 [182] = 1024	 [183] = 1024	 [184] = 1024	 [185] = 1024	 [186] = 1024	 [187] = 1024	 [188] = 1024	 [189] = 1024	 [190] = 1024	 [191] = 1024	 [192] = 1024	 [193] = 1024	 [194] = 1024	 [195] = 1024	 [196] = 1024	 [197] = 1024	 [198] = 1024	 [199] = 1024	 [200] = 1024	 [201] = 1024	 [202] = 1024	 [203] = 1024	 [204] = 1024	 [205] = 1024	 [206] = 1024	 [207] = 1024	 [208] = 1024	 [209] = 1024	 [210] = 1024	 [211] = 1024	 [212] = 1024	 [213] = 1024	 [214] = 1024	 [215] = 1024	 [216] = 1024	 [217] = 1024	 [218] = 1024	 [219] = 1024	 [220] = 1024	 [221] = 1024	 [222] = 1024	 [223] = 1024	 [224] = 1024	 [225] = 1024	 [226] = 1024	 [227] = 1024	 [228] = 1024	 [229] = 1024	 [230] = 1024	 [231] = 1024	 [232] = 1024	 [233] = 1024	 [234] = 1024	 [235] = 1024	 [236] = 1024	 [237] = 1024	 [238] = 1024	 [239] = 1024	 [240] = 1024	 [241] = 1024	 [242] = 1024	 [243] = 1024	 [244] = 1024	 [245] = 1024	 [246] = 1024	 [247] = 1024	 [248] = 1024	 [249] = 1024	 [250] = 1024	 [251] = 1024	 [252] = 1024	 [253] = 1024	 [254] = 1024	 [255] = 1024	 [256] = 1024	 [257] = 1024	 [258] = 1024	 [259] = 1024	 [260] = 1024	 [261] = 1024	 [262] = 1024	 [263] = 1024	 [264] = 1024	 [265] = 1024	 [266] = 1024	 [267] = 1024	 [268] = 1024	 [269] = 1024	 [270] = 1024	 [271] = 1024	 [272] = 1024	 [273] = 1024	 [274] = 1024	 [275] = 1024	 [276] = 1024	 [277] = 1024	 [278] = 1024	 [279] = 1024	 [280] = 1024	 [281] = 1024	 [282] = 1024	 [283] = 1024	 [284] = 1024	 [285] = 1024	 [286] = 1024	 [287] = 1024	 [288] = 1024	 [289] = 1024	 [290] = 1024	 [291] = 1024	 [292] = 1024	 [293] = 1024	 [294] = 1024	 [295] = 1024	 [296] = 1024	 [297] = 1024	 [298] = 1024	 [299] = 1024	 [300] = 1024	 [301] = 1024	 [302] = 1024	 [303] = 1024	 [304] = 1024	 [305] = 1024	 [306] = 1024	 [307] = 1024	 [308] = 1024	 [309] = 1024	 [310] = 1024	 [311] = 1024	 [312] = 1024	 [313] = 1024	 [314] = 1024	 [315] = 1024	 [316] = 1024	 [317] = 1024	 [318] = 1024	 [319] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: inf
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+------------+
|                   Event                  | Counter |   Core 0   |
+------------------------------------------+---------+------------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 9728230048 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 7780810072 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 9769107264 |
|              PWR_PKG_ENERGY              |   PWR0  |    30.6160 |
|              PWR_DRAM_ENERGY             |   PWR3  |    15.4902 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |          0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |  668997687 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      81920 |
|                DRAM_READS                | MBOX0C1 |  375396265 |
|                DRAM_WRITES               | MBOX0C2 |   44296668 |
+------------------------------------------+---------+------------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    6.0799 |
|        Runtime unhalted [s]       |    3.3772 |
|            Clock [MHz]            | 1835.0012 |
|                CPI                |    0.7998 |
|             Energy [J]            |   30.6160 |
|             Power [W]             |    5.0356 |
|          Energy DRAM [J]          |   15.4902 |
|           Power DRAM [W]          |    2.5478 |
|            DP [MFLOP/s]           |  110.0890 |
|          AVX DP [MFLOP/s]         |    0.0539 |
|          Packed [MUOPS/s]         |    0.0135 |
|          Scalar [MUOPS/s]         |  110.0351 |
|  Memory load bandwidth [MBytes/s] | 3951.6309 |
|  Memory load data volume [GBytes] |   24.0254 |
| Memory evict bandwidth [MBytes/s] |  466.2915 |
| Memory evict data volume [GBytes] |    2.8350 |
|    Memory bandwidth [MBytes/s]    | 4417.9224 |
|    Memory data volume [GBytes]    |   26.8603 |
|       Operational intensity       |    0.0249 |
+-----------------------------------+-----------+

Iteration with GEMM: 3
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 320 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	 [40] = 1024	 [41] = 1024	 [42] = 1024	 [43] = 1024	 [44] = 1024	 [45] = 1024	 [46] = 1024	 [47] = 1024	 [48] = 1024	 [49] = 1024	 [50] = 1024	 [51] = 1024	 [52] = 1024	 [53] = 1024	 [54] = 1024	 [55] = 1024	 [56] = 1024	 [57] = 1024	 [58] = 1024	 [59] = 1024	 [60] = 1024	 [61] = 1024	 [62] = 1024	 [63] = 1024	 [64] = 1024	 [65] = 1024	 [66] = 1024	 [67] = 1024	 [68] = 1024	 [69] = 1024	 [70] = 1024	 [71] = 1024	 [72] = 1024	 [73] = 1024	 [74] = 1024	 [75] = 1024	 [76] = 1024	 [77] = 1024	 [78] = 1024	 [79] = 1024	 [80] = 1024	 [81] = 1024	 [82] = 1024	 [83] = 1024	 [84] = 1024	 [85] = 1024	 [86] = 1024	 [87] = 1024	 [88] = 1024	 [89] = 1024	 [90] = 1024	 [91] = 1024	 [92] = 1024	 [93] = 1024	 [94] = 1024	 [95] = 1024	 [96] = 1024	 [97] = 1024	 [98] = 1024	 [99] = 1024	 [100] = 1024	 [101] = 1024	 [102] = 1024	 [103] = 1024	 [104] = 1024	 [105] = 1024	 [106] = 1024	 [107] = 1024	 [108] = 1024	 [109] = 1024	 [110] = 1024	 [111] = 1024	 [112] = 1024	 [113] = 1024	 [114] = 1024	 [115] = 1024	 [116] = 1024	 [117] = 1024	 [118] = 1024	 [119] = 1024	 [120] = 1024	 [121] = 1024	 [122] = 1024	 [123] = 1024	 [124] = 1024	 [125] = 1024	 [126] = 1024	 [127] = 1024	 [128] = 1024	 [129] = 1024	 [130] = 1024	 [131] = 1024	 [132] = 1024	 [133] = 1024	 [134] = 1024	 [135] = 1024	 [136] = 1024	 [137] = 1024	 [138] = 1024	 [139] = 1024	 [140] = 1024	 [141] = 1024	 [142] = 1024	 [143] = 1024	 [144] = 1024	 [145] = 1024	 [146] = 1024	 [147] = 1024	 [148] = 1024	 [149] = 1024	 [150] = 1024	 [151] = 1024	 [152] = 1024	 [153] = 1024	 [154] = 1024	 [155] = 1024	 [156] = 1024	 [157] = 1024	 [158] = 1024	 [159] = 1024	 [160] = 1024	 [161] = 1024	 [162] = 1024	 [163] = 1024	 [164] = 1024	 [165] = 1024	 [166] = 1024	 [167] = 1024	 [168] = 1024	 [169] = 1024	 [170] = 1024	 [171] = 1024	 [172] = 1024	 [173] = 1024	 [174] = 1024	 [175] = 1024	 [176] = 1024	 [177] = 1024	 [178] = 1024	 [179] = 1024	 [180] = 1024	 [181] = 1024	 [182] = 1024	 [183] = 1024	 [184] = 1024	 [185] = 1024	 [186] = 1024	 [187] = 1024	 [188] = 1024	 [189] = 1024	 [190] = 1024	 [191] = 1024	 [192] = 1024	 [193] = 1024	 [194] = 1024	 [195] = 1024	 [196] = 1024	 [197] = 1024	 [198] = 1024	 [199] = 1024	 [200] = 1024	 [201] = 1024	 [202] = 1024	 [203] = 1024	 [204] = 1024	 [205] = 1024	 [206] = 1024	 [207] = 1024	 [208] = 1024	 [209] = 1024	 [210] = 1024	 [211] = 1024	 [212] = 1024	 [213] = 1024	 [214] = 1024	 [215] = 1024	 [216] = 1024	 [217] = 1024	 [218] = 1024	 [219] = 1024	 [220] = 1024	 [221] = 1024	 [222] = 1024	 [223] = 1024	 [224] = 1024	 [225] = 1024	 [226] = 1024	 [227] = 1024	 [228] = 1024	 [229] = 1024	 [230] = 1024	 [231] = 1024	 [232] = 1024	 [233] = 1024	 [234] = 1024	 [235] = 1024	 [236] = 1024	 [237] = 1024	 [238] = 1024	 [239] = 1024	 [240] = 1024	 [241] = 1024	 [242] = 1024	 [243] = 1024	 [244] = 1024	 [245] = 1024	 [246] = 1024	 [247] = 1024	 [248] = 1024	 [249] = 1024	 [250] = 1024	 [251] = 1024	 [252] = 1024	 [253] = 1024	 [254] = 1024	 [255] = 1024	 [256] = 1024	 [257] = 1024	 [258] = 1024	 [259] = 1024	 [260] = 1024	 [261] = 1024	 [262] = 1024	 [263] = 1024	 [264] = 1024	 [265] = 1024	 [266] = 1024	 [267] = 1024	 [268] = 1024	 [269] = 1024	 [270] = 1024	 [271] = 1024	 [272] = 1024	 [273] = 1024	 [274] = 1024	 [275] = 1024	 [276] = 1024	 [277] = 1024	 [278] = 1024	 [279] = 1024	 [280] = 1024	 [281] = 1024	 [282] = 1024	 [283] = 1024	 [284] = 1024	 [285] = 1024	 [286] = 1024	 [287] = 1024	 [288] = 1024	 [289] = 1024	 [290] = 1024	 [291] = 1024	 [292] = 1024	 [293] = 1024	 [294] = 1024	 [295] = 1024	 [296] = 1024	 [297] = 1024	 [298] = 1024	 [299] = 1024	 [300] = 1024	 [301] = 1024	 [302] = 1024	 [303] = 1024	 [304] = 1024	 [305] = 1024	 [306] = 1024	 [307] = 1024	 [308] = 1024	 [309] = 1024	 [310] = 1024	 [311] = 1024	 [312] = 1024	 [313] = 1024	 [314] = 1024	 [315] = 1024	 [316] = 1024	 [317] = 1024	 [318] = 1024	 [319] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: inf
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+------------+
|                   Event                  | Counter |   Core 0   |
+------------------------------------------+---------+------------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 9728230138 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 7789166037 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 9715611552 |
|              PWR_PKG_ENERGY              |   PWR0  |    30.6124 |
|              PWR_DRAM_ENERGY             |   PWR3  |    15.4362 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |          0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |  668997688 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      81920 |
|                DRAM_READS                | MBOX0C1 |  373963234 |
|                DRAM_WRITES               | MBOX0C2 |   44252084 |
+------------------------------------------+---------+------------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    6.0569 |
|        Runtime unhalted [s]       |    3.3808 |
|            Clock [MHz]            | 1847.1177 |
|                CPI                |    0.8007 |
|             Energy [J]            |   30.6124 |
|             Power [W]             |    5.0541 |
|          Energy DRAM [J]          |   15.4362 |
|           Power DRAM [W]          |    2.5485 |
|            DP [MFLOP/s]           |  110.5057 |
|          AVX DP [MFLOP/s]         |    0.0541 |
|          Packed [MUOPS/s]         |    0.0135 |
|          Scalar [MUOPS/s]         |  110.4516 |
|  Memory load bandwidth [MBytes/s] | 3951.4471 |
|  Memory load data volume [GBytes] |   23.9336 |
| Memory evict bandwidth [MBytes/s] |  467.5855 |
| Memory evict data volume [GBytes] |    2.8321 |
|    Memory bandwidth [MBytes/s]    | 4419.0326 |
|    Memory data volume [GBytes]    |   26.7658 |
|       Operational intensity       |    0.0250 |
+-----------------------------------+-----------+

Iteration with GEMM: 4
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 320 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	 [40] = 1024	 [41] = 1024	 [42] = 1024	 [43] = 1024	 [44] = 1024	 [45] = 1024	 [46] = 1024	 [47] = 1024	 [48] = 1024	 [49] = 1024	 [50] = 1024	 [51] = 1024	 [52] = 1024	 [53] = 1024	 [54] = 1024	 [55] = 1024	 [56] = 1024	 [57] = 1024	 [58] = 1024	 [59] = 1024	 [60] = 1024	 [61] = 1024	 [62] = 1024	 [63] = 1024	 [64] = 1024	 [65] = 1024	 [66] = 1024	 [67] = 1024	 [68] = 1024	 [69] = 1024	 [70] = 1024	 [71] = 1024	 [72] = 1024	 [73] = 1024	 [74] = 1024	 [75] = 1024	 [76] = 1024	 [77] = 1024	 [78] = 1024	 [79] = 1024	 [80] = 1024	 [81] = 1024	 [82] = 1024	 [83] = 1024	 [84] = 1024	 [85] = 1024	 [86] = 1024	 [87] = 1024	 [88] = 1024	 [89] = 1024	 [90] = 1024	 [91] = 1024	 [92] = 1024	 [93] = 1024	 [94] = 1024	 [95] = 1024	 [96] = 1024	 [97] = 1024	 [98] = 1024	 [99] = 1024	 [100] = 1024	 [101] = 1024	 [102] = 1024	 [103] = 1024	 [104] = 1024	 [105] = 1024	 [106] = 1024	 [107] = 1024	 [108] = 1024	 [109] = 1024	 [110] = 1024	 [111] = 1024	 [112] = 1024	 [113] = 1024	 [114] = 1024	 [115] = 1024	 [116] = 1024	 [117] = 1024	 [118] = 1024	 [119] = 1024	 [120] = 1024	 [121] = 1024	 [122] = 1024	 [123] = 1024	 [124] = 1024	 [125] = 1024	 [126] = 1024	 [127] = 1024	 [128] = 1024	 [129] = 1024	 [130] = 1024	 [131] = 1024	 [132] = 1024	 [133] = 1024	 [134] = 1024	 [135] = 1024	 [136] = 1024	 [137] = 1024	 [138] = 1024	 [139] = 1024	 [140] = 1024	 [141] = 1024	 [142] = 1024	 [143] = 1024	 [144] = 1024	 [145] = 1024	 [146] = 1024	 [147] = 1024	 [148] = 1024	 [149] = 1024	 [150] = 1024	 [151] = 1024	 [152] = 1024	 [153] = 1024	 [154] = 1024	 [155] = 1024	 [156] = 1024	 [157] = 1024	 [158] = 1024	 [159] = 1024	 [160] = 1024	 [161] = 1024	 [162] = 1024	 [163] = 1024	 [164] = 1024	 [165] = 1024	 [166] = 1024	 [167] = 1024	 [168] = 1024	 [169] = 1024	 [170] = 1024	 [171] = 1024	 [172] = 1024	 [173] = 1024	 [174] = 1024	 [175] = 1024	 [176] = 1024	 [177] = 1024	 [178] = 1024	 [179] = 1024	 [180] = 1024	 [181] = 1024	 [182] = 1024	 [183] = 1024	 [184] = 1024	 [185] = 1024	 [186] = 1024	 [187] = 1024	 [188] = 1024	 [189] = 1024	 [190] = 1024	 [191] = 1024	 [192] = 1024	 [193] = 1024	 [194] = 1024	 [195] = 1024	 [196] = 1024	 [197] = 1024	 [198] = 1024	 [199] = 1024	 [200] = 1024	 [201] = 1024	 [202] = 1024	 [203] = 1024	 [204] = 1024	 [205] = 1024	 [206] = 1024	 [207] = 1024	 [208] = 1024	 [209] = 1024	 [210] = 1024	 [211] = 1024	 [212] = 1024	 [213] = 1024	 [214] = 1024	 [215] = 1024	 [216] = 1024	 [217] = 1024	 [218] = 1024	 [219] = 1024	 [220] = 1024	 [221] = 1024	 [222] = 1024	 [223] = 1024	 [224] = 1024	 [225] = 1024	 [226] = 1024	 [227] = 1024	 [228] = 1024	 [229] = 1024	 [230] = 1024	 [231] = 1024	 [232] = 1024	 [233] = 1024	 [234] = 1024	 [235] = 1024	 [236] = 1024	 [237] = 1024	 [238] = 1024	 [239] = 1024	 [240] = 1024	 [241] = 1024	 [242] = 1024	 [243] = 1024	 [244] = 1024	 [245] = 1024	 [246] = 1024	 [247] = 1024	 [248] = 1024	 [249] = 1024	 [250] = 1024	 [251] = 1024	 [252] = 1024	 [253] = 1024	 [254] = 1024	 [255] = 1024	 [256] = 1024	 [257] = 1024	 [258] = 1024	 [259] = 1024	 [260] = 1024	 [261] = 1024	 [262] = 1024	 [263] = 1024	 [264] = 1024	 [265] = 1024	 [266] = 1024	 [267] = 1024	 [268] = 1024	 [269] = 1024	 [270] = 1024	 [271] = 1024	 [272] = 1024	 [273] = 1024	 [274] = 1024	 [275] = 1024	 [276] = 1024	 [277] = 1024	 [278] = 1024	 [279] = 1024	 [280] = 1024	 [281] = 1024	 [282] = 1024	 [283] = 1024	 [284] = 1024	 [285] = 1024	 [286] = 1024	 [287] = 1024	 [288] = 1024	 [289] = 1024	 [290] = 1024	 [291] = 1024	 [292] = 1024	 [293] = 1024	 [294] = 1024	 [295] = 1024	 [296] = 1024	 [297] = 1024	 [298] = 1024	 [299] = 1024	 [300] = 1024	 [301] = 1024	 [302] = 1024	 [303] = 1024	 [304] = 1024	 [305] = 1024	 [306] = 1024	 [307] = 1024	 [308] = 1024	 [309] = 1024	 [310] = 1024	 [311] = 1024	 [312] = 1024	 [313] = 1024	 [314] = 1024	 [315] = 1024	 [316] = 1024	 [317] = 1024	 [318] = 1024	 [319] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: inf
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+------------+
|                   Event                  | Counter |   Core 0   |
+------------------------------------------+---------+------------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 9728230085 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 7771851142 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 9773641728 |
|              PWR_PKG_ENERGY              |   PWR0  |    30.5687 |
|              PWR_DRAM_ENERGY             |   PWR3  |    15.4786 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |          0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |  668997688 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      81920 |
|                DRAM_READS                | MBOX0C1 |  374580283 |
|                DRAM_WRITES               | MBOX0C2 |   44225585 |
+------------------------------------------+---------+------------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    6.0786 |
|        Runtime unhalted [s]       |    3.3733 |
|            Clock [MHz]            | 1832.0642 |
|                CPI                |    0.7989 |
|             Energy [J]            |   30.5687 |
|             Power [W]             |    5.0289 |
|          Energy DRAM [J]          |   15.4786 |
|           Power DRAM [W]          |    2.5464 |
|            DP [MFLOP/s]           |  110.1114 |
|          AVX DP [MFLOP/s]         |    0.0539 |
|          Packed [MUOPS/s]         |    0.0135 |
|          Scalar [MUOPS/s]         |  110.0575 |
|  Memory load bandwidth [MBytes/s] | 3943.8453 |
|  Memory load data volume [GBytes] |   23.9731 |
| Memory evict bandwidth [MBytes/s] |  465.6381 |
| Memory evict data volume [GBytes] |    2.8304 |
|    Memory bandwidth [MBytes/s]    | 4409.4835 |
|    Memory data volume [GBytes]    |   26.8036 |
|       Operational intensity       |    0.0250 |
+-----------------------------------+-----------+

Iteration with GEMM: 5
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 320 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	 [40] = 1024	 [41] = 1024	 [42] = 1024	 [43] = 1024	 [44] = 1024	 [45] = 1024	 [46] = 1024	 [47] = 1024	 [48] = 1024	 [49] = 1024	 [50] = 1024	 [51] = 1024	 [52] = 1024	 [53] = 1024	 [54] = 1024	 [55] = 1024	 [56] = 1024	 [57] = 1024	 [58] = 1024	 [59] = 1024	 [60] = 1024	 [61] = 1024	 [62] = 1024	 [63] = 1024	 [64] = 1024	 [65] = 1024	 [66] = 1024	 [67] = 1024	 [68] = 1024	 [69] = 1024	 [70] = 1024	 [71] = 1024	 [72] = 1024	 [73] = 1024	 [74] = 1024	 [75] = 1024	 [76] = 1024	 [77] = 1024	 [78] = 1024	 [79] = 1024	 [80] = 1024	 [81] = 1024	 [82] = 1024	 [83] = 1024	 [84] = 1024	 [85] = 1024	 [86] = 1024	 [87] = 1024	 [88] = 1024	 [89] = 1024	 [90] = 1024	 [91] = 1024	 [92] = 1024	 [93] = 1024	 [94] = 1024	 [95] = 1024	 [96] = 1024	 [97] = 1024	 [98] = 1024	 [99] = 1024	 [100] = 1024	 [101] = 1024	 [102] = 1024	 [103] = 1024	 [104] = 1024	 [105] = 1024	 [106] = 1024	 [107] = 1024	 [108] = 1024	 [109] = 1024	 [110] = 1024	 [111] = 1024	 [112] = 1024	 [113] = 1024	 [114] = 1024	 [115] = 1024	 [116] = 1024	 [117] = 1024	 [118] = 1024	 [119] = 1024	 [120] = 1024	 [121] = 1024	 [122] = 1024	 [123] = 1024	 [124] = 1024	 [125] = 1024	 [126] = 1024	 [127] = 1024	 [128] = 1024	 [129] = 1024	 [130] = 1024	 [131] = 1024	 [132] = 1024	 [133] = 1024	 [134] = 1024	 [135] = 1024	 [136] = 1024	 [137] = 1024	 [138] = 1024	 [139] = 1024	 [140] = 1024	 [141] = 1024	 [142] = 1024	 [143] = 1024	 [144] = 1024	 [145] = 1024	 [146] = 1024	 [147] = 1024	 [148] = 1024	 [149] = 1024	 [150] = 1024	 [151] = 1024	 [152] = 1024	 [153] = 1024	 [154] = 1024	 [155] = 1024	 [156] = 1024	 [157] = 1024	 [158] = 1024	 [159] = 1024	 [160] = 1024	 [161] = 1024	 [162] = 1024	 [163] = 1024	 [164] = 1024	 [165] = 1024	 [166] = 1024	 [167] = 1024	 [168] = 1024	 [169] = 1024	 [170] = 1024	 [171] = 1024	 [172] = 1024	 [173] = 1024	 [174] = 1024	 [175] = 1024	 [176] = 1024	 [177] = 1024	 [178] = 1024	 [179] = 1024	 [180] = 1024	 [181] = 1024	 [182] = 1024	 [183] = 1024	 [184] = 1024	 [185] = 1024	 [186] = 1024	 [187] = 1024	 [188] = 1024	 [189] = 1024	 [190] = 1024	 [191] = 1024	 [192] = 1024	 [193] = 1024	 [194] = 1024	 [195] = 1024	 [196] = 1024	 [197] = 1024	 [198] = 1024	 [199] = 1024	 [200] = 1024	 [201] = 1024	 [202] = 1024	 [203] = 1024	 [204] = 1024	 [205] = 1024	 [206] = 1024	 [207] = 1024	 [208] = 1024	 [209] = 1024	 [210] = 1024	 [211] = 1024	 [212] = 1024	 [213] = 1024	 [214] = 1024	 [215] = 1024	 [216] = 1024	 [217] = 1024	 [218] = 1024	 [219] = 1024	 [220] = 1024	 [221] = 1024	 [222] = 1024	 [223] = 1024	 [224] = 1024	 [225] = 1024	 [226] = 1024	 [227] = 1024	 [228] = 1024	 [229] = 1024	 [230] = 1024	 [231] = 1024	 [232] = 1024	 [233] = 1024	 [234] = 1024	 [235] = 1024	 [236] = 1024	 [237] = 1024	 [238] = 1024	 [239] = 1024	 [240] = 1024	 [241] = 1024	 [242] = 1024	 [243] = 1024	 [244] = 1024	 [245] = 1024	 [246] = 1024	 [247] = 1024	 [248] = 1024	 [249] = 1024	 [250] = 1024	 [251] = 1024	 [252] = 1024	 [253] = 1024	 [254] = 1024	 [255] = 1024	 [256] = 1024	 [257] = 1024	 [258] = 1024	 [259] = 1024	 [260] = 1024	 [261] = 1024	 [262] = 1024	 [263] = 1024	 [264] = 1024	 [265] = 1024	 [266] = 1024	 [267] = 1024	 [268] = 1024	 [269] = 1024	 [270] = 1024	 [271] = 1024	 [272] = 1024	 [273] = 1024	 [274] = 1024	 [275] = 1024	 [276] = 1024	 [277] = 1024	 [278] = 1024	 [279] = 1024	 [280] = 1024	 [281] = 1024	 [282] = 1024	 [283] = 1024	 [284] = 1024	 [285] = 1024	 [286] = 1024	 [287] = 1024	 [288] = 1024	 [289] = 1024	 [290] = 1024	 [291] = 1024	 [292] = 1024	 [293] = 1024	 [294] = 1024	 [295] = 1024	 [296] = 1024	 [297] = 1024	 [298] = 1024	 [299] = 1024	 [300] = 1024	 [301] = 1024	 [302] = 1024	 [303] = 1024	 [304] = 1024	 [305] = 1024	 [306] = 1024	 [307] = 1024	 [308] = 1024	 [309] = 1024	 [310] = 1024	 [311] = 1024	 [312] = 1024	 [313] = 1024	 [314] = 1024	 [315] = 1024	 [316] = 1024	 [317] = 1024	 [318] = 1024	 [319] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: inf
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+------------+
|                   Event                  | Counter |   Core 0   |
+------------------------------------------+---------+------------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 9728230051 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 7751467516 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 9751464288 |
|              PWR_PKG_ENERGY              |   PWR0  |    30.5781 |
|              PWR_DRAM_ENERGY             |   PWR3  |    15.4766 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |          0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |  668997687 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |      81920 |
|                DRAM_READS                | MBOX0C1 |  375212165 |
|                DRAM_WRITES               | MBOX0C2 |   44263905 |
+------------------------------------------+---------+------------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    6.0702 |
|        Runtime unhalted [s]       |    3.3644 |
|            Clock [MHz]            | 1831.4176 |
|                CPI                |    0.7968 |
|             Energy [J]            |   30.5781 |
|             Power [W]             |    5.0374 |
|          Energy DRAM [J]          |   15.4766 |
|           Power DRAM [W]          |    2.5496 |
|            DP [MFLOP/s]           |  110.2636 |
|          AVX DP [MFLOP/s]         |    0.0540 |
|          Packed [MUOPS/s]         |    0.0135 |
|          Scalar [MUOPS/s]         |  110.2096 |
|  Memory load bandwidth [MBytes/s] | 3955.9574 |
|  Memory load data volume [GBytes] |   24.0136 |
| Memory evict bandwidth [MBytes/s] |  466.6856 |
| Memory evict data volume [GBytes] |    2.8329 |
|    Memory bandwidth [MBytes/s]    | 4422.6431 |
|    Memory data volume [GBytes]    |   26.8465 |
|       Operational intensity       |    0.0249 |
+-----------------------------------+-----------+

Iteration without GEMM: 1
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 10 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 1.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+----------+
|                   Event                  | Counter |  Core 0  |
+------------------------------------------+---------+----------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  9933369 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 18030569 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 21275040 |
|              PWR_PKG_ENERGY              |   PWR0  |   0.3326 |
|              PWR_DRAM_ENERGY             |   PWR3  |   0.1218 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |        0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |       56 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |     2560 |
|                DRAM_READS                | MBOX0C1 |   609824 |
|                DRAM_WRITES               | MBOX0C2 |  1239818 |
+------------------------------------------+---------+----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.0704 |
|        Runtime unhalted [s]       |    0.0078 |
|            Clock [MHz]            | 1952.5852 |
|                CPI                |    1.8152 |
|             Energy [J]            |    0.3326 |
|             Power [W]             |    4.7227 |
|          Energy DRAM [J]          |    0.1218 |
|           Power DRAM [W]          |    1.7296 |
|            DP [MFLOP/s]           |    0.1462 |
|          AVX DP [MFLOP/s]         |    0.1454 |
|          Packed [MUOPS/s]         |    0.0363 |
|          Scalar [MUOPS/s]         |    0.0008 |
|  Memory load bandwidth [MBytes/s] |  554.1096 |
|  Memory load data volume [GBytes] |    0.0390 |
| Memory evict bandwidth [MBytes/s] | 1126.5464 |
| Memory evict data volume [GBytes] |    0.0793 |
|    Memory bandwidth [MBytes/s]    | 1680.6560 |
|    Memory data volume [GBytes]    |    0.1184 |
|       Operational intensity       |    0.0001 |
+-----------------------------------+-----------+

Iteration without GEMM: 2
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 10 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 1.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+----------+
|                   Event                  | Counter |  Core 0  |
+------------------------------------------+---------+----------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  9933396 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 18201381 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 21392448 |
|              PWR_PKG_ENERGY              |   PWR0  |   0.3338 |
|              PWR_DRAM_ENERGY             |   PWR3  |   0.1224 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |        0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |       56 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |     2560 |
|                DRAM_READS                | MBOX0C1 |   612655 |
|                DRAM_WRITES               | MBOX0C2 |  1241565 |
+------------------------------------------+---------+----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.0703 |
|        Runtime unhalted [s]       |    0.0079 |
|            Clock [MHz]            | 1960.2449 |
|                CPI                |    1.8323 |
|             Energy [J]            |    0.3338 |
|             Power [W]             |    4.7457 |
|          Energy DRAM [J]          |    0.1224 |
|           Power DRAM [W]          |    1.7398 |
|            DP [MFLOP/s]           |    0.1464 |
|          AVX DP [MFLOP/s]         |    0.1456 |
|          Packed [MUOPS/s]         |    0.0364 |
|          Scalar [MUOPS/s]         |    0.0008 |
|  Memory load bandwidth [MBytes/s] |  557.4534 |
|  Memory load data volume [GBytes] |    0.0392 |
| Memory evict bandwidth [MBytes/s] | 1129.6973 |
| Memory evict data volume [GBytes] |    0.0795 |
|    Memory bandwidth [MBytes/s]    | 1687.1507 |
|    Memory data volume [GBytes]    |    0.1187 |
|       Operational intensity       |    0.0001 |
+-----------------------------------+-----------+

Iteration without GEMM: 3
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 10 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 1.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+----------+
|                   Event                  | Counter |  Core 0  |
+------------------------------------------+---------+----------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  9933387 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 18219807 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 21708672 |
|              PWR_PKG_ENERGY              |   PWR0  |   0.3336 |
|              PWR_DRAM_ENERGY             |   PWR3  |   0.1232 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |        0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |       55 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |     2560 |
|                DRAM_READS                | MBOX0C1 |   604191 |
|                DRAM_WRITES               | MBOX0C2 |  1238423 |
+------------------------------------------+---------+----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.0712 |
|        Runtime unhalted [s]       |    0.0079 |
|            Clock [MHz]            | 1933.6779 |
|                CPI                |    1.8342 |
|             Energy [J]            |    0.3336 |
|             Power [W]             |    4.6878 |
|          Energy DRAM [J]          |    0.1232 |
|           Power DRAM [W]          |    1.7315 |
|            DP [MFLOP/s]           |    0.1447 |
|          AVX DP [MFLOP/s]         |    0.1439 |
|          Packed [MUOPS/s]         |    0.0360 |
|          Scalar [MUOPS/s]         |    0.0008 |
|  Memory load bandwidth [MBytes/s] |  543.3372 |
|  Memory load data volume [GBytes] |    0.0387 |
| Memory evict bandwidth [MBytes/s] | 1113.6897 |
| Memory evict data volume [GBytes] |    0.0793 |
|    Memory bandwidth [MBytes/s]    | 1657.0268 |
|    Memory data volume [GBytes]    |    0.1179 |
|       Operational intensity       |    0.0001 |
+-----------------------------------+-----------+

Iteration without GEMM: 4
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 10 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 1.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+----------+
|                   Event                  | Counter |  Core 0  |
+------------------------------------------+---------+----------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  9933376 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 18142535 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 21126720 |
|              PWR_PKG_ENERGY              |   PWR0  |   0.3360 |
|              PWR_DRAM_ENERGY             |   PWR3  |   0.1209 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |        0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |       54 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |     2560 |
|                DRAM_READS                | MBOX0C1 |   627769 |
|                DRAM_WRITES               | MBOX0C2 |  1241768 |
+------------------------------------------+---------+----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.0697 |
|        Runtime unhalted [s]       |    0.0079 |
|            Clock [MHz]            | 1978.5110 |
|                CPI                |    1.8264 |
|             Energy [J]            |    0.3360 |
|             Power [W]             |    4.8211 |
|          Energy DRAM [J]          |    0.1209 |
|           Power DRAM [W]          |    1.7349 |
|            DP [MFLOP/s]           |    0.1477 |
|          AVX DP [MFLOP/s]         |    0.1469 |
|          Packed [MUOPS/s]         |    0.0367 |
|          Scalar [MUOPS/s]         |    0.0008 |
|  Memory load bandwidth [MBytes/s] |  576.4882 |
|  Memory load data volume [GBytes] |    0.0402 |
| Memory evict bandwidth [MBytes/s] | 1140.3313 |
| Memory evict data volume [GBytes] |    0.0795 |
|    Memory bandwidth [MBytes/s]    | 1716.8196 |
|    Memory data volume [GBytes]    |    0.1197 |
|       Operational intensity       |    0.0001 |
+-----------------------------------+-----------+

Iteration without GEMM: 5
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 10 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 1.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+----------+
|                   Event                  | Counter |  Core 0  |
+------------------------------------------+---------+----------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  9933404 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 18190903 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 20513760 |
|              PWR_PKG_ENERGY              |   PWR0  |   0.3293 |
|              PWR_DRAM_ENERGY             |   PWR3  |   0.1176 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |        0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |       56 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |     2560 |
|                DRAM_READS                | MBOX0C1 |   595487 |
|                DRAM_WRITES               | MBOX0C2 |  1239700 |
+------------------------------------------+---------+----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.0677 |
|        Runtime unhalted [s]       |    0.0079 |
|            Clock [MHz]            | 2043.0220 |
|                CPI                |    1.8313 |
|             Energy [J]            |    0.3293 |
|             Power [W]             |    4.8639 |
|          Energy DRAM [J]          |    0.1176 |
|           Power DRAM [W]          |    1.7361 |
|            DP [MFLOP/s]           |    0.1521 |
|          AVX DP [MFLOP/s]         |    0.1512 |
|          Packed [MUOPS/s]         |    0.0378 |
|          Scalar [MUOPS/s]         |    0.0008 |
|  Memory load bandwidth [MBytes/s] |  562.8397 |
|  Memory load data volume [GBytes] |    0.0381 |
| Memory evict bandwidth [MBytes/s] | 1171.7339 |
| Memory evict data volume [GBytes] |    0.0793 |
|    Memory bandwidth [MBytes/s]    | 1734.5736 |
|    Memory data volume [GBytes]    |    0.1175 |
|       Operational intensity       |    0.0001 |
+-----------------------------------+-----------+

Iteration without GEMM: 1
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 20 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 1.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+----------+
|                   Event                  | Counter |  Core 0  |
+------------------------------------------+---------+----------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 20652474 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 37445370 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 41013504 |
|              PWR_PKG_ENERGY              |   PWR0  |   0.6892 |
|              PWR_DRAM_ENERGY             |   PWR3  |   0.2384 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |        0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |       55 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |     5120 |
|                DRAM_READS                | MBOX0C1 |  1148565 |
|                DRAM_WRITES               | MBOX0C2 |  2614537 |
+------------------------------------------+---------+----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.1366 |
|        Runtime unhalted [s]       |    0.0163 |
|            Clock [MHz]            | 2103.4855 |
|                CPI                |    1.8131 |
|             Energy [J]            |    0.6892 |
|             Power [W]             |    5.0467 |
|          Energy DRAM [J]          |    0.2384 |
|           Power DRAM [W]          |    1.7457 |
|            DP [MFLOP/s]           |    0.1504 |
|          AVX DP [MFLOP/s]         |    0.1500 |
|          Packed [MUOPS/s]         |    0.0375 |
|          Scalar [MUOPS/s]         |    0.0004 |
|  Memory load bandwidth [MBytes/s] |  538.2558 |
|  Memory load data volume [GBytes] |    0.0735 |
| Memory evict bandwidth [MBytes/s] | 1225.2590 |
| Memory evict data volume [GBytes] |    0.1673 |
|    Memory bandwidth [MBytes/s]    | 1763.5147 |
|    Memory data volume [GBytes]    |    0.2408 |
|       Operational intensity       |    0.0001 |
+-----------------------------------+-----------+

Iteration without GEMM: 2
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 20 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 1.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+----------+
|                   Event                  | Counter |  Core 0  |
+------------------------------------------+---------+----------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 20652465 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 37691039 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 41332224 |
|              PWR_PKG_ENERGY              |   PWR0  |   0.6957 |
|              PWR_DRAM_ENERGY             |   PWR3  |   0.2406 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |        0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |       55 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |     5120 |
|                DRAM_READS                | MBOX0C1 |  1177222 |
|                DRAM_WRITES               | MBOX0C2 |  2619772 |
+------------------------------------------+---------+----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.1369 |
|        Runtime unhalted [s]       |    0.0164 |
|            Clock [MHz]            | 2100.9533 |
|                CPI                |    1.8250 |
|             Energy [J]            |    0.6957 |
|             Power [W]             |    5.0806 |
|          Energy DRAM [J]          |    0.2406 |
|           Power DRAM [W]          |    1.7570 |
|            DP [MFLOP/s]           |    0.1500 |
|          AVX DP [MFLOP/s]         |    0.1496 |
|          Packed [MUOPS/s]         |    0.0374 |
|          Scalar [MUOPS/s]         |    0.0004 |
|  Memory load bandwidth [MBytes/s] |  550.1841 |
|  Memory load data volume [GBytes] |    0.0753 |
| Memory evict bandwidth [MBytes/s] | 1224.3714 |
| Memory evict data volume [GBytes] |    0.1677 |
|    Memory bandwidth [MBytes/s]    | 1774.5556 |
|    Memory data volume [GBytes]    |    0.2430 |
|       Operational intensity       |    0.0001 |
+-----------------------------------+-----------+

Iteration without GEMM: 3
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 20 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 1.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+----------+
|                   Event                  | Counter |  Core 0  |
+------------------------------------------+---------+----------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 20652475 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 37333358 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 40589280 |
|              PWR_PKG_ENERGY              |   PWR0  |   0.6861 |
|              PWR_DRAM_ENERGY             |   PWR3  |   0.2367 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |        0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |       55 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |     5120 |
|                DRAM_READS                | MBOX0C1 |  1124137 |
|                DRAM_WRITES               | MBOX0C2 |  2616806 |
+------------------------------------------+---------+----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.1357 |
|        Runtime unhalted [s]       |    0.0162 |
|            Clock [MHz]            | 2119.1326 |
|                CPI                |    1.8077 |
|             Energy [J]            |    0.6861 |
|             Power [W]             |    5.0567 |
|          Energy DRAM [J]          |    0.2367 |
|           Power DRAM [W]          |    1.7445 |
|            DP [MFLOP/s]           |    0.1513 |
|          AVX DP [MFLOP/s]         |    0.1509 |
|          Packed [MUOPS/s]         |    0.0377 |
|          Scalar [MUOPS/s]         |    0.0004 |
|  Memory load bandwidth [MBytes/s] |  530.2484 |
|  Memory load data volume [GBytes] |    0.0719 |
| Memory evict bandwidth [MBytes/s] | 1234.3310 |
| Memory evict data volume [GBytes] |    0.1675 |
|    Memory bandwidth [MBytes/s]    | 1764.5794 |
|    Memory data volume [GBytes]    |    0.2394 |
|       Operational intensity       |    0.0001 |
+-----------------------------------+-----------+

Iteration without GEMM: 4
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 20 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 1.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+----------+
|                   Event                  | Counter |  Core 0  |
+------------------------------------------+---------+----------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 20652714 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 37532592 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 40819872 |
|              PWR_PKG_ENERGY              |   PWR0  |   0.6870 |
|              PWR_DRAM_ENERGY             |   PWR3  |   0.2373 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |        0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |       56 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |     5120 |
|                DRAM_READS                | MBOX0C1 |  1157578 |
|                DRAM_WRITES               | MBOX0C2 |  2620652 |
+------------------------------------------+---------+----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.1360 |
|        Runtime unhalted [s]       |    0.0163 |
|            Clock [MHz]            | 2118.4092 |
|                CPI                |    1.8173 |
|             Energy [J]            |    0.6870 |
|             Power [W]             |    5.0509 |
|          Energy DRAM [J]          |    0.2373 |
|           Power DRAM [W]          |    1.7446 |
|            DP [MFLOP/s]           |    0.1510 |
|          AVX DP [MFLOP/s]         |    0.1506 |
|          Packed [MUOPS/s]         |    0.0376 |
|          Scalar [MUOPS/s]         |    0.0004 |
|  Memory load bandwidth [MBytes/s] |  544.6684 |
|  Memory load data volume [GBytes] |    0.0741 |
| Memory evict bandwidth [MBytes/s] | 1233.0801 |
| Memory evict data volume [GBytes] |    0.1677 |
|    Memory bandwidth [MBytes/s]    | 1777.7485 |
|    Memory data volume [GBytes]    |    0.2418 |
|       Operational intensity       |    0.0001 |
+-----------------------------------+-----------+

Iteration without GEMM: 5
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 20 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 1.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+----------+
|                   Event                  | Counter |  Core 0  |
+------------------------------------------+---------+----------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 20652477 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 37912326 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 41254656 |
|              PWR_PKG_ENERGY              |   PWR0  |   0.6915 |
|              PWR_DRAM_ENERGY             |   PWR3  |   0.2375 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |        0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |       56 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |     5120 |
|                DRAM_READS                | MBOX0C1 |  1170919 |
|                DRAM_WRITES               | MBOX0C2 |  2620434 |
+------------------------------------------+---------+----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.1359 |
|        Runtime unhalted [s]       |    0.0165 |
|            Clock [MHz]            | 2117.2873 |
|                CPI                |    1.8357 |
|             Energy [J]            |    0.6915 |
|             Power [W]             |    5.0880 |
|          Energy DRAM [J]          |    0.2375 |
|           Power DRAM [W]          |    1.7478 |
|            DP [MFLOP/s]           |    0.1511 |
|          AVX DP [MFLOP/s]         |    0.1507 |
|          Packed [MUOPS/s]         |    0.0377 |
|          Scalar [MUOPS/s]         |    0.0004 |
|  Memory load bandwidth [MBytes/s] |  551.3760 |
|  Memory load data volume [GBytes] |    0.0749 |
| Memory evict bandwidth [MBytes/s] | 1233.9406 |
| Memory evict data volume [GBytes] |    0.1677 |
|    Memory bandwidth [MBytes/s]    | 1785.3166 |
|    Memory data volume [GBytes]    |    0.2426 |
|       Operational intensity       |    0.0001 |
+-----------------------------------+-----------+

Iteration without GEMM: 1
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 40 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 1.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+----------+
|                   Event                  | Counter |  Core 0  |
+------------------------------------------+---------+----------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 42090834 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 76422052 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 79795488 |
|              PWR_PKG_ENERGY              |   PWR0  |   1.4097 |
|              PWR_DRAM_ENERGY             |   PWR3  |   0.4691 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |        0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |       55 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |    10240 |
|                DRAM_READS                | MBOX0C1 |  2241338 |
|                DRAM_WRITES               | MBOX0C2 |  5388027 |
+------------------------------------------+---------+----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.2666 |
|        Runtime unhalted [s]       |    0.0332 |
|            Clock [MHz]            | 2206.4829 |
|                CPI                |    1.8156 |
|             Energy [J]            |    1.4097 |
|             Power [W]             |    5.2872 |
|          Energy DRAM [J]          |    0.4691 |
|           Power DRAM [W]          |    1.7594 |
|            DP [MFLOP/s]           |    0.1538 |
|          AVX DP [MFLOP/s]         |    0.1536 |
|          Packed [MUOPS/s]         |    0.0384 |
|          Scalar [MUOPS/s]         |    0.0002 |
|  Memory load bandwidth [MBytes/s] |  537.9956 |
|  Memory load data volume [GBytes] |    0.1434 |
| Memory evict bandwidth [MBytes/s] | 1293.3056 |
| Memory evict data volume [GBytes] |    0.3448 |
|    Memory bandwidth [MBytes/s]    | 1831.3012 |
|    Memory data volume [GBytes]    |    0.4883 |
|       Operational intensity       |    0.0001 |
+-----------------------------------+-----------+

Iteration without GEMM: 2
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 40 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 1.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+----------+
|                   Event                  | Counter |  Core 0  |
+------------------------------------------+---------+----------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 42090857 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 76544740 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 79917984 |
|              PWR_PKG_ENERGY              |   PWR0  |   1.4095 |
|              PWR_DRAM_ENERGY             |   PWR3  |   0.4705 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |        0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |       56 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |    10240 |
|                DRAM_READS                | MBOX0C1 |  2264034 |
|                DRAM_WRITES               | MBOX0C2 |  5381627 |
+------------------------------------------+---------+----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.2676 |
|        Runtime unhalted [s]       |    0.0332 |
|            Clock [MHz]            | 2206.6931 |
|                CPI                |    1.8186 |
|             Energy [J]            |    1.4095 |
|             Power [W]             |    5.2667 |
|          Energy DRAM [J]          |    0.4705 |
|           Power DRAM [W]          |    1.7581 |
|            DP [MFLOP/s]           |    0.1533 |
|          AVX DP [MFLOP/s]         |    0.1531 |
|          Packed [MUOPS/s]         |    0.0383 |
|          Scalar [MUOPS/s]         |    0.0002 |
|  Memory load bandwidth [MBytes/s] |  541.4248 |
|  Memory load data volume [GBytes] |    0.1449 |
| Memory evict bandwidth [MBytes/s] | 1286.9712 |
| Memory evict data volume [GBytes] |    0.3444 |
|    Memory bandwidth [MBytes/s]    | 1828.3960 |
|    Memory data volume [GBytes]    |    0.4893 |
|       Operational intensity       |    0.0001 |
+-----------------------------------+-----------+

Iteration without GEMM: 3
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 40 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 1.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+----------+
|                   Event                  | Counter |  Core 0  |
+------------------------------------------+---------+----------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 42090837 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 76272137 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 79517952 |
|              PWR_PKG_ENERGY              |   PWR0  |   1.4049 |
|              PWR_DRAM_ENERGY             |   PWR3  |   0.4679 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |        0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |       55 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |    10240 |
|                DRAM_READS                | MBOX0C1 |  2198751 |
|                DRAM_WRITES               | MBOX0C2 |  5374523 |
+------------------------------------------+---------+----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.2660 |
|        Runtime unhalted [s]       |    0.0331 |
|            Clock [MHz]            | 2209.8868 |
|                CPI                |    1.8121 |
|             Energy [J]            |    1.4049 |
|             Power [W]             |    5.2814 |
|          Energy DRAM [J]          |    0.4679 |
|           Power DRAM [W]          |    1.7590 |
|            DP [MFLOP/s]           |    0.1542 |
|          AVX DP [MFLOP/s]         |    0.1540 |
|          Packed [MUOPS/s]         |    0.0385 |
|          Scalar [MUOPS/s]         |    0.0002 |
|  Memory load bandwidth [MBytes/s] |  529.0065 |
|  Memory load data volume [GBytes] |    0.1407 |
| Memory evict bandwidth [MBytes/s] | 1293.0784 |
| Memory evict data volume [GBytes] |    0.3440 |
|    Memory bandwidth [MBytes/s]    | 1822.0849 |
|    Memory data volume [GBytes]    |    0.4847 |
|       Operational intensity       |    0.0001 |
+-----------------------------------+-----------+

Iteration without GEMM: 4
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 40 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 1.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+----------+
|                   Event                  | Counter |  Core 0  |
+------------------------------------------+---------+----------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 42090813 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 78317454 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 81515904 |
|              PWR_PKG_ENERGY              |   PWR0  |   1.4049 |
|              PWR_DRAM_ENERGY             |   PWR3  |   0.4671 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |        0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |       56 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |    10240 |
|                DRAM_READS                | MBOX0C1 |  2177712 |
|                DRAM_WRITES               | MBOX0C2 |  5378010 |
+------------------------------------------+---------+----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.2665 |
|        Runtime unhalted [s]       |    0.0340 |
|            Clock [MHz]            | 2213.5483 |
|                CPI                |    1.8607 |
|             Energy [J]            |    1.4049 |
|             Power [W]             |    5.2709 |
|          Energy DRAM [J]          |    0.4671 |
|           Power DRAM [W]          |    1.7525 |
|            DP [MFLOP/s]           |    0.1539 |
|          AVX DP [MFLOP/s]         |    0.1537 |
|          Packed [MUOPS/s]         |    0.0384 |
|          Scalar [MUOPS/s]         |    0.0002 |
|  Memory load bandwidth [MBytes/s] |  522.8989 |
|  Memory load data volume [GBytes] |    0.1394 |
| Memory evict bandwidth [MBytes/s] | 1291.3348 |
| Memory evict data volume [GBytes] |    0.3442 |
|    Memory bandwidth [MBytes/s]    | 1814.2336 |
|    Memory data volume [GBytes]    |    0.4836 |
|       Operational intensity       |    0.0001 |
+-----------------------------------+-----------+

Iteration without GEMM: 5
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 40 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 1.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+----------+
|                   Event                  | Counter |  Core 0  |
+------------------------------------------+---------+----------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 42090820 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 77243528 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 80658240 |
|              PWR_PKG_ENERGY              |   PWR0  |   1.4056 |
|              PWR_DRAM_ENERGY             |   PWR3  |   0.4684 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |        0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |       55 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |    10240 |
|                DRAM_READS                | MBOX0C1 |  2243987 |
|                DRAM_WRITES               | MBOX0C2 |  5369187 |
+------------------------------------------+---------+----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.2666 |
|        Runtime unhalted [s]       |    0.0335 |
|            Clock [MHz]            | 2206.3869 |
|                CPI                |    1.8352 |
|             Energy [J]            |    1.4056 |
|             Power [W]             |    5.2729 |
|          Energy DRAM [J]          |    0.4684 |
|           Power DRAM [W]          |    1.7570 |
|            DP [MFLOP/s]           |    0.1539 |
|          AVX DP [MFLOP/s]         |    0.1537 |
|          Packed [MUOPS/s]         |    0.0384 |
|          Scalar [MUOPS/s]         |    0.0002 |
|  Memory load bandwidth [MBytes/s] |  538.7352 |
|  Memory load data volume [GBytes] |    0.1436 |
| Memory evict bandwidth [MBytes/s] | 1289.0316 |
| Memory evict data volume [GBytes] |    0.3436 |
|    Memory bandwidth [MBytes/s]    | 1827.7669 |
|    Memory data volume [GBytes]    |    0.4872 |
|       Operational intensity       |    0.0001 |
+-----------------------------------+-----------+

Iteration without GEMM: 1
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 80 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	 [40] = 1024	 [41] = 1024	 [42] = 1024	 [43] = 1024	 [44] = 1024	 [45] = 1024	 [46] = 1024	 [47] = 1024	 [48] = 1024	 [49] = 1024	 [50] = 1024	 [51] = 1024	 [52] = 1024	 [53] = 1024	 [54] = 1024	 [55] = 1024	 [56] = 1024	 [57] = 1024	 [58] = 1024	 [59] = 1024	 [60] = 1024	 [61] = 1024	 [62] = 1024	 [63] = 1024	 [64] = 1024	 [65] = 1024	 [66] = 1024	 [67] = 1024	 [68] = 1024	 [69] = 1024	 [70] = 1024	 [71] = 1024	 [72] = 1024	 [73] = 1024	 [74] = 1024	 [75] = 1024	 [76] = 1024	 [77] = 1024	 [78] = 1024	 [79] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 1.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+-----------+
|                   Event                  | Counter |   Core 0  |
+------------------------------------------+---------+-----------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  84967415 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 155646726 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 159511008 |
|              PWR_PKG_ENERGY              |   PWR0  |    2.8159 |
|              PWR_DRAM_ENERGY             |   PWR3  |    0.9297 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |         0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |        56 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |     20480 |
|                DRAM_READS                | MBOX0C1 |   4323482 |
|                DRAM_WRITES               | MBOX0C2 |  10876279 |
+------------------------------------------+---------+-----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.5285 |
|        Runtime unhalted [s]       |    0.0676 |
|            Clock [MHz]            | 2248.1307 |
|                CPI                |    1.8318 |
|             Energy [J]            |    2.8159 |
|             Power [W]             |    5.3276 |
|          Energy DRAM [J]          |    0.9297 |
|           Power DRAM [W]          |    1.7591 |
|            DP [MFLOP/s]           |    0.1551 |
|          AVX DP [MFLOP/s]         |    0.1550 |
|          Packed [MUOPS/s]         |    0.0387 |
|          Scalar [MUOPS/s]         |    0.0001 |
|  Memory load bandwidth [MBytes/s] |  523.5204 |
|  Memory load data volume [GBytes] |    0.2767 |
| Memory evict bandwidth [MBytes/s] | 1316.9834 |
| Memory evict data volume [GBytes] |    0.6961 |
|    Memory bandwidth [MBytes/s]    | 1840.5038 |
|    Memory data volume [GBytes]    |    0.9728 |
|       Operational intensity       |    0.0001 |
+-----------------------------------+-----------+

Iteration without GEMM: 2
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 80 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	 [40] = 1024	 [41] = 1024	 [42] = 1024	 [43] = 1024	 [44] = 1024	 [45] = 1024	 [46] = 1024	 [47] = 1024	 [48] = 1024	 [49] = 1024	 [50] = 1024	 [51] = 1024	 [52] = 1024	 [53] = 1024	 [54] = 1024	 [55] = 1024	 [56] = 1024	 [57] = 1024	 [58] = 1024	 [59] = 1024	 [60] = 1024	 [61] = 1024	 [62] = 1024	 [63] = 1024	 [64] = 1024	 [65] = 1024	 [66] = 1024	 [67] = 1024	 [68] = 1024	 [69] = 1024	 [70] = 1024	 [71] = 1024	 [72] = 1024	 [73] = 1024	 [74] = 1024	 [75] = 1024	 [76] = 1024	 [77] = 1024	 [78] = 1024	 [79] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 1.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+-----------+
|                   Event                  | Counter |   Core 0  |
+------------------------------------------+---------+-----------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  84967639 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 153900212 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 157715712 |
|              PWR_PKG_ENERGY              |   PWR0  |    2.8167 |
|              PWR_DRAM_ENERGY             |   PWR3  |    0.9278 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |         0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |        55 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |     20480 |
|                DRAM_READS                | MBOX0C1 |   4201633 |
|                DRAM_WRITES               | MBOX0C2 |  10873150 |
+------------------------------------------+---------+-----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.5277 |
|        Runtime unhalted [s]       |    0.0668 |
|            Clock [MHz]            | 2248.2146 |
|                CPI                |    1.8113 |
|             Energy [J]            |    2.8167 |
|             Power [W]             |    5.3372 |
|          Energy DRAM [J]          |    0.9278 |
|           Power DRAM [W]          |    1.7581 |
|            DP [MFLOP/s]           |    0.1553 |
|          AVX DP [MFLOP/s]         |    0.1552 |
|          Packed [MUOPS/s]         |    0.0388 |
|          Scalar [MUOPS/s]         |    0.0001 |
|  Memory load bandwidth [MBytes/s] |  509.5411 |
|  Memory load data volume [GBytes] |    0.2689 |
| Memory evict bandwidth [MBytes/s] | 1318.6103 |
| Memory evict data volume [GBytes] |    0.6959 |
|    Memory bandwidth [MBytes/s]    | 1828.1514 |
|    Memory data volume [GBytes]    |    0.9648 |
|       Operational intensity       |    0.0001 |
+-----------------------------------+-----------+

Iteration without GEMM: 3
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 80 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	 [40] = 1024	 [41] = 1024	 [42] = 1024	 [43] = 1024	 [44] = 1024	 [45] = 1024	 [46] = 1024	 [47] = 1024	 [48] = 1024	 [49] = 1024	 [50] = 1024	 [51] = 1024	 [52] = 1024	 [53] = 1024	 [54] = 1024	 [55] = 1024	 [56] = 1024	 [57] = 1024	 [58] = 1024	 [59] = 1024	 [60] = 1024	 [61] = 1024	 [62] = 1024	 [63] = 1024	 [64] = 1024	 [65] = 1024	 [66] = 1024	 [67] = 1024	 [68] = 1024	 [69] = 1024	 [70] = 1024	 [71] = 1024	 [72] = 1024	 [73] = 1024	 [74] = 1024	 [75] = 1024	 [76] = 1024	 [77] = 1024	 [78] = 1024	 [79] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 1.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+-----------+
|                   Event                  | Counter |   Core 0  |
+------------------------------------------+---------+-----------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  84967382 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 155526561 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 158667360 |
|              PWR_PKG_ENERGY              |   PWR0  |    2.8064 |
|              PWR_DRAM_ENERGY             |   PWR3  |    0.9274 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |         0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |        56 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |     20480 |
|                DRAM_READS                | MBOX0C1 |   4332185 |
|                DRAM_WRITES               | MBOX0C2 |  10872219 |
+------------------------------------------+---------+-----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.5263 |
|        Runtime unhalted [s]       |    0.0675 |
|            Clock [MHz]            | 2258.3422 |
|                CPI                |    1.8304 |
|             Energy [J]            |    2.8064 |
|             Power [W]             |    5.3322 |
|          Energy DRAM [J]          |    0.9274 |
|           Power DRAM [W]          |    1.7620 |
|            DP [MFLOP/s]           |    0.1558 |
|          AVX DP [MFLOP/s]         |    0.1556 |
|          Packed [MUOPS/s]         |    0.0389 |
|          Scalar [MUOPS/s]         |    0.0001 |
|  Memory load bandwidth [MBytes/s] |  526.7969 |
|  Memory load data volume [GBytes] |    0.2773 |
| Memory evict bandwidth [MBytes/s] | 1322.0699 |
| Memory evict data volume [GBytes] |    0.6958 |
|    Memory bandwidth [MBytes/s]    | 1848.8668 |
|    Memory data volume [GBytes]    |    0.9731 |
|       Operational intensity       |    0.0001 |
+-----------------------------------+-----------+

Iteration without GEMM: 4
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 80 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	 [40] = 1024	 [41] = 1024	 [42] = 1024	 [43] = 1024	 [44] = 1024	 [45] = 1024	 [46] = 1024	 [47] = 1024	 [48] = 1024	 [49] = 1024	 [50] = 1024	 [51] = 1024	 [52] = 1024	 [53] = 1024	 [54] = 1024	 [55] = 1024	 [56] = 1024	 [57] = 1024	 [58] = 1024	 [59] = 1024	 [60] = 1024	 [61] = 1024	 [62] = 1024	 [63] = 1024	 [64] = 1024	 [65] = 1024	 [66] = 1024	 [67] = 1024	 [68] = 1024	 [69] = 1024	 [70] = 1024	 [71] = 1024	 [72] = 1024	 [73] = 1024	 [74] = 1024	 [75] = 1024	 [76] = 1024	 [77] = 1024	 [78] = 1024	 [79] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 1.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+-----------+
|                   Event                  | Counter |   Core 0  |
+------------------------------------------+---------+-----------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  84967427 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 156185574 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 157998336 |
|              PWR_PKG_ENERGY              |   PWR0  |    2.8833 |
|              PWR_DRAM_ENERGY             |   PWR3  |    0.9448 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |         0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |        56 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |     20480 |
|                DRAM_READS                | MBOX0C1 |   4848030 |
|                DRAM_WRITES               | MBOX0C2 |  10933378 |
+------------------------------------------+---------+-----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.5266 |
|        Runtime unhalted [s]       |    0.0678 |
|            Clock [MHz]            | 2277.5133 |
|                CPI                |    1.8382 |
|             Energy [J]            |    2.8833 |
|             Power [W]             |    5.4750 |
|          Energy DRAM [J]          |    0.9448 |
|           Power DRAM [W]          |    1.7941 |
|            DP [MFLOP/s]           |    0.1557 |
|          AVX DP [MFLOP/s]         |    0.1556 |
|          Packed [MUOPS/s]         |    0.0389 |
|          Scalar [MUOPS/s]         |    0.0001 |
|  Memory load bandwidth [MBytes/s] |  589.1646 |
|  Memory load data volume [GBytes] |    0.3103 |
| Memory evict bandwidth [MBytes/s] | 1328.6962 |
| Memory evict data volume [GBytes] |    0.6997 |
|    Memory bandwidth [MBytes/s]    | 1917.8608 |
|    Memory data volume [GBytes]    |    1.0100 |
|       Operational intensity       |    0.0001 |
+-----------------------------------+-----------+

Iteration without GEMM: 5
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 80 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	 [40] = 1024	 [41] = 1024	 [42] = 1024	 [43] = 1024	 [44] = 1024	 [45] = 1024	 [46] = 1024	 [47] = 1024	 [48] = 1024	 [49] = 1024	 [50] = 1024	 [51] = 1024	 [52] = 1024	 [53] = 1024	 [54] = 1024	 [55] = 1024	 [56] = 1024	 [57] = 1024	 [58] = 1024	 [59] = 1024	 [60] = 1024	 [61] = 1024	 [62] = 1024	 [63] = 1024	 [64] = 1024	 [65] = 1024	 [66] = 1024	 [67] = 1024	 [68] = 1024	 [69] = 1024	 [70] = 1024	 [71] = 1024	 [72] = 1024	 [73] = 1024	 [74] = 1024	 [75] = 1024	 [76] = 1024	 [77] = 1024	 [78] = 1024	 [79] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 1.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+-----------+
|                   Event                  | Counter |   Core 0  |
+------------------------------------------+---------+-----------+
|             INSTR_RETIRED_ANY            |  FIXC0  |  84967394 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 155615003 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 160915584 |
|              PWR_PKG_ENERGY              |   PWR0  |    2.8945 |
|              PWR_DRAM_ENERGY             |   PWR3  |    0.9434 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |         0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |        53 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |     20480 |
|                DRAM_READS                | MBOX0C1 |   4558051 |
|                DRAM_WRITES               | MBOX0C2 |  10901002 |
+------------------------------------------+---------+-----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    0.5307 |
|        Runtime unhalted [s]       |    0.0675 |
|            Clock [MHz]            | 2228.0155 |
|                CPI                |    1.8315 |
|             Energy [J]            |    2.8945 |
|             Power [W]             |    5.4542 |
|          Energy DRAM [J]          |    0.9434 |
|           Power DRAM [W]          |    1.7777 |
|            DP [MFLOP/s]           |    0.1545 |
|          AVX DP [MFLOP/s]         |    0.1544 |
|          Packed [MUOPS/s]         |    0.0386 |
|          Scalar [MUOPS/s]         |    0.0001 |
|  Memory load bandwidth [MBytes/s] |  549.6851 |
|  Memory load data volume [GBytes] |    0.2917 |
| Memory evict bandwidth [MBytes/s] | 1314.6228 |
| Memory evict data volume [GBytes] |    0.6977 |
|    Memory bandwidth [MBytes/s]    | 1864.3079 |
|    Memory data volume [GBytes]    |    0.9894 |
|       Operational intensity       |    0.0001 |
+-----------------------------------+-----------+

Iteration without GEMM: 1
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 160 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	 [40] = 1024	 [41] = 1024	 [42] = 1024	 [43] = 1024	 [44] = 1024	 [45] = 1024	 [46] = 1024	 [47] = 1024	 [48] = 1024	 [49] = 1024	 [50] = 1024	 [51] = 1024	 [52] = 1024	 [53] = 1024	 [54] = 1024	 [55] = 1024	 [56] = 1024	 [57] = 1024	 [58] = 1024	 [59] = 1024	 [60] = 1024	 [61] = 1024	 [62] = 1024	 [63] = 1024	 [64] = 1024	 [65] = 1024	 [66] = 1024	 [67] = 1024	 [68] = 1024	 [69] = 1024	 [70] = 1024	 [71] = 1024	 [72] = 1024	 [73] = 1024	 [74] = 1024	 [75] = 1024	 [76] = 1024	 [77] = 1024	 [78] = 1024	 [79] = 1024	 [80] = 1024	 [81] = 1024	 [82] = 1024	 [83] = 1024	 [84] = 1024	 [85] = 1024	 [86] = 1024	 [87] = 1024	 [88] = 1024	 [89] = 1024	 [90] = 1024	 [91] = 1024	 [92] = 1024	 [93] = 1024	 [94] = 1024	 [95] = 1024	 [96] = 1024	 [97] = 1024	 [98] = 1024	 [99] = 1024	 [100] = 1024	 [101] = 1024	 [102] = 1024	 [103] = 1024	 [104] = 1024	 [105] = 1024	 [106] = 1024	 [107] = 1024	 [108] = 1024	 [109] = 1024	 [110] = 1024	 [111] = 1024	 [112] = 1024	 [113] = 1024	 [114] = 1024	 [115] = 1024	 [116] = 1024	 [117] = 1024	 [118] = 1024	 [119] = 1024	 [120] = 1024	 [121] = 1024	 [122] = 1024	 [123] = 1024	 [124] = 1024	 [125] = 1024	 [126] = 1024	 [127] = 1024	 [128] = 1024	 [129] = 1024	 [130] = 1024	 [131] = 1024	 [132] = 1024	 [133] = 1024	 [134] = 1024	 [135] = 1024	 [136] = 1024	 [137] = 1024	 [138] = 1024	 [139] = 1024	 [140] = 1024	 [141] = 1024	 [142] = 1024	 [143] = 1024	 [144] = 1024	 [145] = 1024	 [146] = 1024	 [147] = 1024	 [148] = 1024	 [149] = 1024	 [150] = 1024	 [151] = 1024	 [152] = 1024	 [153] = 1024	 [154] = 1024	 [155] = 1024	 [156] = 1024	 [157] = 1024	 [158] = 1024	 [159] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 1.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+-----------+
|                   Event                  | Counter |   Core 0  |
+------------------------------------------+---------+-----------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 170721928 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 310639159 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 314842560 |
|              PWR_PKG_ENERGY              |   PWR0  |    5.6580 |
|              PWR_DRAM_ENERGY             |   PWR3  |    1.8541 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |         0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |        54 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |     40960 |
|                DRAM_READS                | MBOX0C1 |   8594603 |
|                DRAM_WRITES               | MBOX0C2 |  21912113 |
+------------------------------------------+---------+-----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    1.0513 |
|        Runtime unhalted [s]       |    0.1348 |
|            Clock [MHz]            | 2273.1926 |
|                CPI                |    1.8196 |
|             Energy [J]            |    5.6580 |
|             Power [W]             |    5.3819 |
|          Energy DRAM [J]          |    1.8541 |
|           Power DRAM [W]          |    1.7636 |
|            DP [MFLOP/s]           |    0.1559 |
|          AVX DP [MFLOP/s]         |    0.1558 |
|          Packed [MUOPS/s]         |    0.0390 |
|          Scalar [MUOPS/s]         |    0.0001 |
|  Memory load bandwidth [MBytes/s] |  523.2101 |
|  Memory load data volume [GBytes] |    0.5501 |
| Memory evict bandwidth [MBytes/s] | 1333.9347 |
| Memory evict data volume [GBytes] |    1.4024 |
|    Memory bandwidth [MBytes/s]    | 1857.1449 |
|    Memory data volume [GBytes]    |    1.9524 |
|       Operational intensity       |    0.0001 |
+-----------------------------------+-----------+

Iteration without GEMM: 2
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 160 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	 [40] = 1024	 [41] = 1024	 [42] = 1024	 [43] = 1024	 [44] = 1024	 [45] = 1024	 [46] = 1024	 [47] = 1024	 [48] = 1024	 [49] = 1024	 [50] = 1024	 [51] = 1024	 [52] = 1024	 [53] = 1024	 [54] = 1024	 [55] = 1024	 [56] = 1024	 [57] = 1024	 [58] = 1024	 [59] = 1024	 [60] = 1024	 [61] = 1024	 [62] = 1024	 [63] = 1024	 [64] = 1024	 [65] = 1024	 [66] = 1024	 [67] = 1024	 [68] = 1024	 [69] = 1024	 [70] = 1024	 [71] = 1024	 [72] = 1024	 [73] = 1024	 [74] = 1024	 [75] = 1024	 [76] = 1024	 [77] = 1024	 [78] = 1024	 [79] = 1024	 [80] = 1024	 [81] = 1024	 [82] = 1024	 [83] = 1024	 [84] = 1024	 [85] = 1024	 [86] = 1024	 [87] = 1024	 [88] = 1024	 [89] = 1024	 [90] = 1024	 [91] = 1024	 [92] = 1024	 [93] = 1024	 [94] = 1024	 [95] = 1024	 [96] = 1024	 [97] = 1024	 [98] = 1024	 [99] = 1024	 [100] = 1024	 [101] = 1024	 [102] = 1024	 [103] = 1024	 [104] = 1024	 [105] = 1024	 [106] = 1024	 [107] = 1024	 [108] = 1024	 [109] = 1024	 [110] = 1024	 [111] = 1024	 [112] = 1024	 [113] = 1024	 [114] = 1024	 [115] = 1024	 [116] = 1024	 [117] = 1024	 [118] = 1024	 [119] = 1024	 [120] = 1024	 [121] = 1024	 [122] = 1024	 [123] = 1024	 [124] = 1024	 [125] = 1024	 [126] = 1024	 [127] = 1024	 [128] = 1024	 [129] = 1024	 [130] = 1024	 [131] = 1024	 [132] = 1024	 [133] = 1024	 [134] = 1024	 [135] = 1024	 [136] = 1024	 [137] = 1024	 [138] = 1024	 [139] = 1024	 [140] = 1024	 [141] = 1024	 [142] = 1024	 [143] = 1024	 [144] = 1024	 [145] = 1024	 [146] = 1024	 [147] = 1024	 [148] = 1024	 [149] = 1024	 [150] = 1024	 [151] = 1024	 [152] = 1024	 [153] = 1024	 [154] = 1024	 [155] = 1024	 [156] = 1024	 [157] = 1024	 [158] = 1024	 [159] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 1.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+-----------+
|                   Event                  | Counter |   Core 0  |
+------------------------------------------+---------+-----------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 170722173 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 312728708 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 317217984 |
|              PWR_PKG_ENERGY              |   PWR0  |    5.6655 |
|              PWR_DRAM_ENERGY             |   PWR3  |    1.8557 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |         0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |        55 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |     40960 |
|                DRAM_READS                | MBOX0C1 |   8654031 |
|                DRAM_WRITES               | MBOX0C2 |  21913322 |
+------------------------------------------+---------+-----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    1.0517 |
|        Runtime unhalted [s]       |    0.1357 |
|            Clock [MHz]            | 2271.3414 |
|                CPI                |    1.8318 |
|             Energy [J]            |    5.6655 |
|             Power [W]             |    5.3868 |
|          Energy DRAM [J]          |    1.8557 |
|           Power DRAM [W]          |    1.7644 |
|            DP [MFLOP/s]           |    0.1558 |
|          AVX DP [MFLOP/s]         |    0.1558 |
|          Packed [MUOPS/s]         |    0.0389 |
|          Scalar [MUOPS/s]         |    0.0001 |
|  Memory load bandwidth [MBytes/s] |  526.6186 |
|  Memory load data volume [GBytes] |    0.5539 |
| Memory evict bandwidth [MBytes/s] | 1333.4783 |
| Memory evict data volume [GBytes] |    1.4025 |
|    Memory bandwidth [MBytes/s]    | 1860.0968 |
|    Memory data volume [GBytes]    |    1.9563 |
|       Operational intensity       |    0.0001 |
+-----------------------------------+-----------+

Iteration without GEMM: 3
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 160 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	 [40] = 1024	 [41] = 1024	 [42] = 1024	 [43] = 1024	 [44] = 1024	 [45] = 1024	 [46] = 1024	 [47] = 1024	 [48] = 1024	 [49] = 1024	 [50] = 1024	 [51] = 1024	 [52] = 1024	 [53] = 1024	 [54] = 1024	 [55] = 1024	 [56] = 1024	 [57] = 1024	 [58] = 1024	 [59] = 1024	 [60] = 1024	 [61] = 1024	 [62] = 1024	 [63] = 1024	 [64] = 1024	 [65] = 1024	 [66] = 1024	 [67] = 1024	 [68] = 1024	 [69] = 1024	 [70] = 1024	 [71] = 1024	 [72] = 1024	 [73] = 1024	 [74] = 1024	 [75] = 1024	 [76] = 1024	 [77] = 1024	 [78] = 1024	 [79] = 1024	 [80] = 1024	 [81] = 1024	 [82] = 1024	 [83] = 1024	 [84] = 1024	 [85] = 1024	 [86] = 1024	 [87] = 1024	 [88] = 1024	 [89] = 1024	 [90] = 1024	 [91] = 1024	 [92] = 1024	 [93] = 1024	 [94] = 1024	 [95] = 1024	 [96] = 1024	 [97] = 1024	 [98] = 1024	 [99] = 1024	 [100] = 1024	 [101] = 1024	 [102] = 1024	 [103] = 1024	 [104] = 1024	 [105] = 1024	 [106] = 1024	 [107] = 1024	 [108] = 1024	 [109] = 1024	 [110] = 1024	 [111] = 1024	 [112] = 1024	 [113] = 1024	 [114] = 1024	 [115] = 1024	 [116] = 1024	 [117] = 1024	 [118] = 1024	 [119] = 1024	 [120] = 1024	 [121] = 1024	 [122] = 1024	 [123] = 1024	 [124] = 1024	 [125] = 1024	 [126] = 1024	 [127] = 1024	 [128] = 1024	 [129] = 1024	 [130] = 1024	 [131] = 1024	 [132] = 1024	 [133] = 1024	 [134] = 1024	 [135] = 1024	 [136] = 1024	 [137] = 1024	 [138] = 1024	 [139] = 1024	 [140] = 1024	 [141] = 1024	 [142] = 1024	 [143] = 1024	 [144] = 1024	 [145] = 1024	 [146] = 1024	 [147] = 1024	 [148] = 1024	 [149] = 1024	 [150] = 1024	 [151] = 1024	 [152] = 1024	 [153] = 1024	 [154] = 1024	 [155] = 1024	 [156] = 1024	 [157] = 1024	 [158] = 1024	 [159] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 1.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+-----------+
|                   Event                  | Counter |   Core 0  |
+------------------------------------------+---------+-----------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 170721903 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 309949753 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 314274624 |
|              PWR_PKG_ENERGY              |   PWR0  |    5.6685 |
|              PWR_DRAM_ENERGY             |   PWR3  |    1.8516 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |         0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |        55 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |     40960 |
|                DRAM_READS                | MBOX0C1 |   8470625 |
|                DRAM_WRITES               | MBOX0C2 |  21907471 |
+------------------------------------------+---------+-----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    1.0510 |
|        Runtime unhalted [s]       |    0.1345 |
|            Clock [MHz]            | 2272.1791 |
|                CPI                |    1.8155 |
|             Energy [J]            |    5.6685 |
|             Power [W]             |    5.3936 |
|          Energy DRAM [J]          |    1.8516 |
|           Power DRAM [W]          |    1.7618 |
|            DP [MFLOP/s]           |    0.1559 |
|          AVX DP [MFLOP/s]         |    0.1559 |
|          Packed [MUOPS/s]         |    0.0390 |
|          Scalar [MUOPS/s]         |    0.0001 |
|  Memory load bandwidth [MBytes/s] |  515.8316 |
|  Memory load data volume [GBytes] |    0.5421 |
| Memory evict bandwidth [MBytes/s] | 1334.0887 |
| Memory evict data volume [GBytes] |    1.4021 |
|    Memory bandwidth [MBytes/s]    | 1849.9202 |
|    Memory data volume [GBytes]    |    1.9442 |
|       Operational intensity       |    0.0001 |
+-----------------------------------+-----------+

Iteration without GEMM: 4
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 160 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	 [40] = 1024	 [41] = 1024	 [42] = 1024	 [43] = 1024	 [44] = 1024	 [45] = 1024	 [46] = 1024	 [47] = 1024	 [48] = 1024	 [49] = 1024	 [50] = 1024	 [51] = 1024	 [52] = 1024	 [53] = 1024	 [54] = 1024	 [55] = 1024	 [56] = 1024	 [57] = 1024	 [58] = 1024	 [59] = 1024	 [60] = 1024	 [61] = 1024	 [62] = 1024	 [63] = 1024	 [64] = 1024	 [65] = 1024	 [66] = 1024	 [67] = 1024	 [68] = 1024	 [69] = 1024	 [70] = 1024	 [71] = 1024	 [72] = 1024	 [73] = 1024	 [74] = 1024	 [75] = 1024	 [76] = 1024	 [77] = 1024	 [78] = 1024	 [79] = 1024	 [80] = 1024	 [81] = 1024	 [82] = 1024	 [83] = 1024	 [84] = 1024	 [85] = 1024	 [86] = 1024	 [87] = 1024	 [88] = 1024	 [89] = 1024	 [90] = 1024	 [91] = 1024	 [92] = 1024	 [93] = 1024	 [94] = 1024	 [95] = 1024	 [96] = 1024	 [97] = 1024	 [98] = 1024	 [99] = 1024	 [100] = 1024	 [101] = 1024	 [102] = 1024	 [103] = 1024	 [104] = 1024	 [105] = 1024	 [106] = 1024	 [107] = 1024	 [108] = 1024	 [109] = 1024	 [110] = 1024	 [111] = 1024	 [112] = 1024	 [113] = 1024	 [114] = 1024	 [115] = 1024	 [116] = 1024	 [117] = 1024	 [118] = 1024	 [119] = 1024	 [120] = 1024	 [121] = 1024	 [122] = 1024	 [123] = 1024	 [124] = 1024	 [125] = 1024	 [126] = 1024	 [127] = 1024	 [128] = 1024	 [129] = 1024	 [130] = 1024	 [131] = 1024	 [132] = 1024	 [133] = 1024	 [134] = 1024	 [135] = 1024	 [136] = 1024	 [137] = 1024	 [138] = 1024	 [139] = 1024	 [140] = 1024	 [141] = 1024	 [142] = 1024	 [143] = 1024	 [144] = 1024	 [145] = 1024	 [146] = 1024	 [147] = 1024	 [148] = 1024	 [149] = 1024	 [150] = 1024	 [151] = 1024	 [152] = 1024	 [153] = 1024	 [154] = 1024	 [155] = 1024	 [156] = 1024	 [157] = 1024	 [158] = 1024	 [159] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 1.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+-----------+
|                   Event                  | Counter |   Core 0  |
+------------------------------------------+---------+-----------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 170721894 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 309654785 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 313567680 |
|              PWR_PKG_ENERGY              |   PWR0  |    5.6801 |
|              PWR_DRAM_ENERGY             |   PWR3  |    1.8469 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |         0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |        53 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |     40960 |
|                DRAM_READS                | MBOX0C1 |   8381845 |
|                DRAM_WRITES               | MBOX0C2 |  21905136 |
+------------------------------------------+---------+-----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    1.0489 |
|        Runtime unhalted [s]       |    0.1344 |
|            Clock [MHz]            | 2275.1999 |
|                CPI                |    1.8138 |
|             Energy [J]            |    5.6801 |
|             Power [W]             |    5.4155 |
|          Energy DRAM [J]          |    1.8469 |
|           Power DRAM [W]          |    1.7609 |
|            DP [MFLOP/s]           |    0.1563 |
|          AVX DP [MFLOP/s]         |    0.1562 |
|          Packed [MUOPS/s]         |    0.0391 |
|          Scalar [MUOPS/s]         |    0.0001 |
|  Memory load bandwidth [MBytes/s] |  511.4477 |
|  Memory load data volume [GBytes] |    0.5364 |
| Memory evict bandwidth [MBytes/s] | 1336.6187 |
| Memory evict data volume [GBytes] |    1.4019 |
|    Memory bandwidth [MBytes/s]    | 1848.0663 |
|    Memory data volume [GBytes]    |    1.9384 |
|       Operational intensity       |    0.0001 |
+-----------------------------------+-----------+

Iteration without GEMM: 5
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 160 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	 [40] = 1024	 [41] = 1024	 [42] = 1024	 [43] = 1024	 [44] = 1024	 [45] = 1024	 [46] = 1024	 [47] = 1024	 [48] = 1024	 [49] = 1024	 [50] = 1024	 [51] = 1024	 [52] = 1024	 [53] = 1024	 [54] = 1024	 [55] = 1024	 [56] = 1024	 [57] = 1024	 [58] = 1024	 [59] = 1024	 [60] = 1024	 [61] = 1024	 [62] = 1024	 [63] = 1024	 [64] = 1024	 [65] = 1024	 [66] = 1024	 [67] = 1024	 [68] = 1024	 [69] = 1024	 [70] = 1024	 [71] = 1024	 [72] = 1024	 [73] = 1024	 [74] = 1024	 [75] = 1024	 [76] = 1024	 [77] = 1024	 [78] = 1024	 [79] = 1024	 [80] = 1024	 [81] = 1024	 [82] = 1024	 [83] = 1024	 [84] = 1024	 [85] = 1024	 [86] = 1024	 [87] = 1024	 [88] = 1024	 [89] = 1024	 [90] = 1024	 [91] = 1024	 [92] = 1024	 [93] = 1024	 [94] = 1024	 [95] = 1024	 [96] = 1024	 [97] = 1024	 [98] = 1024	 [99] = 1024	 [100] = 1024	 [101] = 1024	 [102] = 1024	 [103] = 1024	 [104] = 1024	 [105] = 1024	 [106] = 1024	 [107] = 1024	 [108] = 1024	 [109] = 1024	 [110] = 1024	 [111] = 1024	 [112] = 1024	 [113] = 1024	 [114] = 1024	 [115] = 1024	 [116] = 1024	 [117] = 1024	 [118] = 1024	 [119] = 1024	 [120] = 1024	 [121] = 1024	 [122] = 1024	 [123] = 1024	 [124] = 1024	 [125] = 1024	 [126] = 1024	 [127] = 1024	 [128] = 1024	 [129] = 1024	 [130] = 1024	 [131] = 1024	 [132] = 1024	 [133] = 1024	 [134] = 1024	 [135] = 1024	 [136] = 1024	 [137] = 1024	 [138] = 1024	 [139] = 1024	 [140] = 1024	 [141] = 1024	 [142] = 1024	 [143] = 1024	 [144] = 1024	 [145] = 1024	 [146] = 1024	 [147] = 1024	 [148] = 1024	 [149] = 1024	 [150] = 1024	 [151] = 1024	 [152] = 1024	 [153] = 1024	 [154] = 1024	 [155] = 1024	 [156] = 1024	 [157] = 1024	 [158] = 1024	 [159] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 1.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+-----------+
|                   Event                  | Counter |   Core 0  |
+------------------------------------------+---------+-----------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 170721915 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 309801085 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 313920288 |
|              PWR_PKG_ENERGY              |   PWR0  |    5.6620 |
|              PWR_DRAM_ENERGY             |   PWR3  |    1.8436 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |         0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |        55 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |     40960 |
|                DRAM_READS                | MBOX0C1 |   8251478 |
|                DRAM_WRITES               | MBOX0C2 |  21889976 |
+------------------------------------------+---------+-----------+

+-----------------------------------+-----------+
|               Metric              |   Core 0  |
+-----------------------------------+-----------+
|        Runtime (RDTSC) [s]        |    1.0484 |
|        Runtime unhalted [s]       |    0.1345 |
|            Clock [MHz]            | 2273.7183 |
|                CPI                |    1.8147 |
|             Energy [J]            |    5.6620 |
|             Power [W]             |    5.4006 |
|          Energy DRAM [J]          |    1.8436 |
|           Power DRAM [W]          |    1.7585 |
|            DP [MFLOP/s]           |    0.1563 |
|          AVX DP [MFLOP/s]         |    0.1563 |
|          Packed [MUOPS/s]         |    0.0391 |
|          Scalar [MUOPS/s]         |    0.0001 |
|  Memory load bandwidth [MBytes/s] |  503.7196 |
|  Memory load data volume [GBytes] |    0.5281 |
| Memory evict bandwidth [MBytes/s] | 1336.2951 |
| Memory evict data volume [GBytes] |    1.4010 |
|    Memory bandwidth [MBytes/s]    | 1840.0147 |
|    Memory data volume [GBytes]    |    1.9291 |
|       Operational intensity       |    0.0001 |
+-----------------------------------+-----------+

Iteration without GEMM: 1
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 320 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	 [40] = 1024	 [41] = 1024	 [42] = 1024	 [43] = 1024	 [44] = 1024	 [45] = 1024	 [46] = 1024	 [47] = 1024	 [48] = 1024	 [49] = 1024	 [50] = 1024	 [51] = 1024	 [52] = 1024	 [53] = 1024	 [54] = 1024	 [55] = 1024	 [56] = 1024	 [57] = 1024	 [58] = 1024	 [59] = 1024	 [60] = 1024	 [61] = 1024	 [62] = 1024	 [63] = 1024	 [64] = 1024	 [65] = 1024	 [66] = 1024	 [67] = 1024	 [68] = 1024	 [69] = 1024	 [70] = 1024	 [71] = 1024	 [72] = 1024	 [73] = 1024	 [74] = 1024	 [75] = 1024	 [76] = 1024	 [77] = 1024	 [78] = 1024	 [79] = 1024	 [80] = 1024	 [81] = 1024	 [82] = 1024	 [83] = 1024	 [84] = 1024	 [85] = 1024	 [86] = 1024	 [87] = 1024	 [88] = 1024	 [89] = 1024	 [90] = 1024	 [91] = 1024	 [92] = 1024	 [93] = 1024	 [94] = 1024	 [95] = 1024	 [96] = 1024	 [97] = 1024	 [98] = 1024	 [99] = 1024	 [100] = 1024	 [101] = 1024	 [102] = 1024	 [103] = 1024	 [104] = 1024	 [105] = 1024	 [106] = 1024	 [107] = 1024	 [108] = 1024	 [109] = 1024	 [110] = 1024	 [111] = 1024	 [112] = 1024	 [113] = 1024	 [114] = 1024	 [115] = 1024	 [116] = 1024	 [117] = 1024	 [118] = 1024	 [119] = 1024	 [120] = 1024	 [121] = 1024	 [122] = 1024	 [123] = 1024	 [124] = 1024	 [125] = 1024	 [126] = 1024	 [127] = 1024	 [128] = 1024	 [129] = 1024	 [130] = 1024	 [131] = 1024	 [132] = 1024	 [133] = 1024	 [134] = 1024	 [135] = 1024	 [136] = 1024	 [137] = 1024	 [138] = 1024	 [139] = 1024	 [140] = 1024	 [141] = 1024	 [142] = 1024	 [143] = 1024	 [144] = 1024	 [145] = 1024	 [146] = 1024	 [147] = 1024	 [148] = 1024	 [149] = 1024	 [150] = 1024	 [151] = 1024	 [152] = 1024	 [153] = 1024	 [154] = 1024	 [155] = 1024	 [156] = 1024	 [157] = 1024	 [158] = 1024	 [159] = 1024	 [160] = 1024	 [161] = 1024	 [162] = 1024	 [163] = 1024	 [164] = 1024	 [165] = 1024	 [166] = 1024	 [167] = 1024	 [168] = 1024	 [169] = 1024	 [170] = 1024	 [171] = 1024	 [172] = 1024	 [173] = 1024	 [174] = 1024	 [175] = 1024	 [176] = 1024	 [177] = 1024	 [178] = 1024	 [179] = 1024	 [180] = 1024	 [181] = 1024	 [182] = 1024	 [183] = 1024	 [184] = 1024	 [185] = 1024	 [186] = 1024	 [187] = 1024	 [188] = 1024	 [189] = 1024	 [190] = 1024	 [191] = 1024	 [192] = 1024	 [193] = 1024	 [194] = 1024	 [195] = 1024	 [196] = 1024	 [197] = 1024	 [198] = 1024	 [199] = 1024	 [200] = 1024	 [201] = 1024	 [202] = 1024	 [203] = 1024	 [204] = 1024	 [205] = 1024	 [206] = 1024	 [207] = 1024	 [208] = 1024	 [209] = 1024	 [210] = 1024	 [211] = 1024	 [212] = 1024	 [213] = 1024	 [214] = 1024	 [215] = 1024	 [216] = 1024	 [217] = 1024	 [218] = 1024	 [219] = 1024	 [220] = 1024	 [221] = 1024	 [222] = 1024	 [223] = 1024	 [224] = 1024	 [225] = 1024	 [226] = 1024	 [227] = 1024	 [228] = 1024	 [229] = 1024	 [230] = 1024	 [231] = 1024	 [232] = 1024	 [233] = 1024	 [234] = 1024	 [235] = 1024	 [236] = 1024	 [237] = 1024	 [238] = 1024	 [239] = 1024	 [240] = 1024	 [241] = 1024	 [242] = 1024	 [243] = 1024	 [244] = 1024	 [245] = 1024	 [246] = 1024	 [247] = 1024	 [248] = 1024	 [249] = 1024	 [250] = 1024	 [251] = 1024	 [252] = 1024	 [253] = 1024	 [254] = 1024	 [255] = 1024	 [256] = 1024	 [257] = 1024	 [258] = 1024	 [259] = 1024	 [260] = 1024	 [261] = 1024	 [262] = 1024	 [263] = 1024	 [264] = 1024	 [265] = 1024	 [266] = 1024	 [267] = 1024	 [268] = 1024	 [269] = 1024	 [270] = 1024	 [271] = 1024	 [272] = 1024	 [273] = 1024	 [274] = 1024	 [275] = 1024	 [276] = 1024	 [277] = 1024	 [278] = 1024	 [279] = 1024	 [280] = 1024	 [281] = 1024	 [282] = 1024	 [283] = 1024	 [284] = 1024	 [285] = 1024	 [286] = 1024	 [287] = 1024	 [288] = 1024	 [289] = 1024	 [290] = 1024	 [291] = 1024	 [292] = 1024	 [293] = 1024	 [294] = 1024	 [295] = 1024	 [296] = 1024	 [297] = 1024	 [298] = 1024	 [299] = 1024	 [300] = 1024	 [301] = 1024	 [302] = 1024	 [303] = 1024	 [304] = 1024	 [305] = 1024	 [306] = 1024	 [307] = 1024	 [308] = 1024	 [309] = 1024	 [310] = 1024	 [311] = 1024	 [312] = 1024	 [313] = 1024	 [314] = 1024	 [315] = 1024	 [316] = 1024	 [317] = 1024	 [318] = 1024	 [319] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 1.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+-----------+
|                   Event                  | Counter |   Core 0  |
+------------------------------------------+---------+-----------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 342231228 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 635934106 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 641649888 |
|              PWR_PKG_ENERGY              |   PWR0  |   11.4197 |
|              PWR_DRAM_ENERGY             |   PWR3  |    3.7039 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |         0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |        55 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |     81920 |
|                DRAM_READS                | MBOX0C1 |  17197991 |
|                DRAM_WRITES               | MBOX0C2 |  43925889 |
+------------------------------------------+---------+-----------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       2.1004 |
|        Runtime unhalted [s]       |       0.2760 |
|            Clock [MHz]            |    2283.4251 |
|                CPI                |       1.8582 |
|             Energy [J]            |      11.4197 |
|             Power [W]             |       5.4369 |
|          Energy DRAM [J]          |       3.7039 |
|           Power DRAM [W]          |       1.7634 |
|            DP [MFLOP/s]           |       0.1560 |
|          AVX DP [MFLOP/s]         |       0.1560 |
|          Packed [MUOPS/s]         |       0.0390 |
|          Scalar [MUOPS/s]         | 2.618524e-05 |
|  Memory load bandwidth [MBytes/s] |     524.0244 |
|  Memory load data volume [GBytes] |       1.1007 |
| Memory evict bandwidth [MBytes/s] |    1338.4259 |
| Memory evict data volume [GBytes] |       2.8113 |
|    Memory bandwidth [MBytes/s]    |    1862.4503 |
|    Memory data volume [GBytes]    |       3.9119 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Iteration without GEMM: 2
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 320 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	 [40] = 1024	 [41] = 1024	 [42] = 1024	 [43] = 1024	 [44] = 1024	 [45] = 1024	 [46] = 1024	 [47] = 1024	 [48] = 1024	 [49] = 1024	 [50] = 1024	 [51] = 1024	 [52] = 1024	 [53] = 1024	 [54] = 1024	 [55] = 1024	 [56] = 1024	 [57] = 1024	 [58] = 1024	 [59] = 1024	 [60] = 1024	 [61] = 1024	 [62] = 1024	 [63] = 1024	 [64] = 1024	 [65] = 1024	 [66] = 1024	 [67] = 1024	 [68] = 1024	 [69] = 1024	 [70] = 1024	 [71] = 1024	 [72] = 1024	 [73] = 1024	 [74] = 1024	 [75] = 1024	 [76] = 1024	 [77] = 1024	 [78] = 1024	 [79] = 1024	 [80] = 1024	 [81] = 1024	 [82] = 1024	 [83] = 1024	 [84] = 1024	 [85] = 1024	 [86] = 1024	 [87] = 1024	 [88] = 1024	 [89] = 1024	 [90] = 1024	 [91] = 1024	 [92] = 1024	 [93] = 1024	 [94] = 1024	 [95] = 1024	 [96] = 1024	 [97] = 1024	 [98] = 1024	 [99] = 1024	 [100] = 1024	 [101] = 1024	 [102] = 1024	 [103] = 1024	 [104] = 1024	 [105] = 1024	 [106] = 1024	 [107] = 1024	 [108] = 1024	 [109] = 1024	 [110] = 1024	 [111] = 1024	 [112] = 1024	 [113] = 1024	 [114] = 1024	 [115] = 1024	 [116] = 1024	 [117] = 1024	 [118] = 1024	 [119] = 1024	 [120] = 1024	 [121] = 1024	 [122] = 1024	 [123] = 1024	 [124] = 1024	 [125] = 1024	 [126] = 1024	 [127] = 1024	 [128] = 1024	 [129] = 1024	 [130] = 1024	 [131] = 1024	 [132] = 1024	 [133] = 1024	 [134] = 1024	 [135] = 1024	 [136] = 1024	 [137] = 1024	 [138] = 1024	 [139] = 1024	 [140] = 1024	 [141] = 1024	 [142] = 1024	 [143] = 1024	 [144] = 1024	 [145] = 1024	 [146] = 1024	 [147] = 1024	 [148] = 1024	 [149] = 1024	 [150] = 1024	 [151] = 1024	 [152] = 1024	 [153] = 1024	 [154] = 1024	 [155] = 1024	 [156] = 1024	 [157] = 1024	 [158] = 1024	 [159] = 1024	 [160] = 1024	 [161] = 1024	 [162] = 1024	 [163] = 1024	 [164] = 1024	 [165] = 1024	 [166] = 1024	 [167] = 1024	 [168] = 1024	 [169] = 1024	 [170] = 1024	 [171] = 1024	 [172] = 1024	 [173] = 1024	 [174] = 1024	 [175] = 1024	 [176] = 1024	 [177] = 1024	 [178] = 1024	 [179] = 1024	 [180] = 1024	 [181] = 1024	 [182] = 1024	 [183] = 1024	 [184] = 1024	 [185] = 1024	 [186] = 1024	 [187] = 1024	 [188] = 1024	 [189] = 1024	 [190] = 1024	 [191] = 1024	 [192] = 1024	 [193] = 1024	 [194] = 1024	 [195] = 1024	 [196] = 1024	 [197] = 1024	 [198] = 1024	 [199] = 1024	 [200] = 1024	 [201] = 1024	 [202] = 1024	 [203] = 1024	 [204] = 1024	 [205] = 1024	 [206] = 1024	 [207] = 1024	 [208] = 1024	 [209] = 1024	 [210] = 1024	 [211] = 1024	 [212] = 1024	 [213] = 1024	 [214] = 1024	 [215] = 1024	 [216] = 1024	 [217] = 1024	 [218] = 1024	 [219] = 1024	 [220] = 1024	 [221] = 1024	 [222] = 1024	 [223] = 1024	 [224] = 1024	 [225] = 1024	 [226] = 1024	 [227] = 1024	 [228] = 1024	 [229] = 1024	 [230] = 1024	 [231] = 1024	 [232] = 1024	 [233] = 1024	 [234] = 1024	 [235] = 1024	 [236] = 1024	 [237] = 1024	 [238] = 1024	 [239] = 1024	 [240] = 1024	 [241] = 1024	 [242] = 1024	 [243] = 1024	 [244] = 1024	 [245] = 1024	 [246] = 1024	 [247] = 1024	 [248] = 1024	 [249] = 1024	 [250] = 1024	 [251] = 1024	 [252] = 1024	 [253] = 1024	 [254] = 1024	 [255] = 1024	 [256] = 1024	 [257] = 1024	 [258] = 1024	 [259] = 1024	 [260] = 1024	 [261] = 1024	 [262] = 1024	 [263] = 1024	 [264] = 1024	 [265] = 1024	 [266] = 1024	 [267] = 1024	 [268] = 1024	 [269] = 1024	 [270] = 1024	 [271] = 1024	 [272] = 1024	 [273] = 1024	 [274] = 1024	 [275] = 1024	 [276] = 1024	 [277] = 1024	 [278] = 1024	 [279] = 1024	 [280] = 1024	 [281] = 1024	 [282] = 1024	 [283] = 1024	 [284] = 1024	 [285] = 1024	 [286] = 1024	 [287] = 1024	 [288] = 1024	 [289] = 1024	 [290] = 1024	 [291] = 1024	 [292] = 1024	 [293] = 1024	 [294] = 1024	 [295] = 1024	 [296] = 1024	 [297] = 1024	 [298] = 1024	 [299] = 1024	 [300] = 1024	 [301] = 1024	 [302] = 1024	 [303] = 1024	 [304] = 1024	 [305] = 1024	 [306] = 1024	 [307] = 1024	 [308] = 1024	 [309] = 1024	 [310] = 1024	 [311] = 1024	 [312] = 1024	 [313] = 1024	 [314] = 1024	 [315] = 1024	 [316] = 1024	 [317] = 1024	 [318] = 1024	 [319] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 1.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+-----------+
|                   Event                  | Counter |   Core 0  |
+------------------------------------------+---------+-----------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 342230959 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 629567183 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 634609056 |
|              PWR_PKG_ENERGY              |   PWR0  |   11.4473 |
|              PWR_DRAM_ENERGY             |   PWR3  |    3.7104 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |         0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |        55 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |     81920 |
|                DRAM_READS                | MBOX0C1 |  17705122 |
|                DRAM_WRITES               | MBOX0C2 |  43931417 |
+------------------------------------------+---------+-----------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       2.1009 |
|        Runtime unhalted [s]       |       0.2733 |
|            Clock [MHz]            |    2285.5370 |
|                CPI                |       1.8396 |
|             Energy [J]            |      11.4473 |
|             Power [W]             |       5.4488 |
|          Energy DRAM [J]          |       3.7104 |
|           Power DRAM [W]          |       1.7661 |
|            DP [MFLOP/s]           |       0.1560 |
|          AVX DP [MFLOP/s]         |       0.1560 |
|          Packed [MUOPS/s]         |       0.0390 |
|          Scalar [MUOPS/s]         | 2.617944e-05 |
|  Memory load bandwidth [MBytes/s] |     539.3573 |
|  Memory load data volume [GBytes] |       1.1331 |
| Memory evict bandwidth [MBytes/s] |    1338.2980 |
| Memory evict data volume [GBytes] |       2.8116 |
|    Memory bandwidth [MBytes/s]    |    1877.6553 |
|    Memory data volume [GBytes]    |       3.9447 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Iteration without GEMM: 3
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 320 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	 [40] = 1024	 [41] = 1024	 [42] = 1024	 [43] = 1024	 [44] = 1024	 [45] = 1024	 [46] = 1024	 [47] = 1024	 [48] = 1024	 [49] = 1024	 [50] = 1024	 [51] = 1024	 [52] = 1024	 [53] = 1024	 [54] = 1024	 [55] = 1024	 [56] = 1024	 [57] = 1024	 [58] = 1024	 [59] = 1024	 [60] = 1024	 [61] = 1024	 [62] = 1024	 [63] = 1024	 [64] = 1024	 [65] = 1024	 [66] = 1024	 [67] = 1024	 [68] = 1024	 [69] = 1024	 [70] = 1024	 [71] = 1024	 [72] = 1024	 [73] = 1024	 [74] = 1024	 [75] = 1024	 [76] = 1024	 [77] = 1024	 [78] = 1024	 [79] = 1024	 [80] = 1024	 [81] = 1024	 [82] = 1024	 [83] = 1024	 [84] = 1024	 [85] = 1024	 [86] = 1024	 [87] = 1024	 [88] = 1024	 [89] = 1024	 [90] = 1024	 [91] = 1024	 [92] = 1024	 [93] = 1024	 [94] = 1024	 [95] = 1024	 [96] = 1024	 [97] = 1024	 [98] = 1024	 [99] = 1024	 [100] = 1024	 [101] = 1024	 [102] = 1024	 [103] = 1024	 [104] = 1024	 [105] = 1024	 [106] = 1024	 [107] = 1024	 [108] = 1024	 [109] = 1024	 [110] = 1024	 [111] = 1024	 [112] = 1024	 [113] = 1024	 [114] = 1024	 [115] = 1024	 [116] = 1024	 [117] = 1024	 [118] = 1024	 [119] = 1024	 [120] = 1024	 [121] = 1024	 [122] = 1024	 [123] = 1024	 [124] = 1024	 [125] = 1024	 [126] = 1024	 [127] = 1024	 [128] = 1024	 [129] = 1024	 [130] = 1024	 [131] = 1024	 [132] = 1024	 [133] = 1024	 [134] = 1024	 [135] = 1024	 [136] = 1024	 [137] = 1024	 [138] = 1024	 [139] = 1024	 [140] = 1024	 [141] = 1024	 [142] = 1024	 [143] = 1024	 [144] = 1024	 [145] = 1024	 [146] = 1024	 [147] = 1024	 [148] = 1024	 [149] = 1024	 [150] = 1024	 [151] = 1024	 [152] = 1024	 [153] = 1024	 [154] = 1024	 [155] = 1024	 [156] = 1024	 [157] = 1024	 [158] = 1024	 [159] = 1024	 [160] = 1024	 [161] = 1024	 [162] = 1024	 [163] = 1024	 [164] = 1024	 [165] = 1024	 [166] = 1024	 [167] = 1024	 [168] = 1024	 [169] = 1024	 [170] = 1024	 [171] = 1024	 [172] = 1024	 [173] = 1024	 [174] = 1024	 [175] = 1024	 [176] = 1024	 [177] = 1024	 [178] = 1024	 [179] = 1024	 [180] = 1024	 [181] = 1024	 [182] = 1024	 [183] = 1024	 [184] = 1024	 [185] = 1024	 [186] = 1024	 [187] = 1024	 [188] = 1024	 [189] = 1024	 [190] = 1024	 [191] = 1024	 [192] = 1024	 [193] = 1024	 [194] = 1024	 [195] = 1024	 [196] = 1024	 [197] = 1024	 [198] = 1024	 [199] = 1024	 [200] = 1024	 [201] = 1024	 [202] = 1024	 [203] = 1024	 [204] = 1024	 [205] = 1024	 [206] = 1024	 [207] = 1024	 [208] = 1024	 [209] = 1024	 [210] = 1024	 [211] = 1024	 [212] = 1024	 [213] = 1024	 [214] = 1024	 [215] = 1024	 [216] = 1024	 [217] = 1024	 [218] = 1024	 [219] = 1024	 [220] = 1024	 [221] = 1024	 [222] = 1024	 [223] = 1024	 [224] = 1024	 [225] = 1024	 [226] = 1024	 [227] = 1024	 [228] = 1024	 [229] = 1024	 [230] = 1024	 [231] = 1024	 [232] = 1024	 [233] = 1024	 [234] = 1024	 [235] = 1024	 [236] = 1024	 [237] = 1024	 [238] = 1024	 [239] = 1024	 [240] = 1024	 [241] = 1024	 [242] = 1024	 [243] = 1024	 [244] = 1024	 [245] = 1024	 [246] = 1024	 [247] = 1024	 [248] = 1024	 [249] = 1024	 [250] = 1024	 [251] = 1024	 [252] = 1024	 [253] = 1024	 [254] = 1024	 [255] = 1024	 [256] = 1024	 [257] = 1024	 [258] = 1024	 [259] = 1024	 [260] = 1024	 [261] = 1024	 [262] = 1024	 [263] = 1024	 [264] = 1024	 [265] = 1024	 [266] = 1024	 [267] = 1024	 [268] = 1024	 [269] = 1024	 [270] = 1024	 [271] = 1024	 [272] = 1024	 [273] = 1024	 [274] = 1024	 [275] = 1024	 [276] = 1024	 [277] = 1024	 [278] = 1024	 [279] = 1024	 [280] = 1024	 [281] = 1024	 [282] = 1024	 [283] = 1024	 [284] = 1024	 [285] = 1024	 [286] = 1024	 [287] = 1024	 [288] = 1024	 [289] = 1024	 [290] = 1024	 [291] = 1024	 [292] = 1024	 [293] = 1024	 [294] = 1024	 [295] = 1024	 [296] = 1024	 [297] = 1024	 [298] = 1024	 [299] = 1024	 [300] = 1024	 [301] = 1024	 [302] = 1024	 [303] = 1024	 [304] = 1024	 [305] = 1024	 [306] = 1024	 [307] = 1024	 [308] = 1024	 [309] = 1024	 [310] = 1024	 [311] = 1024	 [312] = 1024	 [313] = 1024	 [314] = 1024	 [315] = 1024	 [316] = 1024	 [317] = 1024	 [318] = 1024	 [319] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 1.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+-----------+
|                   Event                  | Counter |   Core 0  |
+------------------------------------------+---------+-----------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 342230998 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 624540565 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 630295584 |
|              PWR_PKG_ENERGY              |   PWR0  |   11.4053 |
|              PWR_DRAM_ENERGY             |   PWR3  |    3.7015 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |         0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |        55 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |     81920 |
|                DRAM_READS                | MBOX0C1 |  17123785 |
|                DRAM_WRITES               | MBOX0C2 |  43950155 |
+------------------------------------------+---------+-----------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       2.0982 |
|        Runtime unhalted [s]       |       0.2711 |
|            Clock [MHz]            |    2282.9114 |
|                CPI                |       1.8249 |
|             Energy [J]            |      11.4053 |
|             Power [W]             |       5.4358 |
|          Energy DRAM [J]          |       3.7015 |
|           Power DRAM [W]          |       1.7642 |
|            DP [MFLOP/s]           |       0.1562 |
|          AVX DP [MFLOP/s]         |       0.1562 |
|          Packed [MUOPS/s]         |       0.0390 |
|          Scalar [MUOPS/s]         | 2.621329e-05 |
|  Memory load bandwidth [MBytes/s] |     522.3224 |
|  Memory load data volume [GBytes] |       1.0959 |
| Memory evict bandwidth [MBytes/s] |    1340.6001 |
| Memory evict data volume [GBytes] |       2.8128 |
|    Memory bandwidth [MBytes/s]    |    1862.9225 |
|    Memory data volume [GBytes]    |       3.9087 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Iteration without GEMM: 4
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 320 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	 [40] = 1024	 [41] = 1024	 [42] = 1024	 [43] = 1024	 [44] = 1024	 [45] = 1024	 [46] = 1024	 [47] = 1024	 [48] = 1024	 [49] = 1024	 [50] = 1024	 [51] = 1024	 [52] = 1024	 [53] = 1024	 [54] = 1024	 [55] = 1024	 [56] = 1024	 [57] = 1024	 [58] = 1024	 [59] = 1024	 [60] = 1024	 [61] = 1024	 [62] = 1024	 [63] = 1024	 [64] = 1024	 [65] = 1024	 [66] = 1024	 [67] = 1024	 [68] = 1024	 [69] = 1024	 [70] = 1024	 [71] = 1024	 [72] = 1024	 [73] = 1024	 [74] = 1024	 [75] = 1024	 [76] = 1024	 [77] = 1024	 [78] = 1024	 [79] = 1024	 [80] = 1024	 [81] = 1024	 [82] = 1024	 [83] = 1024	 [84] = 1024	 [85] = 1024	 [86] = 1024	 [87] = 1024	 [88] = 1024	 [89] = 1024	 [90] = 1024	 [91] = 1024	 [92] = 1024	 [93] = 1024	 [94] = 1024	 [95] = 1024	 [96] = 1024	 [97] = 1024	 [98] = 1024	 [99] = 1024	 [100] = 1024	 [101] = 1024	 [102] = 1024	 [103] = 1024	 [104] = 1024	 [105] = 1024	 [106] = 1024	 [107] = 1024	 [108] = 1024	 [109] = 1024	 [110] = 1024	 [111] = 1024	 [112] = 1024	 [113] = 1024	 [114] = 1024	 [115] = 1024	 [116] = 1024	 [117] = 1024	 [118] = 1024	 [119] = 1024	 [120] = 1024	 [121] = 1024	 [122] = 1024	 [123] = 1024	 [124] = 1024	 [125] = 1024	 [126] = 1024	 [127] = 1024	 [128] = 1024	 [129] = 1024	 [130] = 1024	 [131] = 1024	 [132] = 1024	 [133] = 1024	 [134] = 1024	 [135] = 1024	 [136] = 1024	 [137] = 1024	 [138] = 1024	 [139] = 1024	 [140] = 1024	 [141] = 1024	 [142] = 1024	 [143] = 1024	 [144] = 1024	 [145] = 1024	 [146] = 1024	 [147] = 1024	 [148] = 1024	 [149] = 1024	 [150] = 1024	 [151] = 1024	 [152] = 1024	 [153] = 1024	 [154] = 1024	 [155] = 1024	 [156] = 1024	 [157] = 1024	 [158] = 1024	 [159] = 1024	 [160] = 1024	 [161] = 1024	 [162] = 1024	 [163] = 1024	 [164] = 1024	 [165] = 1024	 [166] = 1024	 [167] = 1024	 [168] = 1024	 [169] = 1024	 [170] = 1024	 [171] = 1024	 [172] = 1024	 [173] = 1024	 [174] = 1024	 [175] = 1024	 [176] = 1024	 [177] = 1024	 [178] = 1024	 [179] = 1024	 [180] = 1024	 [181] = 1024	 [182] = 1024	 [183] = 1024	 [184] = 1024	 [185] = 1024	 [186] = 1024	 [187] = 1024	 [188] = 1024	 [189] = 1024	 [190] = 1024	 [191] = 1024	 [192] = 1024	 [193] = 1024	 [194] = 1024	 [195] = 1024	 [196] = 1024	 [197] = 1024	 [198] = 1024	 [199] = 1024	 [200] = 1024	 [201] = 1024	 [202] = 1024	 [203] = 1024	 [204] = 1024	 [205] = 1024	 [206] = 1024	 [207] = 1024	 [208] = 1024	 [209] = 1024	 [210] = 1024	 [211] = 1024	 [212] = 1024	 [213] = 1024	 [214] = 1024	 [215] = 1024	 [216] = 1024	 [217] = 1024	 [218] = 1024	 [219] = 1024	 [220] = 1024	 [221] = 1024	 [222] = 1024	 [223] = 1024	 [224] = 1024	 [225] = 1024	 [226] = 1024	 [227] = 1024	 [228] = 1024	 [229] = 1024	 [230] = 1024	 [231] = 1024	 [232] = 1024	 [233] = 1024	 [234] = 1024	 [235] = 1024	 [236] = 1024	 [237] = 1024	 [238] = 1024	 [239] = 1024	 [240] = 1024	 [241] = 1024	 [242] = 1024	 [243] = 1024	 [244] = 1024	 [245] = 1024	 [246] = 1024	 [247] = 1024	 [248] = 1024	 [249] = 1024	 [250] = 1024	 [251] = 1024	 [252] = 1024	 [253] = 1024	 [254] = 1024	 [255] = 1024	 [256] = 1024	 [257] = 1024	 [258] = 1024	 [259] = 1024	 [260] = 1024	 [261] = 1024	 [262] = 1024	 [263] = 1024	 [264] = 1024	 [265] = 1024	 [266] = 1024	 [267] = 1024	 [268] = 1024	 [269] = 1024	 [270] = 1024	 [271] = 1024	 [272] = 1024	 [273] = 1024	 [274] = 1024	 [275] = 1024	 [276] = 1024	 [277] = 1024	 [278] = 1024	 [279] = 1024	 [280] = 1024	 [281] = 1024	 [282] = 1024	 [283] = 1024	 [284] = 1024	 [285] = 1024	 [286] = 1024	 [287] = 1024	 [288] = 1024	 [289] = 1024	 [290] = 1024	 [291] = 1024	 [292] = 1024	 [293] = 1024	 [294] = 1024	 [295] = 1024	 [296] = 1024	 [297] = 1024	 [298] = 1024	 [299] = 1024	 [300] = 1024	 [301] = 1024	 [302] = 1024	 [303] = 1024	 [304] = 1024	 [305] = 1024	 [306] = 1024	 [307] = 1024	 [308] = 1024	 [309] = 1024	 [310] = 1024	 [311] = 1024	 [312] = 1024	 [313] = 1024	 [314] = 1024	 [315] = 1024	 [316] = 1024	 [317] = 1024	 [318] = 1024	 [319] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 1.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+-----------+
|                   Event                  | Counter |   Core 0  |
+------------------------------------------+---------+-----------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 342231003 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 620202841 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 626427072 |
|              PWR_PKG_ENERGY              |   PWR0  |   11.3579 |
|              PWR_DRAM_ENERGY             |   PWR3  |    3.7007 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |         0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |        55 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |     81920 |
|                DRAM_READS                | MBOX0C1 |  16893439 |
|                DRAM_WRITES               | MBOX0C2 |  43931696 |
+------------------------------------------+---------+-----------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       2.1005 |
|        Runtime unhalted [s]       |       0.2692 |
|            Clock [MHz]            |    2281.0287 |
|                CPI                |       1.8122 |
|             Energy [J]            |      11.3579 |
|             Power [W]             |       5.4072 |
|          Energy DRAM [J]          |       3.7007 |
|           Power DRAM [W]          |       1.7618 |
|            DP [MFLOP/s]           |       0.1560 |
|          AVX DP [MFLOP/s]         |       0.1560 |
|          Packed [MUOPS/s]         |       0.0390 |
|          Scalar [MUOPS/s]         | 2.618380e-05 |
|  Memory load bandwidth [MBytes/s] |     514.7165 |
|  Memory load data volume [GBytes] |       1.0812 |
| Memory evict bandwidth [MBytes/s] |    1338.5296 |
| Memory evict data volume [GBytes] |       2.8116 |
|    Memory bandwidth [MBytes/s]    |    1853.2461 |
|    Memory data volume [GBytes]    |       3.8928 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

Iteration without GEMM: 5
--------------------------------------------------------------------------------
CPU name:	Intel(R) Core(TM) i3-6100U CPU @ 2.30GHz
CPU type:	Intel Skylake processor
CPU clock:	2.30 GHz
--------------------------------------------------------------------------------
Sleeping longer as likwid_sleep() called without prior initialization
Sleeping longer as likwid_sleep() called without prior initialization

gemm call NN:	Matrix size : C[1x1024]=A[1x2]xB[2x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1024]=A[1x1024]xB[1024x1024]
gemm call NN:	Matrix size : C[1x1]=A[1x1024]xB[1024x1]
Details of Neural Network
Number of Input neurons : 2 
Number of hidden layers : 320 
Number of Output Neurons : 1 
Number of hidden neurons in each layers :  [0] = 1024	 [1] = 1024	 [2] = 1024	 [3] = 1024	 [4] = 1024	 [5] = 1024	 [6] = 1024	 [7] = 1024	 [8] = 1024	 [9] = 1024	 [10] = 1024	 [11] = 1024	 [12] = 1024	 [13] = 1024	 [14] = 1024	 [15] = 1024	 [16] = 1024	 [17] = 1024	 [18] = 1024	 [19] = 1024	 [20] = 1024	 [21] = 1024	 [22] = 1024	 [23] = 1024	 [24] = 1024	 [25] = 1024	 [26] = 1024	 [27] = 1024	 [28] = 1024	 [29] = 1024	 [30] = 1024	 [31] = 1024	 [32] = 1024	 [33] = 1024	 [34] = 1024	 [35] = 1024	 [36] = 1024	 [37] = 1024	 [38] = 1024	 [39] = 1024	 [40] = 1024	 [41] = 1024	 [42] = 1024	 [43] = 1024	 [44] = 1024	 [45] = 1024	 [46] = 1024	 [47] = 1024	 [48] = 1024	 [49] = 1024	 [50] = 1024	 [51] = 1024	 [52] = 1024	 [53] = 1024	 [54] = 1024	 [55] = 1024	 [56] = 1024	 [57] = 1024	 [58] = 1024	 [59] = 1024	 [60] = 1024	 [61] = 1024	 [62] = 1024	 [63] = 1024	 [64] = 1024	 [65] = 1024	 [66] = 1024	 [67] = 1024	 [68] = 1024	 [69] = 1024	 [70] = 1024	 [71] = 1024	 [72] = 1024	 [73] = 1024	 [74] = 1024	 [75] = 1024	 [76] = 1024	 [77] = 1024	 [78] = 1024	 [79] = 1024	 [80] = 1024	 [81] = 1024	 [82] = 1024	 [83] = 1024	 [84] = 1024	 [85] = 1024	 [86] = 1024	 [87] = 1024	 [88] = 1024	 [89] = 1024	 [90] = 1024	 [91] = 1024	 [92] = 1024	 [93] = 1024	 [94] = 1024	 [95] = 1024	 [96] = 1024	 [97] = 1024	 [98] = 1024	 [99] = 1024	 [100] = 1024	 [101] = 1024	 [102] = 1024	 [103] = 1024	 [104] = 1024	 [105] = 1024	 [106] = 1024	 [107] = 1024	 [108] = 1024	 [109] = 1024	 [110] = 1024	 [111] = 1024	 [112] = 1024	 [113] = 1024	 [114] = 1024	 [115] = 1024	 [116] = 1024	 [117] = 1024	 [118] = 1024	 [119] = 1024	 [120] = 1024	 [121] = 1024	 [122] = 1024	 [123] = 1024	 [124] = 1024	 [125] = 1024	 [126] = 1024	 [127] = 1024	 [128] = 1024	 [129] = 1024	 [130] = 1024	 [131] = 1024	 [132] = 1024	 [133] = 1024	 [134] = 1024	 [135] = 1024	 [136] = 1024	 [137] = 1024	 [138] = 1024	 [139] = 1024	 [140] = 1024	 [141] = 1024	 [142] = 1024	 [143] = 1024	 [144] = 1024	 [145] = 1024	 [146] = 1024	 [147] = 1024	 [148] = 1024	 [149] = 1024	 [150] = 1024	 [151] = 1024	 [152] = 1024	 [153] = 1024	 [154] = 1024	 [155] = 1024	 [156] = 1024	 [157] = 1024	 [158] = 1024	 [159] = 1024	 [160] = 1024	 [161] = 1024	 [162] = 1024	 [163] = 1024	 [164] = 1024	 [165] = 1024	 [166] = 1024	 [167] = 1024	 [168] = 1024	 [169] = 1024	 [170] = 1024	 [171] = 1024	 [172] = 1024	 [173] = 1024	 [174] = 1024	 [175] = 1024	 [176] = 1024	 [177] = 1024	 [178] = 1024	 [179] = 1024	 [180] = 1024	 [181] = 1024	 [182] = 1024	 [183] = 1024	 [184] = 1024	 [185] = 1024	 [186] = 1024	 [187] = 1024	 [188] = 1024	 [189] = 1024	 [190] = 1024	 [191] = 1024	 [192] = 1024	 [193] = 1024	 [194] = 1024	 [195] = 1024	 [196] = 1024	 [197] = 1024	 [198] = 1024	 [199] = 1024	 [200] = 1024	 [201] = 1024	 [202] = 1024	 [203] = 1024	 [204] = 1024	 [205] = 1024	 [206] = 1024	 [207] = 1024	 [208] = 1024	 [209] = 1024	 [210] = 1024	 [211] = 1024	 [212] = 1024	 [213] = 1024	 [214] = 1024	 [215] = 1024	 [216] = 1024	 [217] = 1024	 [218] = 1024	 [219] = 1024	 [220] = 1024	 [221] = 1024	 [222] = 1024	 [223] = 1024	 [224] = 1024	 [225] = 1024	 [226] = 1024	 [227] = 1024	 [228] = 1024	 [229] = 1024	 [230] = 1024	 [231] = 1024	 [232] = 1024	 [233] = 1024	 [234] = 1024	 [235] = 1024	 [236] = 1024	 [237] = 1024	 [238] = 1024	 [239] = 1024	 [240] = 1024	 [241] = 1024	 [242] = 1024	 [243] = 1024	 [244] = 1024	 [245] = 1024	 [246] = 1024	 [247] = 1024	 [248] = 1024	 [249] = 1024	 [250] = 1024	 [251] = 1024	 [252] = 1024	 [253] = 1024	 [254] = 1024	 [255] = 1024	 [256] = 1024	 [257] = 1024	 [258] = 1024	 [259] = 1024	 [260] = 1024	 [261] = 1024	 [262] = 1024	 [263] = 1024	 [264] = 1024	 [265] = 1024	 [266] = 1024	 [267] = 1024	 [268] = 1024	 [269] = 1024	 [270] = 1024	 [271] = 1024	 [272] = 1024	 [273] = 1024	 [274] = 1024	 [275] = 1024	 [276] = 1024	 [277] = 1024	 [278] = 1024	 [279] = 1024	 [280] = 1024	 [281] = 1024	 [282] = 1024	 [283] = 1024	 [284] = 1024	 [285] = 1024	 [286] = 1024	 [287] = 1024	 [288] = 1024	 [289] = 1024	 [290] = 1024	 [291] = 1024	 [292] = 1024	 [293] = 1024	 [294] = 1024	 [295] = 1024	 [296] = 1024	 [297] = 1024	 [298] = 1024	 [299] = 1024	 [300] = 1024	 [301] = 1024	 [302] = 1024	 [303] = 1024	 [304] = 1024	 [305] = 1024	 [306] = 1024	 [307] = 1024	 [308] = 1024	 [309] = 1024	 [310] = 1024	 [311] = 1024	 [312] = 1024	 [313] = 1024	 [314] = 1024	 [315] = 1024	 [316] = 1024	 [317] = 1024	 [318] = 1024	 [319] = 1024	
Input Neurons: 1.000000	1.000000	
Output Value: 
Output: 1.000000
--------------------------------------------------------------------------------
Group 1: MEM_DP
+------------------------------------------+---------+-----------+
|                   Event                  | Counter |   Core 0  |
+------------------------------------------+---------+-----------+
|             INSTR_RETIRED_ANY            |  FIXC0  | 342231199 |
|           CPU_CLK_UNHALTED_CORE          |  FIXC1  | 620680578 |
|           CPU_CLK_UNHALTED_REF           |  FIXC2  | 625838784 |
|              PWR_PKG_ENERGY              |   PWR0  |   11.2802 |
|              PWR_DRAM_ENERGY             |   PWR3  |    3.6891 |
| FP_ARITH_INST_RETIRED_128B_PACKED_DOUBLE |   PMC0  |         0 |
|    FP_ARITH_INST_RETIRED_SCALAR_DOUBLE   |   PMC1  |        54 |
| FP_ARITH_INST_RETIRED_256B_PACKED_DOUBLE |   PMC2  |     81920 |
|                DRAM_READS                | MBOX0C1 |  16787287 |
|                DRAM_WRITES               | MBOX0C2 |  43928344 |
+------------------------------------------+---------+-----------+

+-----------------------------------+--------------+
|               Metric              |    Core 0    |
+-----------------------------------+--------------+
|        Runtime (RDTSC) [s]        |       2.0945 |
|        Runtime unhalted [s]       |       0.2694 |
|            Clock [MHz]            |    2284.9246 |
|                CPI                |       1.8136 |
|             Energy [J]            |      11.2802 |
|             Power [W]             |       5.3856 |
|          Energy DRAM [J]          |       3.6891 |
|           Power DRAM [W]          |       1.7614 |
|            DP [MFLOP/s]           |       0.1565 |
|          AVX DP [MFLOP/s]         |       0.1564 |
|          Packed [MUOPS/s]         |       0.0391 |
|          Scalar [MUOPS/s]         | 2.578189e-05 |
|  Memory load bandwidth [MBytes/s] |     512.9575 |
|  Memory load data volume [GBytes] |       1.0744 |
| Memory evict bandwidth [MBytes/s] |    1342.2880 |
| Memory evict data volume [GBytes] |       2.8114 |
|    Memory bandwidth [MBytes/s]    |    1855.2455 |
|    Memory data volume [GBytes]    |       3.8858 |
|       Operational intensity       |       0.0001 |
+-----------------------------------+--------------+

